androidx.drawerlayout.R$attr
androidx.vectordrawable.R
androidx.appcompat.app.AppCompatDelegateImpl
    void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback)
    void <init>(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback)
    public void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    public boolean hasWindowFeature(int)
    public void setHandleNativeActionModesEnabled(boolean)
    android.view.ViewGroup getSubDecor()
    public void setLocalNightMode(int)
    public final androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    private static final boolean DEBUG
    static final java.lang.String EXCEPTION_HANDLER_MESSAGE_SUFFIX
androidx.recyclerview.widget.ThreadUtil
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate
    public void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
androidx.viewpager2.widget.MarginPageTransformer
androidx.activity.R$attr
androidx.core.text.util.FindAddress
androidx.recyclerview.R$dimen
    private void <init>()
com.google.android.material.circularreveal.CircularRevealRelativeLayout
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void actualDraw(android.graphics.Canvas)
    public boolean actualIsOpaque()
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl
    public float getRadius()
androidx.recyclerview.R$string
androidx.annotation.Size
androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter
androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice
androidx.coordinatorlayout.R$string
androidx.cardview.widget.CardViewBaseImpl
    private androidx.cardview.widget.RoundRectDrawableWithShadow createBackground(android.content.Context,android.content.res.ColorStateList,float,float,float)
    public void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)
androidx.annotation.ContentView
com.google.android.material.animation.MatrixEvaluator
    public synthetic bridge java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
com.google.android.material.snackbar.BaseTransientBottomBar
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments
    public java.lang.String getHTMLElement()
androidx.core.provider.FontsContractCompat$4$2
androidx.transition.ViewUtils
    static void setAnimationMatrix(android.view.View,android.graphics.Matrix)
    private void <init>()
    private static final java.lang.String TAG
androidx.fragment.R$styleable
com.google.android.material.datepicker.RangeDateSelector
    private void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)
    private void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)
    private void setInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)
    static synthetic java.lang.Long access$002(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long)
    static synthetic void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)
    static synthetic java.lang.Long access$202(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long)
    public boolean isSelectionComplete()
    public void setSelection(androidx.core.util.Pair)
    public int getDefaultThemeResId(android.content.Context)
    public java.lang.String getSelectionDisplayString(android.content.Context)
    public int getDefaultTitleResId()
    public android.view.View onCreateTextInputView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener)
    public synthetic bridge void setSelection(java.lang.Object)
    private java.lang.String invalidRangeStartError
androidx.cardview.widget.CardViewApi21Impl
    public void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)
androidx.vectordrawable.animated.R$drawable
com.google.android.material.chip.ChipDrawable
    public static com.google.android.material.chip.ChipDrawable createFromResource(android.content.Context,int)
    public void getChipTouchBounds(android.graphics.RectF)
    boolean isShapeThemingEnabled()
    public void setTextResource(int)
    public boolean isChipIconVisible()
    public boolean isChipIconEnabled()
    public void setChipIconEnabledResource(int)
    public void setChipIconEnabled(boolean)
    public boolean isCloseIconEnabled()
    public void setCloseIconVisible(int)
    public void setCloseIconEnabledResource(int)
    public void setCloseIconEnabled(boolean)
    public boolean isCheckedIconVisible()
    public boolean isCheckedIconEnabled()
    public void setCheckedIconEnabledResource(int)
    public void setCheckedIconEnabled(boolean)
    public int getMaxWidth()
    private static final boolean DEBUG
    private static final java.lang.String NAMESPACE_APP
com.google.android.material.internal.ParcelableSparseIntArray
    public void <init>(android.util.SparseIntArray)
androidx.recyclerview.widget.MessageThreadUtil$1
androidx.collection.SimpleArrayMap
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final boolean CONCURRENT_MODIFICATION_EXCEPTIONS
    private static final int BASE_SIZE
    private static final int CACHE_SIZE
androidx.core.graphics.TypefaceCompat
    private void <init>()
com.google.android.material.datepicker.DateSelector
    public abstract boolean isSelectionComplete()
    public abstract void setSelection(java.lang.Object)
    public abstract java.lang.String getSelectionDisplayString(android.content.Context)
    public abstract int getDefaultTitleResId()
    public abstract int getDefaultThemeResId(android.content.Context)
    public abstract android.view.View onCreateTextInputView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView
    public void clearSelection()
    public synthetic bridge int lookForSelectablePosition(int,boolean)
androidx.viewpager2.widget.CompositeOnPageChangeCallback
    void <init>(int)
    private void throwCallbackListModifiedWhileInUse(java.util.ConcurrentModificationException)
    void addOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback)
    void removeOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback)
    public void onPageScrolled(int,float,int)
    public void onPageScrollStateChanged(int)
    private final java.util.List mCallbacks
androidx.annotation.StringDef
androidx.core.graphics.TypefaceCompatUtil
    private void <init>()
    private static final java.lang.String TAG
    private static final java.lang.String CACHE_FILE_PREFIX
androidx.transition.ChangeScroll
androidx.appcompat.app.ResourcesFlusher
    private void <init>()
    private static final java.lang.String TAG
androidx.viewpager.R$integer
androidx.recyclerview.widget.DiffUtil$ItemCallback
androidx.transition.ImageViewUtils
androidx.appcompat.widget.ActionMenuView$LayoutParams
    void <init>(int,int,boolean)
androidx.versionedparcelable.ParcelUtils
androidx.appcompat.app.AlertController$ButtonHandler
    private static final int MSG_DISMISS_DIALOG
androidx.core.text.util.LinkifyCompat$LinkifyMask
com.google.android.material.internal.ThemeEnforcement
    private void <init>()
    public static boolean isAppCompatTheme(android.content.Context)
    public static boolean isMaterialTheme(android.content.Context)
    private static final java.lang.String APPCOMPAT_THEME_NAME
    private static final java.lang.String MATERIAL_THEME_NAME
com.google.android.material.internal.package-info
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue
androidx.appcompat.widget.PopupMenu$OnDismissListener
com.google.android.material.bottomappbar.BottomAppBar$3
androidx.vectordrawable.R$layout
androidx.transition.ChangeImageTransform$3
androidx.core.view.accessibility.AccessibilityEventCompat
    private void <init>()
    public static int getRecordCount(android.view.accessibility.AccessibilityEvent)
    public static void appendRecord(android.view.accessibility.AccessibilityEvent,androidx.core.view.accessibility.AccessibilityRecordCompat)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent)
    public static void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int)
    public static int getMovementGranularity(android.view.accessibility.AccessibilityEvent)
    public static void setAction(android.view.accessibility.AccessibilityEvent,int)
    public static int getAction(android.view.accessibility.AccessibilityEvent)
    public static final int TYPE_VIEW_HOVER_ENTER
    public static final int TYPE_VIEW_HOVER_EXIT
    public static final int TYPE_TOUCH_EXPLORATION_GESTURE_START
    public static final int TYPE_TOUCH_EXPLORATION_GESTURE_END
    public static final int TYPE_WINDOW_CONTENT_CHANGED
    public static final int TYPE_VIEW_SCROLLED
    public static final int TYPE_VIEW_TEXT_SELECTION_CHANGED
    public static final int TYPE_ANNOUNCEMENT
    public static final int TYPE_VIEW_ACCESSIBILITY_FOCUSED
    public static final int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    public static final int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    public static final int TYPE_GESTURE_DETECTION_START
    public static final int TYPE_GESTURE_DETECTION_END
    public static final int TYPE_TOUCH_INTERACTION_START
    public static final int TYPE_TOUCH_INTERACTION_END
    public static final int TYPE_WINDOWS_CHANGED
    public static final int TYPE_VIEW_CONTEXT_CLICKED
    public static final int TYPE_ASSIST_READING_CONTEXT
    public static final int CONTENT_CHANGE_TYPE_UNDEFINED
    public static final int CONTENT_CHANGE_TYPE_SUBTREE
    public static final int CONTENT_CHANGE_TYPE_TEXT
    public static final int CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION
    public static final int CONTENT_CHANGE_TYPE_PANE_TITLE
    public static final int CONTENT_CHANGE_TYPE_PANE_APPEARED
    public static final int CONTENT_CHANGE_TYPE_PANE_DISAPPEARED
    public static final int TYPES_ALL_MASK
com.qy.R$xml
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat
androidx.core.content.res.FontResourcesParserCompat
    private void <init>()
    private static final int NORMAL_WEIGHT
    private static final int ITALIC
    public static final int FETCH_STRATEGY_BLOCKING
    public static final int FETCH_STRATEGY_ASYNC
    public static final int INFINITE_TIMEOUT_VALUE
    private static final int DEFAULT_TIMEOUT_MILLIS
androidx.drawerlayout.R$string
com.google.android.material.datepicker.SingleDateSelector
    private void clearSelection()
    static synthetic void access$000(com.google.android.material.datepicker.SingleDateSelector)
    public void setSelection(java.lang.Long)
    public boolean isSelectionComplete()
    public android.view.View onCreateTextInputView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener)
    public int getDefaultThemeResId(android.content.Context)
    public java.lang.String getSelectionDisplayString(android.content.Context)
    public int getDefaultTitleResId()
    public synthetic bridge void setSelection(java.lang.Object)
androidx.appcompat.widget.DrawableUtils
    private void <init>()
    private static final java.lang.String TAG
    private static final java.lang.String VECTOR_DRAWABLE_CLAZZ_NAME
androidx.core.app.ComponentActivity
    public void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
    public androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
androidx.fragment.app.FragmentActivity$HostCallbacks
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
    public void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
    public boolean onShouldShowRequestPermissionRationale(java.lang.String)
androidx.core.view.ScrollingView
    public abstract int computeHorizontalScrollRange()
    public abstract int computeHorizontalScrollOffset()
    public abstract int computeHorizontalScrollExtent()
    public abstract int computeVerticalScrollRange()
    public abstract int computeVerticalScrollOffset()
    public abstract int computeVerticalScrollExtent()
androidx.recyclerview.widget.AdapterHelper
    varargs androidx.recyclerview.widget.AdapterHelper addUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp[])
    boolean onItemRangeChanged(int,int,java.lang.Object)
    boolean onItemRangeInserted(int,int)
    boolean onItemRangeRemoved(int,int)
    boolean onItemRangeMoved(int,int,int)
    static final int POSITION_TYPE_INVISIBLE
    static final int POSITION_TYPE_NEW_OR_LAID_OUT
    private static final boolean DEBUG
    private static final java.lang.String TAG
androidx.core.hardware.display.DisplayManagerCompat
androidx.core.app.FrameMetricsAggregator$MetricType
androidx.appcompat.R$color
    private void <init>()
androidx.core.widget.TextViewCompat
    private void <init>()
    public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
    public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
    public static int getMinLines(android.widget.TextView)
    public static void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int)
    public static void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
    public static void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
    public static int getAutoSizeTextType(android.widget.TextView)
    public static int getAutoSizeStepGranularity(android.widget.TextView)
    public static int getAutoSizeMinTextSize(android.widget.TextView)
    public static int getAutoSizeMaxTextSize(android.widget.TextView)
    public static int[] getAutoSizeTextAvailableSizes(android.widget.TextView)
    public static void setCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
    public static android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
    public static android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
    private static final java.lang.String LOG_TAG
    public static final int AUTO_SIZE_TEXT_TYPE_NONE
    public static final int AUTO_SIZE_TEXT_TYPE_UNIFORM
    private static java.lang.reflect.Field sMinimumField
    private static boolean sMinimumFieldFetched
    private static java.lang.reflect.Field sMinModeField
    private static boolean sMinModeFieldFetched
    private static final int LINES
androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback
    public void <init>()
    public void onPageScrolled(int,float,int)
    public void onPageSelected(int)
    public void onPageScrollStateChanged(int)
androidx.lifecycle.MediatorLiveData$Source
androidx.core.graphics.PathParser
    public static boolean interpolatePathDataNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],float)
    private void <init>()
    private static final java.lang.String LOGTAG
androidx.savedstate.Recreator
    static final java.lang.String CLASSES_KEY
    static final java.lang.String COMPONENT_KEY
com.google.android.material.bottomnavigation.BottomNavigationMenuView$1
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$Size
android.support.constraint.solver.Pools$SimplePool
    private boolean isInPool(java.lang.Object)
androidx.core.view.accessibility.AccessibilityManagerCompat
androidx.viewpager2.widget.ViewPager2$OffscreenPageLimit
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord
    void <init>(int,com.google.android.material.snackbar.SnackbarManager$Callback)
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback
android.support.constraint.solver.widgets.ConstraintHorizontalLayout
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2
androidx.core.content.PermissionChecker
    private void <init>()
    public static int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)
    public static int checkCallingOrSelfPermission(android.content.Context,java.lang.String)
    public static final int PERMISSION_GRANTED
    public static final int PERMISSION_DENIED
    public static final int PERMISSION_DENIED_APP_OP
com.google.android.material.snackbar.BaseTransientBottomBar$16
com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener
    public abstract boolean onNavigationItemSelected(android.view.MenuItem)
androidx.customview.R$color
com.google.android.material.shape.MaterialShapeUtils
    private void <init>()
androidx.fragment.app.FragmentTabHost$TabInfo
    void <init>(java.lang.String,java.lang.Class,android.os.Bundle)
androidx.core.view.NestedScrollingChild
    public abstract void setNestedScrollingEnabled(boolean)
    public abstract boolean startNestedScroll(int)
    public abstract boolean hasNestedScrollingParent()
    public abstract boolean dispatchNestedScroll(int,int,int,int,int[])
    public abstract boolean dispatchNestedPreScroll(int,int,int[],int[])
    public abstract boolean dispatchNestedFling(float,float,boolean)
    public abstract boolean dispatchNestedPreFling(float,float)
androidx.core.view.DragStartHelper$OnDragStartListener
androidx.cardview.widget.CardViewDelegate
    public abstract void setCardBackground(android.graphics.drawable.Drawable)
androidx.transition.AutoTransition
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager
    private void unregisterForLayoutCallback(android.view.View)
    void addAccessibilityPane(android.view.View)
    void removeAccessibilityPane(android.view.View)
androidx.core.view.animation.PathInterpolatorCompat
androidx.loader.content.ModernAsyncTask$InternalHandler
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback
androidx.transition.Transition$EpicenterCallback
    public abstract android.graphics.Rect onGetEpicenter(androidx.transition.Transition)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments
    public int getX()
    public int getY()
androidx.core.app.ActivityCompat$SharedElementCallback21Impl
androidx.transition.TranslationAnimationCreator
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuHeaderItem
androidx.appcompat.view.ActionMode
    public boolean isUiFocusable()
androidx.versionedparcelable.VersionedParcelParcel
    public void writeByteArray(byte[],int,int)
    public void writeLong(long)
    public void writeFloat(float)
    public void writeDouble(double)
    public void writeStrongBinder(android.os.IBinder)
    public void writeStrongInterface(android.os.IInterface)
    public void writeBundle(android.os.Bundle)
    public long readLong()
    public float readFloat()
    public double readDouble()
    public android.os.IBinder readStrongBinder()
    public android.os.Bundle readBundle()
    private static final boolean DEBUG
    private static final java.lang.String TAG
androidx.recyclerview.widget.AsyncListDiffer$ListListener
androidx.recyclerview.widget.MessageThreadUtil$1$1
android.support.constraint.solver.LinearSystem
    private void addSingleError(android.support.constraint.solver.ArrayRow,int)
    private android.support.constraint.solver.SolverVariable createVariable(java.lang.String,android.support.constraint.solver.SolverVariable$Type)
    private void displayRows()
    private void displaySolverVariables()
    private java.lang.String getDisplaySize(int)
    private java.lang.String getDisplayStrength(int)
    public static android.support.constraint.solver.ArrayRow createRowEquals(android.support.constraint.solver.LinearSystem,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,boolean)
    public static android.support.constraint.solver.ArrayRow createRowGreaterThan(android.support.constraint.solver.LinearSystem,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,boolean)
    public static android.support.constraint.solver.ArrayRow createRowLowerThan(android.support.constraint.solver.LinearSystem,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,boolean)
    public static android.support.constraint.solver.ArrayRow createRowCentering(android.support.constraint.solver.LinearSystem,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,float,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,boolean)
    public void fillMetrics(android.support.constraint.solver.Metrics)
    android.support.constraint.solver.LinearSystem$Row getGoal()
    android.support.constraint.solver.ArrayRow getRow(int)
    float getValueFor(java.lang.String)
    android.support.constraint.solver.SolverVariable getVariable(java.lang.String,android.support.constraint.solver.SolverVariable$Type)
    void displayReadableRows()
    public void displayVariablesReadableRows()
    public int getMemoryUsed()
    public int getNumEquations()
    public int getNumVariables()
    void displaySystemInformations()
    public void addGreaterThan(android.support.constraint.solver.SolverVariable,int)
    public void addEquality(android.support.constraint.solver.SolverVariable,int,int)
    public static final boolean FULL_DEBUG
    private static final boolean DEBUG
androidx.recyclerview.widget.AsyncListDiffer$1$1
androidx.core.widget.PopupMenuCompat
androidx.constraintlayout.solver.Pools$SimplePool
    private boolean isInPool(java.lang.Object)
androidx.lifecycle.R
androidx.core.app.RemoteInput$Builder
androidx.fragment.app.DialogFragment$1
com.google.android.material.shape.RoundedCornerTreatment
    public void <init>(float)
com.google.android.material.badge.BadgeDrawable$SavedState
    static synthetic int access$200(com.google.android.material.badge.BadgeDrawable$SavedState)
    static synthetic int access$300(com.google.android.material.badge.BadgeDrawable$SavedState)
    static synthetic java.lang.CharSequence access$602(com.google.android.material.badge.BadgeDrawable$SavedState,java.lang.CharSequence)
    static synthetic int access$702(com.google.android.material.badge.BadgeDrawable$SavedState,int)
androidx.collection.ArrayMap
    public boolean containsAll(java.util.Collection)
    public boolean removeAll(java.util.Collection)
androidx.drawerlayout.R$styleable
androidx.viewpager2.widget.ScrollEventAdapter$ScrollEventValues
androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder
androidx.appcompat.widget.AppCompatImageHelper
    void setInternalImageTint(android.content.res.ColorStateList)
com.google.android.material.transformation.TransformationChildCard
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.DiffUtil$1
androidx.loader.app.LoaderManager$LoaderCallbacks
androidx.core.content.IntentCompat
androidx.annotation.InspectableProperty$EnumEntry
androidx.cardview.R$attr
androidx.fragment.app.FragmentController
    public androidx.loader.app.LoaderManager getSupportLoaderManager()
    public int getActiveFragmentsCount()
    public java.util.List getActiveFragments(java.util.List)
    public void restoreAllState(android.os.Parcelable,java.util.List)
    public void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)
    public java.util.List retainNonConfig()
    public androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig()
    public void dispatchReallyStop()
    public void dispatchDestroyView()
    public void doLoaderStart()
    public void doLoaderStop(boolean)
    public void doLoaderRetain()
    public void doLoaderDestroy()
    public void reportLoaderStart()
    public androidx.collection.SimpleArrayMap retainLoaderNonConfig()
    public void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap)
    public void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.fragment.R$style
androidx.core.database.CursorWindowCompat
androidx.fragment.app.FragmentStatePagerAdapter
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem
com.google.android.material.snackbar.BaseTransientBottomBar$1
androidx.annotation.InspectableProperty$FlagEntry
com.google.android.material.bottomsheet.BottomSheetBehavior
    public static com.google.android.material.bottomsheet.BottomSheetBehavior from(android.view.View)
    public boolean isFitToContents()
    public int getPeekHeight()
    public float getHalfExpandedRatio()
    public boolean isHideable()
    public boolean getSkipCollapsed()
    public int getSaveFlags()
    public void setBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
    public void addBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
    public void removeBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
    public int getState()
    int getPeekHeightMin()
    public void disableShapeAnimations()
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int STATE_EXPANDED
    public static final int STATE_COLLAPSED
    public static final int STATE_HIDDEN
    public static final int STATE_HALF_EXPANDED
    public static final int PEEK_HEIGHT_AUTO
    public static final int SAVE_PEEK_HEIGHT
    public static final int SAVE_FIT_TO_CONTENTS
    public static final int SAVE_HIDEABLE
    public static final int SAVE_SKIP_COLLAPSED
    public static final int SAVE_ALL
    public static final int SAVE_NONE
    private static final java.lang.String TAG
    private static final float HIDE_THRESHOLD
    private static final float HIDE_FRICTION
    private static final int CORNER_ANIMATION_DURATION
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
android.support.constraint.solver.SolverVariable
    private static java.lang.String getUniqueName(android.support.constraint.solver.SolverVariable$Type,java.lang.String)
    public void <init>(java.lang.String,android.support.constraint.solver.SolverVariable$Type)
    void clearStrengths()
    java.lang.String strengthsToString()
    public java.lang.String getName()
    public void setName(java.lang.String)
    private static final boolean INTERNAL_DEBUG
    public static final int STRENGTH_NONE
    public static final int STRENGTH_LOW
    public static final int STRENGTH_MEDIUM
    public static final int STRENGTH_HIGH
    public static final int STRENGTH_HIGHEST
    public static final int STRENGTH_EQUALITY
    public static final int STRENGTH_FIXED
    public static final int STRENGTH_BARRIER
    static final int MAX_STRENGTH
androidx.core.widget.TextViewCompat$OreoCallback
    private static final int MENU_ITEM_ORDER_PROCESS_TEXT_INTENT_ACTIONS_START
androidx.core.util.PatternsCompat
androidx.core.net.DatagramSocketWrapper
androidx.constraintlayout.solver.widgets.ChainHead
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getFirst()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstVisibleWidget()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getLast()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getLastVisibleWidget()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getHead()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstMatchConstraintWidget()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getLastMatchConstraintWidget()
    public float getTotalWeight()
android.support.constraint.solver.widgets.ConstraintWidgetContainer
    public void <init>(int,int,int,int)
    public void <init>(int,int)
    public void fillMetrics(android.support.constraint.solver.Metrics)
    public java.lang.String getType()
    public void setPadding(int,int,int,int)
    public void resetGraph()
    public java.util.ArrayList getVerticalGuidelines()
    public java.util.ArrayList getHorizontalGuidelines()
    public android.support.constraint.solver.LinearSystem getSystem()
    public java.util.List getWidgetGroups()
    private static final boolean USE_SNAPSHOT
    private static final int MAX_ITERATIONS
    private static final boolean DEBUG
    private static final boolean DEBUG_LAYOUT
    static final boolean DEBUG_GRAPH
androidx.vectordrawable.R$string
com.google.android.material.datepicker.MaterialDatePicker
    public void <init>()
    public static long todayInUtcMilliseconds()
    public static long thisMonthInUtcMilliseconds()
    static com.google.android.material.datepicker.MaterialDatePicker newInstance(com.google.android.material.datepicker.MaterialDatePicker$Builder)
    private int getThemeResId(android.content.Context)
    private void updateHeader()
    private void startPickerFragment()
    private void initHeaderToggle(android.content.Context)
    private void updateToggleContentDescription(com.google.android.material.internal.CheckableImageButton)
    private static android.graphics.drawable.Drawable createHeaderToggleDrawable(android.content.Context)
    private static int getDialogPickerHeight(android.content.Context)
    private static int getPaddedPickerWidth(android.content.Context)
    static synthetic java.util.LinkedHashSet access$000(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic java.util.LinkedHashSet access$100(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic void access$200(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic com.google.android.material.datepicker.DateSelector access$300(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic android.widget.Button access$400(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic com.google.android.material.internal.CheckableImageButton access$500(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic void access$600(com.google.android.material.datepicker.MaterialDatePicker,com.google.android.material.internal.CheckableImageButton)
    static synthetic void access$700(com.google.android.material.datepicker.MaterialDatePicker)
    public java.lang.String getHeaderText()
    public final void onSaveInstanceState(android.os.Bundle)
    public final void onCreate(android.os.Bundle)
    public final android.app.Dialog onCreateDialog(android.os.Bundle)
    public final android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
    public void onStart()
    public void onStop()
    public final void onCancel(android.content.DialogInterface)
    public final void onDismiss(android.content.DialogInterface)
    public final java.lang.Object getSelection()
    public boolean addOnPositiveButtonClickListener(com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener)
    public boolean removeOnPositiveButtonClickListener(com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener)
    public void clearOnPositiveButtonClickListeners()
    public boolean addOnNegativeButtonClickListener(android.view.View$OnClickListener)
    public boolean removeOnNegativeButtonClickListener(android.view.View$OnClickListener)
    public void clearOnNegativeButtonClickListeners()
    public boolean addOnCancelListener(android.content.DialogInterface$OnCancelListener)
    public boolean removeOnCancelListener(android.content.DialogInterface$OnCancelListener)
    public void clearOnCancelListeners()
    public boolean addOnDismissListener(android.content.DialogInterface$OnDismissListener)
    public boolean removeOnDismissListener(android.content.DialogInterface$OnDismissListener)
    public void clearOnDismissListeners()
    private final java.util.LinkedHashSet onPositiveButtonClickListeners
    private final java.util.LinkedHashSet onNegativeButtonClickListeners
    private final java.util.LinkedHashSet onCancelListeners
    private final java.util.LinkedHashSet onDismissListeners
    private int overrideThemeResId
    private com.google.android.material.datepicker.DateSelector dateSelector
    private com.google.android.material.datepicker.PickerFragment pickerFragment
    private com.google.android.material.datepicker.CalendarConstraints calendarConstraints
    private com.google.android.material.datepicker.MaterialCalendar calendar
    private int titleTextResId
    private java.lang.CharSequence titleText
    private boolean fullscreen
    private android.widget.TextView headerSelectionText
    private com.google.android.material.internal.CheckableImageButton headerToggleButton
    private com.google.android.material.shape.MaterialShapeDrawable background
    private android.widget.Button confirmButton
    private static final java.lang.String OVERRIDE_THEME_RES_ID
    private static final java.lang.String DATE_SELECTOR_KEY
    private static final java.lang.String CALENDAR_CONSTRAINTS_KEY
    private static final java.lang.String TITLE_TEXT_RES_ID_KEY
    private static final java.lang.String TITLE_TEXT_KEY
androidx.transition.R$id
    private void <init>()
androidx.recyclerview.widget.ItemTouchHelper$Callback$1
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory
    public static final int DIRECTION_LEFT
    public static final int DIRECTION_TOP
    public static final int DIRECTION_RIGHT
    public static final int DIRECTION_BOTTOM
androidx.recyclerview.widget.ListAdapter$1
androidx.core.view.inputmethod.InputConnectionCompat
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$2
androidx.core.app.NotificationCompat$Style
androidx.recyclerview.widget.ItemTouchHelper$4
androidx.vectordrawable.graphics.drawable.AndroidResources
    private void <init>()
    static final int STYLEABLE_VECTOR_DRAWABLE_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_AUTO_MIRRORED
    static final int STYLEABLE_VECTOR_DRAWABLE_HEIGHT
    static final int STYLEABLE_VECTOR_DRAWABLE_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_TINT
    static final int STYLEABLE_VECTOR_DRAWABLE_TINT_MODE
    static final int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_HEIGHT
    static final int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_ROTATION
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_COLOR
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_PATH_DATA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_COLOR
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_CAP
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_JOIN
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_MITER_LIMIT
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_END
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_OFFSET
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_START
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_FILLTYPE
    static final int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_PATH_DATA
    static final int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_FILLTYPE
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_DRAWABLE
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_ANIMATION
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_NAME
    public static final int STYLEABLE_ANIMATOR_INTERPOLATOR
    public static final int STYLEABLE_ANIMATOR_DURATION
    public static final int STYLEABLE_ANIMATOR_START_OFFSET
    public static final int STYLEABLE_ANIMATOR_REPEAT_COUNT
    public static final int STYLEABLE_ANIMATOR_REPEAT_MODE
    public static final int STYLEABLE_ANIMATOR_VALUE_FROM
    public static final int STYLEABLE_ANIMATOR_VALUE_TO
    public static final int STYLEABLE_ANIMATOR_VALUE_TYPE
    public static final int STYLEABLE_ANIMATOR_SET_ORDERING
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_FROM
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TO
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TYPE
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_PROPERTY_NAME
    public static final int STYLEABLE_KEYFRAME_VALUE
    public static final int STYLEABLE_KEYFRAME_INTERPOLATOR
    public static final int STYLEABLE_KEYFRAME_VALUE_TYPE
    public static final int STYLEABLE_KEYFRAME_FRACTION
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_NAME
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PATH_DATA
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_X_NAME
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_Y_NAME
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_1
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_1
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_2
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_2
    public static final int STYLEABLE_PATH_INTERPOLATOR_PATH_DATA
    public static final int FAST_OUT_LINEAR_IN
    public static final int FAST_OUT_SLOW_IN
    public static final int LINEAR_OUT_SLOW_IN
com.google.android.material.appbar.ViewOffsetHelper
    public int getLeftAndRightOffset()
    public int getLayoutLeft()
    public void setVerticalOffsetEnabled(boolean)
    public boolean isVerticalOffsetEnabled()
    public void setHorizontalOffsetEnabled(boolean)
    public boolean isHorizontalOffsetEnabled()
androidx.core.content.pm.ShortcutInfoCompatSaver
com.google.android.material.bottomappbar.BottomAppBar
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    static synthetic int access$000(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic boolean access$100(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic void access$200(com.google.android.material.bottomappbar.BottomAppBar,int,boolean)
    static synthetic com.google.android.material.shape.MaterialShapeDrawable access$300(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment access$400(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic int access$502(com.google.android.material.bottomappbar.BottomAppBar,int)
    public void performHide()
    public void performShow()
    public void replaceMenu(int)
    void addAnimationListener(com.google.android.material.bottomappbar.BottomAppBar$AnimationListener)
    void removeAnimationListener(com.google.android.material.bottomappbar.BottomAppBar$AnimationListener)
    private static final long ANIMATION_DURATION
    public static final int FAB_ALIGNMENT_MODE_CENTER
    public static final int FAB_ALIGNMENT_MODE_END
    public static final int FAB_ANIMATION_MODE_SCALE
    public static final int FAB_ANIMATION_MODE_SLIDE
androidx.core.R$layout
androidx.appcompat.widget.ActionBarOverlayLayout
    public boolean isHideOnContentScrollEnabled()
    public boolean hasIcon()
    public boolean hasLogo()
    public void saveToolbarHierarchyState(android.util.SparseArray)
    public void restoreToolbarHierarchyState(android.util.SparseArray)
    private static final java.lang.String TAG
    private static final int ACTION_BAR_ANIMATE_DELAY
android.support.constraint.solver.ArrayRow
    public android.support.constraint.solver.ArrayRow createRowGreaterThan(android.support.constraint.solver.SolverVariable,int,android.support.constraint.solver.SolverVariable)
    public android.support.constraint.solver.ArrayRow createRowEqualDimension(float,float,float,android.support.constraint.solver.SolverVariable,int,android.support.constraint.solver.SolverVariable,int,android.support.constraint.solver.SolverVariable,int,android.support.constraint.solver.SolverVariable,int)
    int sizeInBytes()
    private static final boolean DEBUG
    private static final float epsilon
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
    protected static final int ENTER_ANIMATION_DURATION
    protected static final int EXIT_ANIMATION_DURATION
    private static final int STATE_SCROLLED_DOWN
    private static final int STATE_SCROLLED_UP
androidx.lifecycle.Transformations$2
androidx.core.app.ShareCompat$IntentReader
androidx.transition.ViewGroupUtilsApi14
    private void <init>()
    private static final java.lang.String TAG
    private static final int LAYOUT_TRANSITION_CHANGING
androidx.annotation.MainThread
androidx.core.app.BundleCompat$BundleCompatBaseImpl
androidx.core.os.EnvironmentCompat
com.google.android.material.appbar.AppBarLayout$LayoutParams$ScrollFlags
com.google.android.material.ripple.RippleDrawableCompat
    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.transition.Slide$GravityFlag
androidx.core.widget.TintableCompoundDrawablesView
    public abstract android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
    public abstract android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.core.text.BidiFormatter$Builder
    public void <init>(boolean)
    public void <init>(java.util.Locale)
    public androidx.core.text.BidiFormatter$Builder stereoReset(boolean)
    public androidx.core.text.BidiFormatter$Builder setTextDirectionHeuristic(androidx.core.text.TextDirectionHeuristicCompat)
com.google.android.material.internal.TextDrawableHelper
    public boolean isTextWidthDirty()
androidx.appcompat.app.ToolbarActionBar$1
androidx.recyclerview.widget.LinearSnapHelper
    private static final float INVALID_DISTANCE
com.google.android.material.appbar.CollapsingToolbarLayout$1
androidx.vectordrawable.R$styleable
androidx.appcompat.view.ContextThemeWrapper
    public void applyOverrideConfiguration(android.content.res.Configuration)
androidx.core.telephony.mbms.MbmsHelper
androidx.drawerlayout.R$id
androidx.viewpager2.widget.ViewPager2$PagerSnapHelperImpl
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder
    void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
com.google.android.material.internal.NavigationMenu
    public void <init>(android.content.Context)
    public android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)
androidx.recyclerview.widget.AsyncListUtil$DataCallback
com.qy.R$styleable
androidx.appcompat.R$interpolator
com.google.android.material.appbar.HeaderBehavior
    private static final int INVALID_POINTER
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl
androidx.loader.content.ModernAsyncTask$4
androidx.recyclerview.widget.AdapterListUpdateCallback
androidx.annotation.NonNull
androidx.drawerlayout.R$color
androidx.core.R$string
com.google.android.material.color.MaterialColors
    public void <init>()
    public static int layer(android.view.View,int,int)
    public static int layer(android.view.View,int,int,float)
    public static final float ALPHA_FULL
    public static final float ALPHA_MEDIUM
    public static final float ALPHA_DISABLED
    public static final float ALPHA_LOW
    public static final float ALPHA_DISABLED_LOW
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener
androidx.transition.Styleable$VisibilityTransition
androidx.arch.core.executor.DefaultTaskExecutor$1
    private static final java.lang.String THREAD_NAME_STEM
androidx.core.text.util.LinkifyCompat
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl
    public boolean isRtl(char[],int,int)
androidx.lifecycle.livedata.core.R
androidx.appcompat.resources.R$string
androidx.savedstate.Recreator$SavedStateProvider
androidx.vectordrawable.animated.R$color
androidx.collection.SparseArrayCompat
    public void delete(int)
    public boolean remove(int,java.lang.Object)
    public void removeAt(int)
    public void removeAtRange(int,int)
    public java.lang.Object replace(int,java.lang.Object)
    public boolean replace(int,java.lang.Object,java.lang.Object)
    public void putAll(androidx.collection.SparseArrayCompat)
    public java.lang.Object putIfAbsent(int,java.lang.Object)
    public boolean isEmpty()
    public void setValueAt(int,java.lang.Object)
    public int indexOfKey(int)
    public boolean containsKey(int)
    public boolean containsValue(java.lang.Object)
androidx.appcompat.R$id
    private void <init>()
androidx.viewpager2.widget.PageTransformerAdapter
    void <init>(androidx.recyclerview.widget.LinearLayoutManager)
    public void onPageSelected(int)
    public void onPageScrollStateChanged(int)
    private final androidx.recyclerview.widget.LinearLayoutManager mLayoutManager
    private androidx.viewpager2.widget.ViewPager2$PageTransformer mPageTransformer
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments
    public float getProgress()
androidx.recyclerview.widget.AsyncListDiffer$1
com.google.android.material.datepicker.PickerFragment
    abstract com.google.android.material.datepicker.DateSelector getDateSelector()
    boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener)
    boolean removeOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener)
    void clearOnSelectionChangedListeners()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
    public void <init>(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
    void <init>(java.lang.Object)
    public java.lang.CharSequence getLabel()
    private static final java.lang.String TAG
android.support.constraint.solver.SolverVariable$1
androidx.cardview.widget.RoundRectDrawable
    void <init>(android.content.res.ColorStateList,float)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
    public void <init>()
com.google.android.material.datepicker.SingleDateSelector$1
androidx.core.content.pm.PermissionInfoCompat$Protection
androidx.lifecycle.ComputableLiveData$2
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1
androidx.core.util.DebugUtils
    private void <init>()
androidx.core.app.NotificationCompat
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager
    boolean isListening()
androidx.recyclerview.widget.RecyclerView$Adapter
    public final void notifyItemChanged(int)
    public final void notifyItemChanged(int,java.lang.Object)
    public final void notifyItemRangeChanged(int,int)
    public final void notifyItemRangeChanged(int,int,java.lang.Object)
    public final void notifyItemInserted(int)
    public final void notifyItemMoved(int,int)
    public final void notifyItemRangeInserted(int,int)
    public final void notifyItemRemoved(int)
    public final void notifyItemRangeRemoved(int,int)
com.google.android.material.checkbox.MaterialCheckBox
    public void <init>(android.content.Context)
    public boolean isUseMaterialThemeColors()
androidx.annotation.RequiresPermission
androidx.fragment.app.Fragment
    public void <init>(int)
    public static androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
    public androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
    public androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
    public final int getId()
    public final java.lang.String getTag()
    public final android.os.Bundle requireArguments()
    public void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
    public void setTargetFragment(androidx.fragment.app.Fragment,int)
    public final int getTargetRequestCode()
    public final java.lang.Object requireHost()
    public final java.lang.CharSequence getText(int)
    public final varargs java.lang.String getString(int,java.lang.Object[])
    public final androidx.fragment.app.FragmentManager requireFragmentManager()
    public final androidx.fragment.app.Fragment requireParentFragment()
    public final boolean isAdded()
    public final boolean isRemoving()
    public final boolean isInLayout()
    public final boolean isResumed()
    public final boolean isVisible()
    public final boolean isHidden()
    public final boolean hasOptionsMenu()
    public final boolean isMenuVisible()
    public void setRetainInstance(boolean)
    public void setHasOptionsMenu(boolean)
    public void setMenuVisibility(boolean)
    public void setUserVisibleHint(boolean)
    public boolean getUserVisibleHint()
    public androidx.loader.app.LoaderManager getLoaderManager()
    public void startActivity(android.content.Intent)
    public void startActivity(android.content.Intent,android.os.Bundle)
    public void startActivityForResult(android.content.Intent,int)
    public void startActivityForResult(android.content.Intent,int,android.os.Bundle)
    public void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public final void requestPermissions(java.lang.String[],int)
    public boolean shouldShowRequestPermissionRationale(java.lang.String)
    public final android.view.LayoutInflater getLayoutInflater()
    public void registerForContextMenu(android.view.View)
    public void unregisterForContextMenu(android.view.View)
    public void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setEnterTransition(java.lang.Object)
    public void setReturnTransition(java.lang.Object)
    public void setExitTransition(java.lang.Object)
    public void setReenterTransition(java.lang.Object)
    public void setSharedElementEnterTransition(java.lang.Object)
    public void setSharedElementReturnTransition(java.lang.Object)
    public void setAllowEnterTransitionOverlap(boolean)
    public void setAllowReturnTransitionOverlap(boolean)
    public void postponeEnterTransition()
    public final void postponeEnterTransition(long,java.util.concurrent.TimeUnit)
    static final int INITIALIZING
    static final int CREATED
    static final int ACTIVITY_CREATED
    static final int STARTED
    static final int RESUMED
androidx.core.widget.NestedScrollView
    public boolean dispatchNestedScroll(int,int,int,int,int[],int)
    public boolean isFillViewport()
    public boolean isSmoothScrollingEnabled()
    static final int ANIMATED_SCROLL_GAP
    static final float MAX_SCROLL_FACTOR
    private static final java.lang.String TAG
    private static final int INVALID_POINTER
com.google.android.material.appbar.ViewOffsetBehavior
    public boolean setLeftAndRightOffset(int)
    public int getLeftAndRightOffset()
    public void setVerticalOffsetEnabled(boolean)
    public boolean isVerticalOffsetEnabled()
    public void setHorizontalOffsetEnabled(boolean)
    public boolean isHorizontalOffsetEnabled()
com.google.android.material.shape.ShapePathModel
androidx.recyclerview.widget.SortedList
androidx.transition.Slide$CalculateSlideHorizontal
com.google.android.material.datepicker.MaterialDatePicker$4
androidx.collection.LongSparseArray
    public boolean remove(long,java.lang.Object)
    public java.lang.Object replace(long,java.lang.Object)
    public boolean replace(long,java.lang.Object,java.lang.Object)
    public void putAll(androidx.collection.LongSparseArray)
    public java.lang.Object putIfAbsent(long,java.lang.Object)
    public boolean isEmpty()
    public void setValueAt(int,java.lang.Object)
    public int indexOfValue(java.lang.Object)
    public boolean containsKey(long)
    public boolean containsValue(java.lang.Object)
androidx.recyclerview.widget.OrientationHelper$2
    public void offsetChild(android.view.View,int)
androidx.appcompat.app.AlertDialog
    protected void <init>(android.content.Context)
    protected void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
    public android.widget.Button getButton(int)
    public void setCustomTitle(android.view.View)
    public void setMessage(java.lang.CharSequence)
    public void setView(android.view.View)
    public void setView(android.view.View,int,int,int,int)
    void setButtonPanelLayoutHint(int)
    public void setButton(int,java.lang.CharSequence,android.os.Message)
    public void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public void setButton(int,java.lang.CharSequence,android.graphics.drawable.Drawable,android.content.DialogInterface$OnClickListener)
    public void setIcon(int)
    public void setIcon(android.graphics.drawable.Drawable)
    public void setIconAttribute(int)
    static final int LAYOUT_HINT_NONE
    static final int LAYOUT_HINT_SIDE
androidx.core.view.NestedScrollingChild2
    public abstract boolean startNestedScroll(int,int)
    public abstract void stopNestedScroll(int)
    public abstract boolean hasNestedScrollingParent(int)
    public abstract boolean dispatchNestedScroll(int,int,int,int,int[],int)
    public abstract boolean dispatchNestedPreScroll(int,int,int[],int[],int)
androidx.transition.R$layout
com.google.android.material.internal.VisibilityAwareImageButton
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.annotation.InterpolatorRes
android.support.constraint.solver.widgets.Barrier
    public boolean allowsGoneWidget()
    public static final int LEFT
    public static final int RIGHT
    public static final int TOP
    public static final int BOTTOM
androidx.core.app.RemoteInput
com.google.android.material.datepicker.CalendarItemStyle
    int getLeftInset()
    int getRightInset()
androidx.core.app.NotificationCompatBuilder
androidx.collection.LruCache
    public void resize(int)
    public final java.lang.Object remove(java.lang.Object)
    public final void evictAll()
    public final synchronized int size()
    public final synchronized int maxSize()
    public final synchronized int hitCount()
    public final synchronized int missCount()
    public final synchronized int createCount()
    public final synchronized int putCount()
    public final synchronized int evictionCount()
    public final synchronized java.util.Map snapshot()
androidx.appcompat.view.menu.MenuAdapter
    public boolean getForceShowIcon()
androidx.annotation.RestrictTo
androidx.customview.R$attr
androidx.appcompat.R$drawable
    private void <init>()
com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener
    public abstract void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)
androidx.core.content.ContentResolverCompat
androidx.lifecycle.viewmodel.R
androidx.interpolator.R
androidx.transition.Slide$5
androidx.appcompat.widget.ActivityChooserView$5
androidx.constraintlayout.solver.ArrayLinkedVariables
    boolean hasAtLeastOnePositiveVariable()
    androidx.constraintlayout.solver.SolverVariable getPivotCandidate()
    int sizeInBytes()
    public void display()
    private static final boolean DEBUG
    private static final int NONE
    private static final boolean FULL_NEW_CHECK
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState
    int[] mCachedThemeAttrs
androidx.lifecycle.ReportFragment
    static androidx.lifecycle.ReportFragment get(android.app.Activity)
    void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
    private static final java.lang.String REPORT_FRAGMENT_TAG
com.google.android.material.snackbar.SnackbarContentLayout
    void updateActionTextColorAlphaIfNeeded(float)
    public void animateContentIn(int,int)
    public void animateContentOut(int,int)
com.google.android.material.snackbar.BaseTransientBottomBar$6
androidx.loader.content.Loader$ForceLoadContentObserver
android.support.v4.os.IResultReceiver$Stub$Proxy
    public java.lang.String getInterfaceDescriptor()
    public void send(int,android.os.Bundle)
androidx.appcompat.resources.R$layout
androidx.transition.R$styleable
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback
    void <init>(androidx.drawerlayout.widget.DrawerLayout,int)
    private void closeOtherDrawer()
    public void setDragger(androidx.customview.widget.ViewDragHelper)
    public boolean tryCaptureView(android.view.View,int)
    public void onViewDragStateChanged(int)
    public void onViewPositionChanged(android.view.View,int,int,int,int)
    public void onViewCaptured(android.view.View,int)
    public void onViewReleased(android.view.View,float,float)
    public void onEdgeTouched(int,int)
    void peekDrawer()
    public boolean onEdgeLock(int)
    public void onEdgeDragStarted(int,int)
    public int getViewHorizontalDragRange(android.view.View)
    public int clampViewPositionHorizontal(android.view.View,int,int)
    public int clampViewPositionVertical(android.view.View,int,int)
    private final int mAbsGravity
    private androidx.customview.widget.ViewDragHelper mDragger
    private final java.lang.Runnable mPeekRunnable
    final synthetic androidx.drawerlayout.widget.DrawerLayout this$0
com.google.android.material.bottomsheet.BottomSheetDialog$3
androidx.appcompat.view.SupportMenuInflater
    static final java.lang.String LOG_TAG
    private static final java.lang.String XML_MENU
    private static final java.lang.String XML_GROUP
    private static final java.lang.String XML_ITEM
    static final int NO_ID
androidx.drawerlayout.R$drawable
androidx.viewpager2.widget.ViewPager2$4
android.support.constraint.solver.Pools
androidx.appcompat.widget.TintTypedArray
    public int length()
    public int getIndexCount()
    public int getIndex(int)
    public android.content.res.Resources getResources()
    public java.lang.String getNonResourceString(int)
    public int getLayoutDimension(int,java.lang.String)
    public float getFraction(int,int,int,float)
    public boolean getValue(int,android.util.TypedValue)
    public int getType(int)
    public android.util.TypedValue peekValue(int)
    public java.lang.String getPositionDescription()
    public int getChangingConfigurations()
android.support.constraint.solver.widgets.ResolutionNode
    public void invalidateAnchors()
    public void remove(android.support.constraint.solver.widgets.ResolutionDimension)
    public static final int UNRESOLVED
    public static final int RESOLVED
    public static final int REMOVED
androidx.activity.R$drawable
androidx.recyclerview.widget.ListAdapter
androidx.viewpager2.adapter.FragmentStateAdapter$1
com.google.android.material.circularreveal.CircularRevealHelper$Delegate
    public abstract void actualDraw(android.graphics.Canvas)
    public abstract boolean actualIsOpaque()
com.google.android.material.snackbar.BaseTransientBottomBar$6$1
com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener
androidx.appcompat.view.menu.MenuDialogHelper
    public void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.core.view.ViewParentCompat
    private void <init>()
    public static boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
    public static void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
    public static void onStopNestedScroll(android.view.ViewParent,android.view.View)
    public static void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
    public static void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int)
    public static void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
    public static void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
    private static int[] getTempNestedScrollConsumed()
    private static final java.lang.String TAG
    private static int[] sTempNestedScrollConsumed
androidx.activity.R$styleable
androidx.coordinatorlayout.R$layout
androidx.transition.Scene
    public static androidx.transition.Scene getSceneForLayout(android.view.ViewGroup,int,android.content.Context)
    public void <init>(android.view.ViewGroup)
    private void <init>(android.view.ViewGroup,int,android.content.Context)
    public void <init>(android.view.ViewGroup,android.view.View)
    public android.view.ViewGroup getSceneRoot()
    public void enter()
    public void setEnterAction(java.lang.Runnable)
    public void setExitAction(java.lang.Runnable)
    boolean isCreatedFromLayoutResource()
    private android.content.Context mContext
    private int mLayoutId
    private android.view.View mLayout
    private java.lang.Runnable mEnterAction
androidx.customview.R
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback
com.google.android.material.badge.BadgeDrawable
    static com.google.android.material.badge.BadgeDrawable createFromSavedState(android.content.Context,com.google.android.material.badge.BadgeDrawable$SavedState)
    public static com.google.android.material.badge.BadgeDrawable createFromResource(android.content.Context,int)
    private void restoreFromSavedState(com.google.android.material.badge.BadgeDrawable$SavedState)
    public com.google.android.material.badge.BadgeDrawable$SavedState getSavedState()
    public void setVisible(boolean)
    public int getBackgroundColor()
    public int getBadgeTextColor()
    public void clearNumber()
    public int getBadgeGravity()
    public void setContentDescriptionNumberless(java.lang.CharSequence)
    public void setContentDescriptionQuantityStringsResource(int)
    public static final int TOP_END
    public static final int TOP_START
    public static final int BOTTOM_END
    public static final int BOTTOM_START
    private static final int DEFAULT_MAX_BADGE_CHARACTER_COUNT
    private static final int BADGE_NUMBER_NONE
    private static final int MAX_CIRCULAR_BADGE_NUMBER_COUNT
    static final java.lang.String DEFAULT_EXCEED_MAX_BADGE_NUMBER_SUFFIX
androidx.core.app.NotificationCompat$Action$SemanticAction
androidx.core.widget.PopupWindowCompat
    private void <init>()
    public static boolean getOverlapAnchor(android.widget.PopupWindow)
    public static int getWindowLayoutType(android.widget.PopupWindow)
    private static final java.lang.String TAG
    private static java.lang.reflect.Method sGetWindowLayoutTypeMethod
    private static boolean sGetWindowLayoutTypeMethodAttempted
androidx.appcompat.widget.ActivityChooserModel$ActivityChooserModelClient
    public abstract void setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)
androidx.vectordrawable.R$dimen
androidx.annotation.RawRes
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate
androidx.core.content.pm.PermissionInfoCompat
androidx.fragment.R$dimen
androidx.annotation.VisibleForTesting
androidx.core.view.ViewCompat$ScrollIndicators
androidx.core.view.NestedScrollingParentHelper
    public void onStopNestedScroll(android.view.View)
androidx.core.util.Consumer
androidx.lifecycle.Lifecycling
    static androidx.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object)
    private void <init>()
    private static final int REFLECTIVE_CALLBACK
    private static final int GENERATED_CALLBACK
androidx.transition.Slide$CalculateSlide
androidx.core.view.accessibility.AccessibilityWindowInfoCompat
androidx.viewpager2.widget.ViewPager2$LinearLayoutManagerImpl
androidx.constraintlayout.solver.widgets.ConstraintTableLayout
androidx.core.location.LocationManagerCompat
androidx.appcompat.widget.PopupMenu
androidx.appcompat.app.TwilightCalculator
    public static final int DAY
    public static final int NIGHT
    private static final float DEGREES_TO_RADIANS
    private static final float J0
    private static final float ALTIDUTE_CORRECTION_CIVIL_TWILIGHT
    private static final float C1
    private static final float C2
    private static final float C3
    private static final float OBLIQUITY
    private static final long UTC_2000
androidx.appcompat.resources.R$integer
com.google.android.material.textfield.TextInputLayout$BoxBackgroundMode
androidx.appcompat.view.menu.CascadingMenuPopup
    static final int HORIZ_POSITION_LEFT
    static final int HORIZ_POSITION_RIGHT
    static final int SUBMENU_TIMEOUT_MS
androidx.appcompat.graphics.drawable.StateListDrawable
    void <init>()
    private void updateStateFromTypedArray(android.content.res.TypedArray)
    private void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public void addState(int[],android.graphics.drawable.Drawable)
    public void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    androidx.appcompat.graphics.drawable.StateListDrawable$StateListState getStateListState()
    int getStateCount()
    int[] getStateSet(int)
    android.graphics.drawable.Drawable getStateDrawable(int)
    int getStateDrawableIndex(int[])
    void clearMutated()
    private static final java.lang.String TAG
    private static final boolean DEBUG
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1
androidx.core.view.inputmethod.InputContentInfoCompat
androidx.core.app.NotificationCompat$BigPictureStyle
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl
androidx.constraintlayout.widget.ConstraintSet
    private void createHorizontalChain(int,int,int,int,int[],float[],int,int,int)
    private androidx.constraintlayout.widget.ConstraintSet$Constraint get(int)
    private java.lang.String sideToString(int)
    public androidx.constraintlayout.widget.ConstraintSet$Constraint getParameters(int)
    public void clone(android.content.Context,int)
    public void clone(androidx.constraintlayout.widget.ConstraintSet)
    public void clone(androidx.constraintlayout.widget.ConstraintLayout)
    public void applyTo(androidx.constraintlayout.widget.ConstraintLayout)
    public void center(int,int,int,int,int,int,int,float)
    public void centerHorizontally(int,int,int,int,int,int,int,float)
    public void centerHorizontallyRtl(int,int,int,int,int,int,int,float)
    public void centerVertically(int,int,int,int,int,int,int,float)
    public void createVerticalChain(int,int,int,int,int[],float[],int)
    public void createHorizontalChain(int,int,int,int,int[],float[],int)
    public void createHorizontalChainRtl(int,int,int,int,int[],float[],int)
    public void connect(int,int,int,int,int)
    public void connect(int,int,int,int)
    public void centerHorizontally(int,int)
    public void centerHorizontallyRtl(int,int)
    public void centerVertically(int,int)
    public void clear(int)
    public void clear(int,int)
    public void setMargin(int,int,int)
    public void setGoneMargin(int,int,int)
    public void setHorizontalBias(int,float)
    public void setVerticalBias(int,float)
    public void setDimensionRatio(int,java.lang.String)
    public void setVisibility(int,int)
    public void setAlpha(int,float)
    public boolean getApplyElevation(int)
    public void setApplyElevation(int,boolean)
    public void setElevation(int,float)
    public void setRotation(int,float)
    public void setRotationX(int,float)
    public void setRotationY(int,float)
    public void setScaleX(int,float)
    public void setScaleY(int,float)
    public void setTransformPivotX(int,float)
    public void setTransformPivotY(int,float)
    public void setTransformPivot(int,float,float)
    public void setTranslationX(int,float)
    public void setTranslationY(int,float)
    public void setTranslation(int,float,float)
    public void setTranslationZ(int,float)
    public void constrainHeight(int,int)
    public void constrainWidth(int,int)
    public void constrainCircle(int,int,int,float)
    public void constrainMaxHeight(int,int)
    public void constrainMaxWidth(int,int)
    public void constrainMinHeight(int,int)
    public void constrainMinWidth(int,int)
    public void constrainPercentWidth(int,float)
    public void constrainPercentHeight(int,float)
    public void constrainDefaultHeight(int,int)
    public void constrainDefaultWidth(int,int)
    public void setHorizontalWeight(int,float)
    public void setVerticalWeight(int,float)
    public void setHorizontalChainStyle(int,int)
    public void setVerticalChainStyle(int,int)
    public void addToHorizontalChain(int,int,int)
    public void addToHorizontalChainRTL(int,int,int)
    public void addToVerticalChain(int,int,int)
    public void removeFromVerticalChain(int)
    public void removeFromHorizontalChain(int)
    public void create(int,int)
    public varargs void createBarrier(int,int,int[])
    public void setGuidelineBegin(int,int)
    public void setGuidelineEnd(int,int)
    public void setGuidelinePercent(int,float)
    public void setBarrierType(int,int)
    private static final java.lang.String TAG
    public static final int UNSET
    public static final int MATCH_CONSTRAINT
    public static final int WRAP_CONTENT
    public static final int MATCH_CONSTRAINT_WRAP
    public static final int MATCH_CONSTRAINT_SPREAD
    public static final int PARENT_ID
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int HORIZONTAL_GUIDELINE
    public static final int VERTICAL_GUIDELINE
    public static final int VISIBLE
    public static final int INVISIBLE
    public static final int GONE
    public static final int LEFT
    public static final int RIGHT
    public static final int TOP
    public static final int BOTTOM
    public static final int BASELINE
    public static final int START
    public static final int END
    public static final int CHAIN_SPREAD
    public static final int CHAIN_SPREAD_INSIDE
    public static final int CHAIN_PACKED
    private static final boolean DEBUG
    private static final int BARRIER_TYPE
    private static final int BASELINE_TO_BASELINE
    private static final int BOTTOM_MARGIN
    private static final int BOTTOM_TO_BOTTOM
    private static final int BOTTOM_TO_TOP
    private static final int DIMENSION_RATIO
    private static final int EDITOR_ABSOLUTE_X
    private static final int EDITOR_ABSOLUTE_Y
    private static final int END_MARGIN
    private static final int END_TO_END
    private static final int END_TO_START
    private static final int GONE_BOTTOM_MARGIN
    private static final int GONE_END_MARGIN
    private static final int GONE_LEFT_MARGIN
    private static final int GONE_RIGHT_MARGIN
    private static final int GONE_START_MARGIN
    private static final int GONE_TOP_MARGIN
    private static final int GUIDE_BEGIN
    private static final int GUIDE_END
    private static final int GUIDE_PERCENT
    private static final int HORIZONTAL_BIAS
    private static final int LAYOUT_HEIGHT
    private static final int LAYOUT_VISIBILITY
    private static final int LAYOUT_WIDTH
    private static final int LEFT_MARGIN
    private static final int LEFT_TO_LEFT
    private static final int LEFT_TO_RIGHT
    private static final int ORIENTATION
    private static final int RIGHT_MARGIN
    private static final int RIGHT_TO_LEFT
    private static final int RIGHT_TO_RIGHT
    private static final int START_MARGIN
    private static final int START_TO_END
    private static final int START_TO_START
    private static final int TOP_MARGIN
    private static final int TOP_TO_BOTTOM
    private static final int TOP_TO_TOP
    private static final int VERTICAL_BIAS
    private static final int VIEW_ID
    private static final int HORIZONTAL_WEIGHT
    private static final int VERTICAL_WEIGHT
    private static final int HORIZONTAL_STYLE
    private static final int VERTICAL_STYLE
    private static final int ALPHA
    private static final int ELEVATION
    private static final int ROTATION_X
    private static final int ROTATION_Y
    private static final int SCALE_X
    private static final int SCALE_Y
    private static final int TRANSFORM_PIVOT_X
    private static final int TRANSFORM_PIVOT_Y
    private static final int TRANSLATION_X
    private static final int TRANSLATION_Y
    private static final int TRANSLATION_Z
    private static final int WIDTH_DEFAULT
    private static final int HEIGHT_DEFAULT
    private static final int WIDTH_MAX
    private static final int HEIGHT_MAX
    private static final int WIDTH_MIN
    private static final int HEIGHT_MIN
    private static final int ROTATION
    private static final int CIRCLE
    private static final int CIRCLE_RADIUS
    private static final int CIRCLE_ANGLE
    private static final int WIDTH_PERCENT
    private static final int HEIGHT_PERCENT
    private static final int CHAIN_USE_RTL
    private static final int BARRIER_DIRECTION
    private static final int CONSTRAINT_REFERENCED_IDS
    private static final int BARRIER_ALLOWS_GONE_WIDGETS
    private static final int UNUSED
androidx.transition.Transition$ArrayListManager
androidx.core.provider.FontsContractCompat$4$6
androidx.appcompat.content.res.AppCompatResources
    private void <init>()
    private static final java.lang.String LOG_TAG
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuTextItem
androidx.activity.R$color
androidx.activity.R
androidx.lifecycle.ViewModel
    java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)
    java.lang.Object getTag(java.lang.String)
androidx.annotation.RequiresApi
androidx.core.app.NotificationCompat$BigTextStyle
androidx.transition.TransitionListenerAdapter
    public void onTransitionEnd(androidx.transition.Transition)
androidx.core.app.ActivityCompat$PermissionCompatDelegate
    public abstract boolean requestPermissions(android.app.Activity,java.lang.String[],int)
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$3
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl
androidx.annotation.AnyThread
androidx.core.content.FileProvider$PathStrategy
    public abstract android.net.Uri getUriForFile(java.io.File)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle
androidx.transition.R$dimen
androidx.viewpager2.widget.ViewPager2$Orientation
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate
androidx.appcompat.widget.AppCompatTextHelper
    private static final int TEXT_FONT_WEIGHT_UNSPECIFIED
    private static final int SANS
    private static final int SERIF
    private static final int MONOSPACE
androidx.core.widget.ImageViewCompat
    private void <init>()
androidx.viewpager.R$color
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout
androidx.transition.Styleable$Transition
androidx.recyclerview.widget.AsyncListUtil$2
androidx.recyclerview.widget.AsyncDifferConfig$Builder
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams
    public void <init>(android.view.ViewGroup$MarginLayoutParams)
androidx.core.widget.ContentLoadingProgressBar
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public synchronized void hide()
    public synchronized void show()
    long mStartTime
    boolean mPostedHide
    boolean mPostedShow
    boolean mDismissed
    private static final int MIN_SHOW_TIME
    private static final int MIN_DELAY
com.google.android.material.internal.ViewUtils$1
androidx.appcompat.view.menu.MenuView$ItemView
    public abstract void setTitle(java.lang.CharSequence)
    public abstract void setEnabled(boolean)
    public abstract void setCheckable(boolean)
    public abstract void setChecked(boolean)
    public abstract void setShortcut(boolean,char)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract boolean showsIcon()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath
    public boolean canApplyTheme()
    public void applyTheme(android.content.res.Resources$Theme)
androidx.transition.ChangeTransform$2
androidx.core.view.ViewCompat$2
androidx.appcompat.widget.TooltipCompatHandler
    private static final java.lang.String TAG
    private static final long LONG_CLICK_HIDE_TIMEOUT_MS
    private static final long HOVER_HIDE_TIMEOUT_MS
    private static final long HOVER_HIDE_TIMEOUT_SHORT_MS
androidx.core.app.NotificationCompatJellybean
androidx.loader.content.ModernAsyncTask$AsyncTaskResult
androidx.constraintlayout.solver.widgets.Analyzer
    private void <init>()
androidx.transition.GhostView
androidx.constraintlayout.solver.Pools
androidx.appcompat.graphics.drawable.DrawableContainer
    public void setEnterFadeDuration(int)
    public void setExitFadeDuration(int)
    public boolean isStateful()
    void setCurrentIndex(int)
    void clearMutated()
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final boolean DEFAULT_DITHER
com.google.android.material.internal.ScrimInsetsFrameLayout$1
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
androidx.lifecycle.Lifecycling$1
    void <init>(androidx.lifecycle.LifecycleEventObserver)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice
com.google.android.material.snackbar.BaseTransientBottomBar$11
androidx.fragment.R$color
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper
androidx.transition.Styleable$TransitionManager
androidx.core.content.ContextCompat$MainHandlerExecutor
androidx.fragment.app.FragmentManagerImpl$PopBackStackState
androidx.core.app.JobIntentService
    public static void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)
    public static void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)
    public void setInterruptIfStopped(boolean)
    public boolean isStopped()
    static final java.lang.String TAG
    static final boolean DEBUG
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments
    public java.lang.CharSequence getText()
com.google.android.material.snackbar.BaseTransientBottomBar$ContentViewCallback
com.qy.FloatWindow
    private boolean floatLayoutTouch(android.view.MotionEvent)
    public static int getSysBarHeight(android.content.Context)
    public android.view.View getFwView()
    private float mInViewX
    private float mInViewY
    private float mDownInScreenX
    private float mDownInScreenY
    private float mInScreenX
    private float mInScreenY
androidx.appcompat.widget.ActivityChooserView$1
androidx.fragment.app.FragmentTransaction$Op
    void <init>(int,androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
androidx.core.view.ViewConfigurationCompat
    public static int getScaledPagingTouchSlop(android.view.ViewConfiguration)
    public static boolean hasPermanentMenuKey(android.view.ViewConfiguration)
    private void <init>()
    private static final java.lang.String TAG
androidx.constraintlayout.widget.R$attr
com.qy.R
android.support.constraint.ConstraintLayout
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    private void init(android.util.AttributeSet)
    public void fillMetrics(android.support.constraint.solver.Metrics)
    static final boolean ALLOWS_EMBEDDED
    private static final boolean CACHE_MEASURED_DIMENSION
    public static final java.lang.String VERSION
    private static final java.lang.String TAG
    private static final boolean USE_CONSTRAINTS_HELPER
    private static final boolean DEBUG
    public static final int DESIGN_INFO_ID
androidx.recyclerview.widget.BatchingListUpdateCallback
androidx.core.os.HandlerCompat
androidx.transition.Slide$1
androidx.annotation.DimenRes
com.google.android.material.datepicker.MaterialTextInputPicker$1
androidx.fragment.R$layout
androidx.core.app.NotificationCompat$MessagingStyle
androidx.constraintlayout.solver.widgets.ResolutionNode
    public void invalidateAnchors()
    public void remove(androidx.constraintlayout.solver.widgets.ResolutionDimension)
    public static final int UNRESOLVED
    public static final int RESOLVED
    public static final int REMOVED
androidx.appcompat.app.ActionBar$LayoutParams
    public void <init>(int,int,int)
    public void <init>(int)
com.qy.R$color
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory$EdgeDirection
androidx.loader.R$drawable
androidx.constraintlayout.solver.widgets.ConstraintWidget
    public void <init>(int,int,int,int)
    public void <init>(int,int)
    public int getMaxHeight()
    public int getMaxWidth()
    public boolean isRoot()
    public boolean isRootContainer()
    public boolean isInsideConstraintLayout()
    public boolean hasAncestor(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public androidx.constraintlayout.solver.widgets.WidgetContainer getRootWidgetContainer()
    public boolean isWidthWrapContent()
    public boolean isHeightWrapContent()
    public java.lang.String getType()
    public void setType(java.lang.String)
    public void setDebugSolverName(androidx.constraintlayout.solver.LinearSystem,java.lang.String)
    int getInternalDrawX()
    int getInternalDrawY()
    public int getInternalDrawRight()
    public int getInternalDrawBottom()
    public int getOptimizerWrapWidth()
    public int getOptimizerWrapHeight()
    public int getDrawWidth()
    public int getDrawHeight()
    public int getDrawBottom()
    public int getDrawRight()
    public int getMinWidth()
    public int getMinHeight()
    public int getLeft()
    public int getTop()
    public float getHorizontalBiasPercent()
    public float getVerticalBiasPercent()
    public void setGoneMargin(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int)
    public void forceUpdateDrawPosition()
    public void setDrawOrigin(int,int)
    public void setDrawX(int)
    public void setDrawY(int)
    public void setDrawWidth(int)
    public void setDrawHeight(int)
    public void setLength(int,int)
    public void setDimensionRatio(float,int)
    public float getDimensionRatio()
    public int getDimensionRatioSide()
    public void setDimension(int,int)
    public void setContainerItemSkip(int)
    public int getContainerItemSkip()
    public int getHorizontalChainStyle()
    public int getVerticalChainStyle()
    public void connectedTo(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
    public void resetAllConstraints()
    public void resetAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public void resetAnchors(int)
    public void disconnectWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void disconnectUnlockedWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getHorizontalChainControlWidget()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getVerticalChainControlWidget()
    int mDistToTop
    int mDistToLeft
    int mDistToRight
    int mDistToBottom
    boolean mLeftHasCentered
    boolean mRightHasCentered
    boolean mTopHasCentered
    boolean mBottomHasCentered
    private static final boolean AUTOTAG_CENTER
    protected static final int SOLVER
    protected static final int DIRECT
    public static final int MATCH_CONSTRAINT_SPREAD
    public static final int MATCH_CONSTRAINT_WRAP
    public static final int MATCH_CONSTRAINT_PERCENT
    public static final int MATCH_CONSTRAINT_RATIO
    public static final int MATCH_CONSTRAINT_RATIO_RESOLVED
    public static final int UNKNOWN
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int VISIBLE
    public static final int INVISIBLE
    public static final int GONE
    public static final int CHAIN_SPREAD
    public static final int CHAIN_SPREAD_INSIDE
    public static final int CHAIN_PACKED
    private static final int WRAP
    protected static final int ANCHOR_LEFT
    protected static final int ANCHOR_RIGHT
    protected static final int ANCHOR_TOP
    protected static final int ANCHOR_BOTTOM
    protected static final int ANCHOR_BASELINE
    static final int DIMENSION_HORIZONTAL
    static final int DIMENSION_VERTICAL
androidx.loader.R$id
androidx.recyclerview.widget.SnapHelper
    static final float MILLISECONDS_PER_INCH
android.support.constraint.R
android.support.constraint.ConstraintLayout$LayoutParams$Table
    private void <init>()
    public static final int UNUSED
    public static final int ANDROID_ORIENTATION
    public static final int LAYOUT_CONSTRAINT_CIRCLE
    public static final int LAYOUT_CONSTRAINT_CIRCLE_RADIUS
    public static final int LAYOUT_CONSTRAINT_CIRCLE_ANGLE
    public static final int LAYOUT_CONSTRAINT_GUIDE_BEGIN
    public static final int LAYOUT_CONSTRAINT_GUIDE_END
    public static final int LAYOUT_CONSTRAINT_GUIDE_PERCENT
    public static final int LAYOUT_CONSTRAINT_LEFT_TO_LEFT_OF
    public static final int LAYOUT_CONSTRAINT_LEFT_TO_RIGHT_OF
    public static final int LAYOUT_CONSTRAINT_RIGHT_TO_LEFT_OF
    public static final int LAYOUT_CONSTRAINT_RIGHT_TO_RIGHT_OF
    public static final int LAYOUT_CONSTRAINT_TOP_TO_TOP_OF
    public static final int LAYOUT_CONSTRAINT_TOP_TO_BOTTOM_OF
    public static final int LAYOUT_CONSTRAINT_BOTTOM_TO_TOP_OF
    public static final int LAYOUT_CONSTRAINT_BOTTOM_TO_BOTTOM_OF
    public static final int LAYOUT_CONSTRAINT_BASELINE_TO_BASELINE_OF
    public static final int LAYOUT_CONSTRAINT_START_TO_END_OF
    public static final int LAYOUT_CONSTRAINT_START_TO_START_OF
    public static final int LAYOUT_CONSTRAINT_END_TO_START_OF
    public static final int LAYOUT_CONSTRAINT_END_TO_END_OF
    public static final int LAYOUT_GONE_MARGIN_LEFT
    public static final int LAYOUT_GONE_MARGIN_TOP
    public static final int LAYOUT_GONE_MARGIN_RIGHT
    public static final int LAYOUT_GONE_MARGIN_BOTTOM
    public static final int LAYOUT_GONE_MARGIN_START
    public static final int LAYOUT_GONE_MARGIN_END
    public static final int LAYOUT_CONSTRAINED_WIDTH
    public static final int LAYOUT_CONSTRAINED_HEIGHT
    public static final int LAYOUT_CONSTRAINT_HORIZONTAL_BIAS
    public static final int LAYOUT_CONSTRAINT_VERTICAL_BIAS
    public static final int LAYOUT_CONSTRAINT_WIDTH_DEFAULT
    public static final int LAYOUT_CONSTRAINT_HEIGHT_DEFAULT
    public static final int LAYOUT_CONSTRAINT_WIDTH_MIN
    public static final int LAYOUT_CONSTRAINT_WIDTH_MAX
    public static final int LAYOUT_CONSTRAINT_WIDTH_PERCENT
    public static final int LAYOUT_CONSTRAINT_HEIGHT_MIN
    public static final int LAYOUT_CONSTRAINT_HEIGHT_MAX
    public static final int LAYOUT_CONSTRAINT_HEIGHT_PERCENT
    public static final int LAYOUT_CONSTRAINT_LEFT_CREATOR
    public static final int LAYOUT_CONSTRAINT_TOP_CREATOR
    public static final int LAYOUT_CONSTRAINT_RIGHT_CREATOR
    public static final int LAYOUT_CONSTRAINT_BOTTOM_CREATOR
    public static final int LAYOUT_CONSTRAINT_BASELINE_CREATOR
    public static final int LAYOUT_CONSTRAINT_DIMENSION_RATIO
    public static final int LAYOUT_CONSTRAINT_HORIZONTAL_WEIGHT
    public static final int LAYOUT_CONSTRAINT_VERTICAL_WEIGHT
    public static final int LAYOUT_CONSTRAINT_HORIZONTAL_CHAINSTYLE
    public static final int LAYOUT_CONSTRAINT_VERTICAL_CHAINSTYLE
    public static final int LAYOUT_EDITOR_ABSOLUTEX
    public static final int LAYOUT_EDITOR_ABSOLUTEY
com.google.android.material.animation.AnimationUtils
    public void <init>()
    public static int lerp(int,int,float)
androidx.fragment.R$attr
com.google.android.material.expandable.ExpandableWidgetHelper
    public void <init>(com.google.android.material.expandable.ExpandableWidget)
    private void dispatchExpandedStateChanged()
    public boolean setExpanded(boolean)
    private final android.view.View widget
    private boolean expanded
    private int expandedComponentIdHint
androidx.customview.widget.ViewDragHelper
    public void setMinVelocity(float)
    public float getMinVelocity()
    public void setEdgeTrackingEnabled(int)
    public android.view.View getCapturedView()
    public int getActivePointerId()
    public void abort()
    public void flingCapturedView(int,int,int,int)
    protected boolean canScroll(android.view.View,boolean,int,int,int,int)
    public boolean isEdgeTouched(int)
    public boolean isEdgeTouched(int,int)
    private static final java.lang.String TAG
    public static final int INVALID_POINTER
    public static final int STATE_IDLE
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int EDGE_LEFT
    public static final int EDGE_RIGHT
    public static final int EDGE_TOP
    public static final int EDGE_BOTTOM
    public static final int EDGE_ALL
    public static final int DIRECTION_HORIZONTAL
    public static final int DIRECTION_VERTICAL
    public static final int DIRECTION_ALL
    private static final int EDGE_SIZE
    private static final int BASE_SETTLE_DURATION
    private static final int MAX_SETTLE_DURATION
androidx.core.view.accessibility.AccessibilityClickableSpanCompat
    public static final java.lang.String SPAN_ID
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer
    public void <init>(int,int,int,int)
    public void <init>(int,int)
    public void fillMetrics(androidx.constraintlayout.solver.Metrics)
    public java.lang.String getType()
    public void setPadding(int,int,int,int)
    public void resetGraph()
    public java.util.ArrayList getVerticalGuidelines()
    public java.util.ArrayList getHorizontalGuidelines()
    public androidx.constraintlayout.solver.LinearSystem getSystem()
    public java.util.List getWidgetGroups()
    private static final boolean USE_SNAPSHOT
    private static final int MAX_ITERATIONS
    private static final boolean DEBUG
    private static final boolean DEBUG_LAYOUT
    static final boolean DEBUG_GRAPH
androidx.cardview.widget.RoundRectDrawableWithShadow
    void <init>(android.content.res.Resources,android.content.res.ColorStateList,float,float,float)
    private static final float SHADOW_MULTIPLIER
androidx.transition.R$string
androidx.appcompat.view.menu.SubMenuBuilder
    public void setShortcutsVisible(boolean)
com.google.android.material.internal.ManufacturerUtils
androidx.customview.R$style
androidx.appcompat.widget.LinearLayoutCompat
    public boolean isBaselineAligned()
    public boolean isMeasureWithLargestChildEnabled()
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int SHOW_DIVIDER_NONE
    public static final int SHOW_DIVIDER_BEGINNING
    public static final int SHOW_DIVIDER_MIDDLE
    public static final int SHOW_DIVIDER_END
    private static final int VERTICAL_GRAVITY_COUNT
    private static final int INDEX_CENTER_VERTICAL
    private static final int INDEX_TOP
    private static final int INDEX_BOTTOM
    private static final int INDEX_FILL
    private static final java.lang.String ACCESSIBILITY_CLASS_NAME
com.google.android.material.circularreveal.CircularRevealCompat
    private void <init>()
    public static android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float,float)
androidx.annotation.RequiresPermission$Read
com.google.android.material.R$style
    private void <init>()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat
    public static androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat create(android.content.Context,int,android.content.res.Resources$Theme)
    public void addState(int[],android.graphics.drawable.Drawable,int)
    public void addTransition(int,int,android.graphics.drawable.Drawable,boolean)
    void clearMutated()
    public synthetic bridge void addState(int[],android.graphics.drawable.Drawable)
    public synthetic bridge void setExitFadeDuration(int)
    public synthetic bridge void setEnterFadeDuration(int)
    private static final java.lang.String ELEMENT_TRANSITION
    private static final java.lang.String ELEMENT_ITEM
    private static final java.lang.String TRANSITION_MISSING_DRAWABLE_ERROR
    private static final java.lang.String TRANSITION_MISSING_FROM_TO_ID
    private static final java.lang.String ITEM_MISSING_DRAWABLE_ERROR
androidx.versionedparcelable.CustomVersionedParcelable
    public void onPreParceling(boolean)
    public void onPostParceling()
androidx.appcompat.app.ActionBarDrawerToggle
androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams
    public void setAnchorId(int)
    void invalidateAnchor()
androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl
androidx.cardview.R$styleable
com.qy.R$integer
androidx.cursoradapter.widget.CursorAdapter
    public void <init>(android.content.Context,android.database.Cursor)
    public void <init>(android.content.Context,android.database.Cursor,int)
    protected void init(android.content.Context,android.database.Cursor,boolean)
    public boolean hasStableIds()
    public android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
    public android.widget.FilterQueryProvider getFilterQueryProvider()
    public void setFilterQueryProvider(android.widget.FilterQueryProvider)
    protected android.widget.FilterQueryProvider mFilterQueryProvider
    public static final int FLAG_AUTO_REQUERY
    public static final int FLAG_REGISTER_CONTENT_OBSERVER
androidx.appcompat.resources.R$color
com.google.android.material.navigation.NavigationView$2
androidx.cardview.R$color
androidx.collection.ContainerHelpers
    private void <init>()
androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener
com.google.android.material.internal.NavigationMenuPresenter$SubheaderViewHolder
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject
androidx.core.R$styleable
    private void <init>()
com.google.android.material.textfield.TextInputLayout$EndIconMode
androidx.core.view.ViewCompat$ScrollAxis
androidx.annotation.HalfFloat
com.qy.TextAppearanceUtil
    public void <init>()
    public static void setTabWidgetTitle(android.widget.TabWidget,int)
androidx.recyclerview.widget.AsyncListUtil
androidx.viewpager.widget.PagerTabStrip
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static final java.lang.String TAG
    private static final int INDICATOR_HEIGHT
    private static final int MIN_PADDING_BOTTOM
    private static final int TAB_PADDING
    private static final int TAB_SPACING
    private static final int MIN_TEXT_SPACING
    private static final int FULL_UNDERLINE_HEIGHT
    private static final int MIN_STRIP_HEIGHT
androidx.recyclerview.widget.DefaultItemAnimator
    private static final boolean DEBUG
androidx.core.view.ScaleGestureDetectorCompat
androidx.core.view.ViewGroupCompat
    private void <init>()
    public static boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
    public static void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)
    public static int getLayoutMode(android.view.ViewGroup)
    public static void setLayoutMode(android.view.ViewGroup,int)
    public static void setTransitionGroup(android.view.ViewGroup,boolean)
    public static int getNestedScrollAxes(android.view.ViewGroup)
    public static final int LAYOUT_MODE_CLIP_BOUNDS
    public static final int LAYOUT_MODE_OPTICAL_BOUNDS
androidx.core.app.NotificationCompat$CarExtender
androidx.annotation.LayoutRes
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat
    private static final float PRECISION
    public static final int MAX_NUM_POINTS
    public static final double EPSILON
com.google.android.material.datepicker.MaterialDatePicker$Builder
android.support.constraint.solver.widgets.WidgetContainer
    public void <init>(int,int,int,int)
    public void <init>(int,int)
    public static android.support.constraint.solver.widgets.Rectangle getBounds(java.util.ArrayList)
    public varargs void add(android.support.constraint.solver.widgets.ConstraintWidget[])
    public java.util.ArrayList getChildren()
    public android.support.constraint.solver.widgets.ConstraintWidget findWidget(float,float)
    public java.util.ArrayList findWidgets(int,int,int,int)
com.google.android.material.canvas.CanvasCompat
    private void <init>()
    public static int saveLayerAlpha(android.graphics.Canvas,android.graphics.RectF,int)
androidx.core.provider.FontsContractCompat$4$3
androidx.core.app.RemoteActionCompat
    public void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)
    public void <init>(androidx.core.app.RemoteActionCompat)
    public static androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)
    public void setEnabled(boolean)
    public boolean isEnabled()
    public void setShouldShowIcon(boolean)
    public boolean shouldShowIcon()
    public androidx.core.graphics.drawable.IconCompat getIcon()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getContentDescription()
    public android.app.PendingIntent getActionIntent()
    public android.app.RemoteAction toRemoteAction()
androidx.core.graphics.BitmapCompat
androidx.collection.CircularArray
androidx.viewpager2.R$id
androidx.transition.ChangeImageTransform
androidx.core.provider.SelfDestructiveThread
    public boolean isRunning()
    public int getGeneration()
    private static final int MSG_INVOKE_RUNNABLE
    private static final int MSG_DESTRUCTION
androidx.fragment.R$string
androidx.loader.R$color
com.google.android.material.snackbar.BaseTransientBottomBar$15
androidx.vectordrawable.R$style
androidx.annotation.UiThread
androidx.appcompat.app.TwilightManager
    static void setInstance(androidx.appcompat.app.TwilightManager)
    private static final java.lang.String TAG
    private static final int SUNRISE
    private static final int SUNSET
androidx.transition.Slide
androidx.savedstate.R
androidx.transition.ChangeBounds
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void setResizeClip(boolean)
    public boolean getResizeClip()
    private static final java.lang.String PROPNAME_BOUNDS
    private static final java.lang.String PROPNAME_CLIP
    private static final java.lang.String PROPNAME_PARENT
    private static final java.lang.String PROPNAME_WINDOW_X
    private static final java.lang.String PROPNAME_WINDOW_Y
androidx.annotation.GuardedBy
androidx.core.R$integer
androidx.appcompat.widget.VectorEnabledTintResources
    public static void setCompatVectorFromResourcesEnabled(boolean)
    public static final int MAX_SDK_WHERE_REQUIRED
android.support.constraint.Group
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.viewpager2.R$dimen
androidx.recyclerview.widget.RecyclerView$RecycledViewPool
    public void setMaxRecycledViews(int,int)
    public int getRecycledViewCount(int)
    int size()
    private static final int DEFAULT_MAX_SCRAP
androidx.vectordrawable.animated.R$dimen
androidx.cursoradapter.widget.ResourceCursorAdapter
    public void <init>(android.content.Context,int,android.database.Cursor)
    public void <init>(android.content.Context,int,android.database.Cursor,int)
    public void setViewResource(int)
    public void setDropDownViewResource(int)
androidx.constraintlayout.solver.widgets.Barrier
    public boolean allowsGoneWidget()
    public static final int LEFT
    public static final int RIGHT
    public static final int TOP
    public static final int BOTTOM
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action
    public void <init>(int,int,int)
    public int getDx()
    public void setDx(int)
    public int getDy()
    public void setDy(int)
    public int getDuration()
    public void setDuration(int)
    public android.view.animation.Interpolator getInterpolator()
    public void setInterpolator(android.view.animation.Interpolator)
    public static final int UNDEFINED_DURATION
com.google.android.material.bottomappbar.BottomAppBar$2
androidx.arch.core.executor.ArchTaskExecutor
    public static java.util.concurrent.Executor getMainThreadExecutor()
    public static java.util.concurrent.Executor getIOThreadExecutor()
    public void setDelegate(androidx.arch.core.executor.TaskExecutor)
com.google.android.material.bottomnavigation.BottomNavigationView$1
androidx.annotation.InspectableProperty
com.google.android.material.circularreveal.CircularRevealGridLayout
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void actualDraw(android.graphics.Canvas)
    public boolean actualIsOpaque()
androidx.recyclerview.widget.AdapterHelper$UpdateOp
    static final int ADD
    static final int REMOVE
    static final int UPDATE
    static final int MOVE
    static final int POOL_SIZE
androidx.core.app.ShareCompat
androidx.core.content.SharedPreferencesCompat$EditorCompat
androidx.appcompat.view.WindowCallbackWrapper
    public void onContentChanged()
androidx.lifecycle.MethodCallsLogger
    public boolean approveCall(java.lang.String,int)
androidx.appcompat.widget.PopupMenu$1
androidx.appcompat.widget.DecorToolbar
    public abstract void setTitle(java.lang.CharSequence)
    public abstract java.lang.CharSequence getSubtitle()
    public abstract void setSubtitle(java.lang.CharSequence)
    public abstract boolean hasIcon()
    public abstract boolean hasLogo()
    public abstract void setLogo(android.graphics.drawable.Drawable)
    public abstract boolean hasEmbeddedTabs()
    public abstract boolean isTitleTruncated()
    public abstract void setNavigationMode(int)
    public abstract void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
    public abstract void setDropdownSelectedPosition(int)
    public abstract int getDropdownSelectedPosition()
    public abstract int getDropdownItemCount()
    public abstract void setCustomView(android.view.View)
    public abstract android.view.View getCustomView()
    public abstract void animateToVisibility(int)
    public abstract void setNavigationIcon(android.graphics.drawable.Drawable)
    public abstract void setNavigationIcon(int)
    public abstract void setNavigationContentDescription(java.lang.CharSequence)
    public abstract void setNavigationContentDescription(int)
    public abstract void setDefaultNavigationContentDescription(int)
    public abstract void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
    public abstract void saveHierarchyState(android.util.SparseArray)
    public abstract void restoreHierarchyState(android.util.SparseArray)
    public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public abstract int getHeight()
    public abstract int getVisibility()
    public abstract void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    public abstract android.view.Menu getMenu()
androidx.core.os.LocaleListInterface
com.qy.MaxMapInfoWindow
    public static void setLayoutXY(android.widget.ImageView,int,int)
    public void setWindowX(int)
    public void setWindowY(int)
androidx.core.widget.ContentLoadingProgressBar$2
androidx.annotation.TransitionRes
androidx.appcompat.widget.ListPopupWindow
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static boolean isConfirmKey(int)
    public int getPromptPosition()
    public void setForceIgnoreOutsideTouch(boolean)
    public void setDropDownAlwaysVisible(boolean)
    public boolean isDropDownAlwaysVisible()
    public void setSoftInputMode(int)
    public int getSoftInputMode()
    public void setListSelector(android.graphics.drawable.Drawable)
    public int getAnimationStyle()
    public android.graphics.Rect getEpicenterBounds()
    public int getHeight()
    public void setHeight(int)
    public void setWindowLayoutType(int)
    public void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
    public void setPromptView(android.view.View)
    public void postShow()
    public int getInputMethodMode()
    public boolean performItemClick(int)
    public java.lang.Object getSelectedItem()
    public int getSelectedItemPosition()
    public long getSelectedItemId()
    public android.view.View getSelectedView()
    void setListItemExpandMax(int)
    public boolean onKeyDown(int,android.view.KeyEvent)
    public boolean onKeyUp(int,android.view.KeyEvent)
    public boolean onKeyPreIme(int,android.view.KeyEvent)
    public android.view.View$OnTouchListener createDragToOpenListener(android.view.View)
    private static final java.lang.String TAG
    private static final boolean DEBUG
    static final int EXPAND_LIST_TIMEOUT
    public static final int POSITION_PROMPT_ABOVE
    public static final int POSITION_PROMPT_BELOW
    public static final int MATCH_PARENT
    public static final int WRAP_CONTENT
    public static final int INPUT_METHOD_FROM_FOCUSABLE
    public static final int INPUT_METHOD_NEEDED
    public static final int INPUT_METHOD_NOT_NEEDED
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
    public void setAutoHideEnabled(boolean)
    public boolean isAutoHideEnabled()
    public void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    private static final boolean AUTO_HIDE_DEFAULT
android.support.constraint.Constraints
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    private void init(android.util.AttributeSet)
    public static final java.lang.String TAG
androidx.transition.ViewUtilsBase
    public void setAnimationMatrix(android.view.View,android.graphics.Matrix)
    private float[] mMatrixValues
    private static final java.lang.String TAG
    private static final int VISIBILITY_MASK
androidx.core.app.ComponentActivity$ExtraData
androidx.appcompat.view.menu.ActionMenuItem
    public androidx.appcompat.view.menu.ActionMenuItem setExclusiveCheckable(boolean)
    public boolean invoke()
    public boolean requiresActionButton()
    public boolean requiresOverflow()
    private static final int NO_ICON
    private static final int CHECKABLE
    private static final int CHECKED
    private static final int EXCLUSIVE
    private static final int HIDDEN
    private static final int ENABLED
androidx.appcompat.widget.AppCompatPopupWindow
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.transition.TransitionPropagation
    public void <init>()
androidx.recyclerview.widget.ChildHelper$Bucket
    static final int BITS_PER_WORD
    static final long LAST_BIT
androidx.annotation.BinderThread
com.google.android.material.shape.CutCornerTreatment
    public void <init>(float)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams
    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    public void setFullSpan(boolean)
    public static final int INVALID_SPAN_ID
androidx.recyclerview.widget.PagerSnapHelper$1
androidx.annotation.PluralsRes
androidx.recyclerview.widget.DiffUtil
androidx.core.content.pm.ShortcutManagerCompat$1
androidx.core.text.TextDirectionHeuristicsCompat
    private void <init>()
    private static final int STATE_TRUE
    private static final int STATE_FALSE
    private static final int STATE_UNKNOWN
androidx.transition.CircularPropagation
android.support.constraint.Placeholder
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
    private void init(android.util.AttributeSet)
androidx.annotation.Nullable
androidx.transition.ViewGroupUtils
    static int getChildDrawingOrder(android.view.ViewGroup,int)
    private void <init>()
    private static java.lang.reflect.Method sGetChildDrawingOrderMethod
    private static boolean sGetChildDrawingOrderMethodFetched
androidx.coordinatorlayout.R$styleable
    private void <init>()
com.google.android.material.datepicker.RangeDateSelector$2
androidx.recyclerview.widget.ListUpdateCallback
com.google.android.material.internal.ViewUtils$RelativePadding
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver
    public void onItemRangeChanged(int,int,java.lang.Object)
    public void onItemRangeInserted(int,int)
    public void onItemRangeRemoved(int,int)
    public void onItemRangeMoved(int,int,int)
    void triggerUpdateProcessor()
androidx.vectordrawable.animated.R$style
com.google.android.material.shape.EdgeTreatment
    public void getEdgePath(float,float,com.google.android.material.shape.ShapePath)
com.google.android.material.badge.BadgeDrawable$BadgeGravity
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter
androidx.coordinatorlayout.widget.ViewGroupUtils
    private void <init>()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$1
androidx.recyclerview.widget.ItemTouchUIUtil
com.google.android.material.datepicker.DaysOfWeekAdapter
    private static final int NARROW_FORMAT
androidx.fragment.app.DialogFragment
    public void <init>()
    public void setStyle(int,int)
    public void show(androidx.fragment.app.FragmentManager,java.lang.String)
    public int show(androidx.fragment.app.FragmentTransaction,java.lang.String)
    public void showNow(androidx.fragment.app.FragmentManager,java.lang.String)
    public void dismiss()
    public void dismissAllowingStateLoss()
    void dismissInternal(boolean,boolean)
    public android.app.Dialog getDialog()
    public final android.app.Dialog requireDialog()
    public int getTheme()
    public void setCancelable(boolean)
    public boolean isCancelable()
    public void setShowsDialog(boolean)
    public boolean getShowsDialog()
    public void onAttach(android.content.Context)
    public void onDetach()
    public void onCreate(android.os.Bundle)
    public android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
    public void setupDialog(android.app.Dialog,int)
    public android.app.Dialog onCreateDialog(android.os.Bundle)
    public void onCancel(android.content.DialogInterface)
    public void onDismiss(android.content.DialogInterface)
    public void onActivityCreated(android.os.Bundle)
    public void onStart()
    public void onSaveInstanceState(android.os.Bundle)
    public void onStop()
    public void onDestroyView()
    private android.os.Handler mHandler
    private java.lang.Runnable mDismissRunnable
    int mStyle
    int mTheme
    boolean mCancelable
    boolean mShowsDialog
    int mBackStackId
    android.app.Dialog mDialog
    boolean mViewDestroyed
    boolean mDismissed
    boolean mShownByMe
    public static final int STYLE_NORMAL
    public static final int STYLE_NO_TITLE
    public static final int STYLE_NO_FRAME
    public static final int STYLE_NO_INPUT
    private static final java.lang.String SAVED_DIALOG_STATE_TAG
    private static final java.lang.String SAVED_STYLE
    private static final java.lang.String SAVED_THEME
    private static final java.lang.String SAVED_CANCELABLE
    private static final java.lang.String SAVED_SHOWS_DIALOG
    private static final java.lang.String SAVED_BACK_STACK_ID
com.qy.MainActivity$OnWindowPermissionListener
android.support.constraint.solver.Metrics
    public void <init>()
    public java.lang.String toString()
    public void reset()
    public long variables
    public long oldresolvedWidgets
    public java.util.ArrayList problematicLayouts
androidx.viewpager2.adapter.FragmentStateAdapter$3
androidx.appcompat.R$styleable
    private void <init>()
androidx.core.internal.package-info
androidx.appcompat.app.AlertController
    public void setButtonPanelLayoutHint(int)
    public android.widget.Button getButton(int)
androidx.recyclerview.widget.AsyncListDiffer$1$2
androidx.annotation.AttrRes
androidx.core.content.pm.ActivityInfoCompat
androidx.core.view.GestureDetectorCompat
androidx.transition.PathMotion
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.core.app.Person
com.qy.R$layout
androidx.annotation.ArrayRes
androidx.annotation.StyleRes
androidx.core.content.MimeTypeFilter
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ShowStrategy
androidx.core.view.DisplayCutoutCompat
androidx.core.app.NotificationCompat$NotificationVisibility
androidx.transition.TransitionSet
    public void <init>(android.content.Context,android.util.AttributeSet)
    public int getOrdering()
    public androidx.transition.TransitionSet addTarget(int)
    public androidx.transition.TransitionSet addTarget(java.lang.String)
    public androidx.transition.TransitionSet addTarget(java.lang.Class)
    public androidx.transition.TransitionSet removeTarget(int)
    public androidx.transition.TransitionSet removeTarget(java.lang.Class)
    public androidx.transition.TransitionSet removeTarget(java.lang.String)
    public androidx.transition.Transition excludeTarget(android.view.View,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.String,boolean)
    public androidx.transition.Transition excludeTarget(int,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.Class,boolean)
    public androidx.transition.TransitionSet removeTransition(androidx.transition.Transition)
    protected void cancel()
    void forceToEnd(android.view.ViewGroup)
    androidx.transition.TransitionSet setSceneRoot(android.view.ViewGroup)
    void setCanRemoveViews(boolean)
    synthetic bridge androidx.transition.Transition setSceneRoot(android.view.ViewGroup)
    public synthetic bridge androidx.transition.Transition removeTarget(java.lang.Class)
    public synthetic bridge androidx.transition.Transition removeTarget(java.lang.String)
    public synthetic bridge androidx.transition.Transition removeTarget(int)
    public synthetic bridge androidx.transition.Transition addTarget(java.lang.Class)
    public synthetic bridge androidx.transition.Transition addTarget(java.lang.String)
    public synthetic bridge androidx.transition.Transition addTarget(int)
    private static final int FLAG_CHANGE_INTERPOLATOR
    private static final int FLAG_CHANGE_PROPAGATION
    private static final int FLAG_CHANGE_PATH_MOTION
    private static final int FLAG_CHANGE_EPICENTER
    public static final int ORDERING_TOGETHER
    public static final int ORDERING_SEQUENTIAL
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat
    private void <init>()
androidx.appcompat.widget.ActivityChooserModel$DefaultSorter
androidx.recyclerview.widget.MessageThreadUtil$2
androidx.appcompat.widget.ActivityChooserView
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    void updateAppearance()
    private final android.graphics.drawable.Drawable mActivityChooserContentBackground
    final android.widget.FrameLayout mExpandActivityOverflowButton
    private final android.widget.ImageView mDefaultActivityButtonImage
    private static final java.lang.String LOG_TAG
androidx.core.view.VelocityTrackerCompat
androidx.recyclerview.widget.TileList
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback
androidx.recyclerview.widget.SortedList$BatchedCallback
androidx.core.widget.TintableCompoundButton
    public abstract android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
com.google.android.material.snackbar.BaseTransientBottomBar$2
com.google.android.material.snackbar.SnackbarManager
    private void showNextSnackbarLocked()
    private boolean isNextSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)
    public void show(int,com.google.android.material.snackbar.SnackbarManager$Callback)
    public void dismiss(com.google.android.material.snackbar.SnackbarManager$Callback,int)
    public void onDismissed(com.google.android.material.snackbar.SnackbarManager$Callback)
    public void onShown(com.google.android.material.snackbar.SnackbarManager$Callback)
    public boolean isCurrent(com.google.android.material.snackbar.SnackbarManager$Callback)
    public boolean isCurrentOrNext(com.google.android.material.snackbar.SnackbarManager$Callback)
    static final int MSG_TIMEOUT
    private static final int SHORT_DURATION_MS
    private static final int LONG_DURATION_MS
androidx.viewpager.R$drawable
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
    void <init>(androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer)
com.google.android.material.R$bool
android.support.constraint.ConstraintSet$Constraint
    static synthetic void access$100(android.support.constraint.ConstraintSet$Constraint,int,android.support.constraint.ConstraintLayout$LayoutParams)
    static final int UNSET
androidx.core.R$color
com.google.android.material.floatingactionbutton.FloatingActionButton$Size
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler
android.support.constraint.ConstraintLayout$LayoutParams
    public void <init>(android.support.constraint.ConstraintLayout$LayoutParams)
    public void reset()
    public static final int MATCH_CONSTRAINT
    public static final int PARENT_ID
    public static final int UNSET
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int LEFT
    public static final int RIGHT
    public static final int TOP
    public static final int BOTTOM
    public static final int BASELINE
    public static final int START
    public static final int END
    public static final int MATCH_CONSTRAINT_WRAP
    public static final int MATCH_CONSTRAINT_SPREAD
    public static final int MATCH_CONSTRAINT_PERCENT
    public static final int CHAIN_SPREAD
    public static final int CHAIN_SPREAD_INSIDE
    public static final int CHAIN_PACKED
androidx.recyclerview.widget.RecyclerView$Recycler
    public void bindViewToPosition(android.view.View,int)
    static final int DEFAULT_CACHE_SIZE
androidx.transition.Transition$MatchOrder
androidx.recyclerview.widget.ItemTouchHelper$3
androidx.appcompat.app.ActionBarDrawerToggle$1
androidx.viewpager.widget.PagerTitleStrip
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void setTextSize(int,float)
    private static final float SIDE_ALPHA
    private static final int TEXT_SPACING
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1
com.google.android.material.behavior.SwipeDismissBehavior
    public void setListener(com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener)
    public void setDragDismissDistance(float)
    public void setSensitivity(float)
    public int getDragState()
    public static final int STATE_IDLE
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int SWIPE_DIRECTION_START_TO_END
    public static final int SWIPE_DIRECTION_END_TO_START
    public static final int SWIPE_DIRECTION_ANY
    private static final float DEFAULT_DRAG_DISMISS_THRESHOLD
    private static final float DEFAULT_ALPHA_START_DISTANCE
    private static final float DEFAULT_ALPHA_END_DISTANCE
androidx.core.text.util.LinkifyCompat$LinkSpec
androidx.core.graphics.PathUtils
androidx.core.app.NotificationCompat$WearableExtender
com.google.android.material.internal.NavigationMenuPresenter
    public void <init>()
    private void updateTopPadding()
    static synthetic int access$000(com.google.android.material.internal.NavigationMenuPresenter)
    public void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public void updateMenuView(boolean)
    public void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
    public boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
    public boolean flagActionItems()
    public boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
    public boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
    public int getId()
    public void setId(int)
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
    public android.view.View inflateHeaderView(int)
    public void addHeaderView(android.view.View)
    public void removeHeaderView(android.view.View)
    public android.view.View getHeaderView(int)
    public void setUpdateSuspended(boolean)
    public void setBehindStatusBar(boolean)
    public boolean isBehindStatusBar()
    public void dispatchApplyWindowInsets(androidx.core.view.WindowInsetsCompat)
    private com.google.android.material.internal.NavigationMenuView menuView
    android.widget.LinearLayout headerLayout
    private androidx.appcompat.view.menu.MenuPresenter$Callback callback
    androidx.appcompat.view.menu.MenuBuilder menu
    private int id
    com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter adapter
    android.view.LayoutInflater layoutInflater
    int textAppearance
    boolean textAppearanceSet
    android.content.res.ColorStateList textColor
    android.content.res.ColorStateList iconTintList
    android.graphics.drawable.Drawable itemBackground
    int itemHorizontalPadding
    int itemIconPadding
    int itemIconSize
    boolean hasCustomItemIconSize
    boolean isBehindStatusBar
    private int itemMaxLines
    private int paddingTopDefault
    int paddingSeparator
    private int overScrollMode
    final android.view.View$OnClickListener onClickListener
    private static final java.lang.String STATE_HIERARCHY
    private static final java.lang.String STATE_ADAPTER
    private static final java.lang.String STATE_HEADER
androidx.annotation.BoolRes
com.google.android.material.button.MaterialButtonToggleGroup$1
com.google.android.material.circularreveal.CircularRevealFrameLayout
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void actualDraw(android.graphics.Canvas)
    public boolean actualIsOpaque()
androidx.lifecycle.AndroidViewModel
androidx.appcompat.view.menu.MenuBuilder
    public void removeItemAt(int)
    public void clearAll()
    public void setShortcutsVisible(boolean)
    public void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)
    public void setOptionalIconsVisible(boolean)
    private android.util.SparseArray mFrozenViewStates
    private static final java.lang.String TAG
    private static final java.lang.String PRESENTER_KEY
    private static final java.lang.String ACTION_VIEW_STATES_KEY
    private static final java.lang.String EXPANDED_ACTION_VIEW_ID
androidx.transition.R$attr
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable
    public void notifyItemRangeChanged(int,int)
    public void notifyItemRangeChanged(int,int,java.lang.Object)
    public void notifyItemRangeInserted(int,int)
    public void notifyItemRangeRemoved(int,int)
    public void notifyItemMoved(int,int)
androidx.transition.R
androidx.viewpager2.widget.ViewPager2$1
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
    void startCreatingLoader()
    boolean isCreatingLoader()
    void finishCreatingLoader()
    void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo)
    androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)
    void removeLoader(int)
    boolean hasRunningLoaders()
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
    public void <init>()
android.support.constraint.solver.widgets.Guideline
    public int getRelativeBehaviour()
    public android.support.constraint.solver.widgets.Rectangle getHead()
    public android.support.constraint.solver.widgets.ConstraintAnchor getAnchor()
    public java.lang.String getType()
    public void setMinimumPosition(int)
    public void setPositionRelaxed(boolean)
    public void setGuidePercent(int)
    public float getRelativePercent()
    public int getRelativeBegin()
    public int getRelativeEnd()
    public void setDrawOrigin(int,int)
    void inferRelativePercentPosition()
    void inferRelativeBeginPosition()
    void inferRelativeEndPosition()
    public void cyclePosition()
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int RELATIVE_PERCENT
    public static final int RELATIVE_BEGIN
    public static final int RELATIVE_END
    public static final int RELATIVE_UNKNWON
androidx.core.app.NotificationBuilderWithBuilderAccessor
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean)
    public int getColumnCount()
    public int getRowCount()
    public boolean isHierarchical()
    public int getSelectionMode()
    public static final int SELECTION_MODE_NONE
    public static final int SELECTION_MODE_SINGLE
    public static final int SELECTION_MODE_MULTIPLE
androidx.appcompat.widget.ThemeUtils
    public static android.content.res.ColorStateList createDisabledStateList(int,int)
    private void <init>()
androidx.viewpager.widget.ViewPager$3
androidx.appcompat.resources.R
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl
androidx.constraintlayout.solver.widgets.WidgetContainer
    public void <init>(int,int,int,int)
    public void <init>(int,int)
    public static androidx.constraintlayout.solver.widgets.Rectangle getBounds(java.util.ArrayList)
    public varargs void add(androidx.constraintlayout.solver.widgets.ConstraintWidget[])
    public java.util.ArrayList getChildren()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget findWidget(float,float)
    public java.util.ArrayList findWidgets(int,int,int,int)
androidx.appcompat.app.ActionBarDrawerToggle$Delegate
androidx.appcompat.widget.ActionMenuView
    private static final java.lang.String TAG
    static final int MIN_CELL_SIZE
    static final int GENERATED_ITEM_PADDING
androidx.annotation.FontRes
androidx.appcompat.widget.ButtonBarLayout
    private static final int PEEK_BUTTON_DP
androidx.appcompat.widget.RtlSpacingHelper
    public static final int UNDEFINED
com.google.android.material.behavior.SwipeDismissBehavior$1
    private static final int INVALID_POINTER_ID
androidx.recyclerview.widget.LinearLayoutManager$LayoutState
    void log()
    static final java.lang.String TAG
    static final int LAYOUT_START
    static final int LAYOUT_END
    static final int INVALID_LAYOUT
    static final int ITEM_DIRECTION_HEAD
    static final int ITEM_DIRECTION_TAIL
    static final int SCROLLING_OFFSET_NaN
androidx.core.app.AppLaunchChecker
androidx.recyclerview.widget.ViewInfoStore
    private static final boolean DEBUG
androidx.core.view.ActionProvider
    public android.content.Context getContext()
    public void refreshVisibility()
    private static final java.lang.String TAG
com.google.android.material.floatingactionbutton.AnimatorTracker
com.google.android.material.card.MaterialCardViewHelper
    public void <init>(com.google.android.material.card.MaterialCardView,android.util.AttributeSet,int,int)
    private void updateInsetForeground(android.graphics.drawable.Drawable)
    private android.graphics.drawable.Drawable insetDrawable(android.graphics.drawable.Drawable)
    private float calculateVerticalBackgroundPadding()
    private float calculateHorizontalBackgroundPadding()
    private boolean canClipToOutline()
    private float getParentCardViewCalculatedCornerPadding()
    private boolean shouldAddCornerPaddingInsideCardBackground()
    private boolean shouldAddCornerPaddingOutsideCardBackground()
    private float calculateActualCornerPadding()
    private float calculateCornerPaddingForCornerTreatment(com.google.android.material.shape.CornerTreatment,float)
    private android.graphics.drawable.Drawable getClickableForeground()
    private android.graphics.drawable.Drawable createForegroundRippleDrawable()
    private android.graphics.drawable.Drawable createCompatRippleDrawable()
    private void updateRippleColor()
    private android.graphics.drawable.Drawable createCheckedIconLayer()
    private com.google.android.material.shape.MaterialShapeDrawable createForegroundShapeDrawable()
    void loadFromAttributes(android.content.res.TypedArray)
    void setUserContentPadding(int,int,int,int)
    void updateStroke()
    private final com.google.android.material.card.MaterialCardView materialCardView
    private final android.graphics.Rect userContentPadding
    private final com.google.android.material.shape.MaterialShapeDrawable bgDrawable
    private final com.google.android.material.shape.MaterialShapeDrawable foregroundContentDrawable
    private final int checkedIconMargin
    private final int checkedIconSize
    private int strokeWidth
    private android.graphics.drawable.Drawable fgDrawable
    private android.graphics.drawable.Drawable checkedIcon
    private android.content.res.ColorStateList rippleColor
    private android.content.res.ColorStateList checkedIconTint
    private com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel
    private android.content.res.ColorStateList strokeColor
    private android.graphics.drawable.Drawable rippleDrawable
    private android.graphics.drawable.LayerDrawable clickableForegroundDrawable
    private com.google.android.material.shape.MaterialShapeDrawable compatRippleDrawable
    private com.google.android.material.shape.MaterialShapeDrawable foregroundShapeDrawable
    private boolean isBackgroundOverwritten
    private boolean checkable
    private static final int DEFAULT_STROKE_VALUE
    private static final float CARD_VIEW_SHADOW_MULTIPLIER
    private static final int CHECKED_ICON_LAYER_INDEX
com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper$1
androidx.loader.content.ModernAsyncTask$3
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl
    void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)
    void setMinTouchTargetSize(int)
    final void setMaxImageSize(int)
    void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    void removeTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback)
    com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable()
    static final long ELEVATION_ANIM_DURATION
    static final long ELEVATION_ANIM_DELAY
    static final int ANIM_STATE_NONE
    static final int ANIM_STATE_HIDING
    static final int ANIM_STATE_SHOWING
    static final float SHADOW_MULTIPLIER
    private static final float HIDE_OPACITY
    private static final float HIDE_SCALE
    private static final float HIDE_ICON_SCALE
    private static final float SHOW_OPACITY
    private static final float SHOW_SCALE
    private static final float SHOW_ICON_SCALE
androidx.viewpager2.adapter.FragmentStateAdapter$DataSetChangeObserver
com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper
androidx.versionedparcelable.R
com.qy.R$id
androidx.core.app.NotificationManagerCompat
androidx.vectordrawable.animated.R
androidx.core.app.RemoteInput$Source
com.google.android.material.chip.ChipGroup
    public void check(int)
    public boolean isSingleSelection()
androidx.viewpager2.widget.ViewPager2$AccessibilityProvider
    private void <init>(androidx.viewpager2.widget.ViewPager2)
    synthetic void <init>(androidx.viewpager2.widget.ViewPager2,androidx.viewpager2.widget.ViewPager2$1)
    void onInitialize(androidx.viewpager2.widget.CompositeOnPageChangeCallback,androidx.recyclerview.widget.RecyclerView)
    void onRvInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    boolean handlesLmPerformAccessibilityAction(int)
    boolean onLmPerformAccessibilityAction(int)
    void onLmInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    boolean handlesRvGetAccessibilityClassName()
    java.lang.CharSequence onRvGetAccessibilityClassName()
    final synthetic androidx.viewpager2.widget.ViewPager2 this$0
androidx.appcompat.app.NavItemSelectedListener
androidx.recyclerview.widget.LinearSmoothScroller
    private static final boolean DEBUG
    private static final float MILLISECONDS_PER_INCH
    private static final int TARGET_SEEK_SCROLL_DISTANCE_PX
    public static final int SNAP_TO_START
    public static final int SNAP_TO_END
    public static final int SNAP_TO_ANY
    private static final float TARGET_SEEK_EXTRA_SCROLL_RATIO
androidx.core.app.NotificationManagerCompat$CancelTask
androidx.appcompat.widget.ActivityChooserView$4
androidx.collection.ArraySet
    public void <init>(androidx.collection.ArraySet)
    public void <init>(java.util.Collection)
    public void addAll(androidx.collection.ArraySet)
    public boolean removeAll(androidx.collection.ArraySet)
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final int BASE_SIZE
    private static final int CACHE_SIZE
android.support.constraint.ConstraintSet
    private void createHorizontalChain(int,int,int,int,int[],float[],int,int,int)
    private android.support.constraint.ConstraintSet$Constraint get(int)
    private java.lang.String sideToString(int)
    private static int lookupID(android.content.res.TypedArray,int,int)
    private android.support.constraint.ConstraintSet$Constraint fillFromAttributeList(android.content.Context,android.util.AttributeSet)
    private void populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)
    public android.support.constraint.ConstraintSet$Constraint getParameters(int)
    public void clone(android.content.Context,int)
    public void clone(android.support.constraint.ConstraintSet)
    public void clone(android.support.constraint.ConstraintLayout)
    public void applyTo(android.support.constraint.ConstraintLayout)
    public void center(int,int,int,int,int,int,int,float)
    public void centerHorizontally(int,int,int,int,int,int,int,float)
    public void centerHorizontallyRtl(int,int,int,int,int,int,int,float)
    public void centerVertically(int,int,int,int,int,int,int,float)
    public void createVerticalChain(int,int,int,int,int[],float[],int)
    public void createHorizontalChain(int,int,int,int,int[],float[],int)
    public void createHorizontalChainRtl(int,int,int,int,int[],float[],int)
    public void connect(int,int,int,int,int)
    public void connect(int,int,int,int)
    public void centerHorizontally(int,int)
    public void centerHorizontallyRtl(int,int)
    public void centerVertically(int,int)
    public void clear(int)
    public void clear(int,int)
    public void setMargin(int,int,int)
    public void setGoneMargin(int,int,int)
    public void setHorizontalBias(int,float)
    public void setVerticalBias(int,float)
    public void setDimensionRatio(int,java.lang.String)
    public void setVisibility(int,int)
    public void setAlpha(int,float)
    public boolean getApplyElevation(int)
    public void setApplyElevation(int,boolean)
    public void setElevation(int,float)
    public void setRotation(int,float)
    public void setRotationX(int,float)
    public void setRotationY(int,float)
    public void setScaleX(int,float)
    public void setScaleY(int,float)
    public void setTransformPivotX(int,float)
    public void setTransformPivotY(int,float)
    public void setTransformPivot(int,float,float)
    public void setTranslationX(int,float)
    public void setTranslationY(int,float)
    public void setTranslation(int,float,float)
    public void setTranslationZ(int,float)
    public void constrainHeight(int,int)
    public void constrainWidth(int,int)
    public void constrainCircle(int,int,int,float)
    public void constrainMaxHeight(int,int)
    public void constrainMaxWidth(int,int)
    public void constrainMinHeight(int,int)
    public void constrainMinWidth(int,int)
    public void constrainPercentWidth(int,float)
    public void constrainPercentHeight(int,float)
    public void constrainDefaultHeight(int,int)
    public void constrainDefaultWidth(int,int)
    public void setHorizontalWeight(int,float)
    public void setVerticalWeight(int,float)
    public void setHorizontalChainStyle(int,int)
    public void setVerticalChainStyle(int,int)
    public void addToHorizontalChain(int,int,int)
    public void addToHorizontalChainRTL(int,int,int)
    public void addToVerticalChain(int,int,int)
    public void removeFromVerticalChain(int)
    public void removeFromHorizontalChain(int)
    public void create(int,int)
    public varargs void createBarrier(int,int,int[])
    public void setGuidelineBegin(int,int)
    public void setGuidelineEnd(int,int)
    public void setGuidelinePercent(int,float)
    public void setBarrierType(int,int)
    public void load(android.content.Context,int)
    private static final java.lang.String TAG
    public static final int UNSET
    public static final int MATCH_CONSTRAINT
    public static final int WRAP_CONTENT
    public static final int MATCH_CONSTRAINT_WRAP
    public static final int MATCH_CONSTRAINT_SPREAD
    public static final int PARENT_ID
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int HORIZONTAL_GUIDELINE
    public static final int VERTICAL_GUIDELINE
    public static final int VISIBLE
    public static final int INVISIBLE
    public static final int GONE
    public static final int LEFT
    public static final int RIGHT
    public static final int TOP
    public static final int BOTTOM
    public static final int BASELINE
    public static final int START
    public static final int END
    public static final int CHAIN_SPREAD
    public static final int CHAIN_SPREAD_INSIDE
    public static final int CHAIN_PACKED
    private static final boolean DEBUG
    private static final int BARRIER_TYPE
    private static final int BASELINE_TO_BASELINE
    private static final int BOTTOM_MARGIN
    private static final int BOTTOM_TO_BOTTOM
    private static final int BOTTOM_TO_TOP
    private static final int DIMENSION_RATIO
    private static final int EDITOR_ABSOLUTE_X
    private static final int EDITOR_ABSOLUTE_Y
    private static final int END_MARGIN
    private static final int END_TO_END
    private static final int END_TO_START
    private static final int GONE_BOTTOM_MARGIN
    private static final int GONE_END_MARGIN
    private static final int GONE_LEFT_MARGIN
    private static final int GONE_RIGHT_MARGIN
    private static final int GONE_START_MARGIN
    private static final int GONE_TOP_MARGIN
    private static final int GUIDE_BEGIN
    private static final int GUIDE_END
    private static final int GUIDE_PERCENT
    private static final int HORIZONTAL_BIAS
    private static final int LAYOUT_HEIGHT
    private static final int LAYOUT_VISIBILITY
    private static final int LAYOUT_WIDTH
    private static final int LEFT_MARGIN
    private static final int LEFT_TO_LEFT
    private static final int LEFT_TO_RIGHT
    private static final int ORIENTATION
    private static final int RIGHT_MARGIN
    private static final int RIGHT_TO_LEFT
    private static final int RIGHT_TO_RIGHT
    private static final int START_MARGIN
    private static final int START_TO_END
    private static final int START_TO_START
    private static final int TOP_MARGIN
    private static final int TOP_TO_BOTTOM
    private static final int TOP_TO_TOP
    private static final int VERTICAL_BIAS
    private static final int VIEW_ID
    private static final int HORIZONTAL_WEIGHT
    private static final int VERTICAL_WEIGHT
    private static final int HORIZONTAL_STYLE
    private static final int VERTICAL_STYLE
    private static final int ALPHA
    private static final int ELEVATION
    private static final int ROTATION_X
    private static final int ROTATION_Y
    private static final int SCALE_X
    private static final int SCALE_Y
    private static final int TRANSFORM_PIVOT_X
    private static final int TRANSFORM_PIVOT_Y
    private static final int TRANSLATION_X
    private static final int TRANSLATION_Y
    private static final int TRANSLATION_Z
    private static final int WIDTH_DEFAULT
    private static final int HEIGHT_DEFAULT
    private static final int WIDTH_MAX
    private static final int HEIGHT_MAX
    private static final int WIDTH_MIN
    private static final int HEIGHT_MIN
    private static final int ROTATION
    private static final int CIRCLE
    private static final int CIRCLE_RADIUS
    private static final int CIRCLE_ANGLE
    private static final int WIDTH_PERCENT
    private static final int HEIGHT_PERCENT
    private static final int CHAIN_USE_RTL
    private static final int BARRIER_DIRECTION
    private static final int CONSTRAINT_REFERENCED_IDS
    private static final int BARRIER_ALLOWS_GONE_WIDGETS
    private static final int UNUSED
androidx.core.text.util.LinkifyCompat$1
androidx.coordinatorlayout.R
com.google.android.material.R$layout
    private void <init>()
androidx.core.util.Pools
androidx.annotation.MenuRes
com.google.android.material.datepicker.UtcDates
    private void <init>()
    static java.text.SimpleDateFormat getTextInputFormat()
    static java.lang.String getTextInputHint(android.content.res.Resources,java.text.SimpleDateFormat)
    static java.text.SimpleDateFormat getSimpleFormat(java.lang.String)
    static android.icu.text.DateFormat getYearAbbrMonthDayFormat(java.util.Locale)
    static android.icu.text.DateFormat getAbbrMonthDayFormat(java.util.Locale)
    static java.text.DateFormat getMediumFormat()
    static java.text.DateFormat getMediumFormat(java.util.Locale)
    static java.text.DateFormat getMediumNoYear()
    static java.text.DateFormat getMediumNoYear(java.util.Locale)
    static java.text.DateFormat getFullFormat()
    private static java.lang.String removeYearFromDateFormatPattern(java.lang.String)
    private static int findCharactersInDateFormatPattern(java.lang.String,java.lang.String,int,int)
    static final java.lang.String UTC
androidx.savedstate.SavedStateRegistry
    public void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)
    public void unregisterSavedStateProvider(java.lang.String)
    public boolean isRestored()
    public void runOnNextRecreation(java.lang.Class)
    private androidx.savedstate.Recreator$SavedStateProvider mRecreatorProvider
    private static final java.lang.String SAVED_COMPONENTS_KEY
com.qy.R$anim
com.google.android.material.appbar.AppBarLayout$LayoutParams
    public void <init>(int,int,float)
    public void <init>(com.google.android.material.appbar.AppBarLayout$LayoutParams)
    public void setScrollFlags(int)
    public void setScrollInterpolator(android.view.animation.Interpolator)
    public static final int SCROLL_FLAG_NO_SCROLL
    public static final int SCROLL_FLAG_SCROLL
    public static final int SCROLL_FLAG_EXIT_UNTIL_COLLAPSED
    public static final int SCROLL_FLAG_ENTER_ALWAYS
    public static final int SCROLL_FLAG_ENTER_ALWAYS_COLLAPSED
    public static final int SCROLL_FLAG_SNAP
    public static final int SCROLL_FLAG_SNAP_MARGINS
    static final int FLAG_QUICK_RETURN
    static final int FLAG_SNAP
    static final int COLLAPSIBLE_FLAGS
com.google.android.material.dialog.MaterialAlertDialogBuilder
androidx.constraintlayout.solver.widgets.ResolutionAnchor
    public void remove(androidx.constraintlayout.solver.widgets.ResolutionDimension)
    public static final int UNCONNECTED
    public static final int DIRECT_CONNECTION
    public static final int CENTER_CONNECTION
    public static final int MATCH_CONNECTION
    public static final int CHAIN_CONNECTION
    public static final int BARRIER_CONNECTION
androidx.vectordrawable.animated.R$styleable
com.google.android.material.bottomsheet.BottomSheetDialog$4
com.google.android.material.resources.MaterialResources
    private void <init>()
android.support.constraint.solver.widgets.ConstraintAnchor
    private boolean isConnectionToMe(android.support.constraint.solver.widgets.ConstraintWidget,java.util.HashSet)
    public android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType getConnectionType()
    public void setConnectionType(android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType)
    public void setConnectionCreator(int)
    public boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor,int,int)
    public boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor,int)
    public boolean isSideAnchor()
    public boolean isSimilarDimensionConnection(android.support.constraint.solver.widgets.ConstraintAnchor)
    public void setStrength(android.support.constraint.solver.widgets.ConstraintAnchor$Strength)
    public void setMargin(int)
    public void setGoneMargin(int)
    public boolean isVerticalAnchor()
    public int getSnapPriorityLevel()
    public int getPriorityLevel()
    public boolean isSnapCompatibleWith(android.support.constraint.solver.widgets.ConstraintAnchor)
    public boolean isConnectionAllowed(android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor)
    public boolean isConnectionAllowed(android.support.constraint.solver.widgets.ConstraintWidget)
    public final android.support.constraint.solver.widgets.ConstraintAnchor getOpposite()
    private static final boolean ALLOW_BINARY
    public static final int USER_CREATOR
    public static final int SCOUT_CREATOR
    public static final int AUTO_CONSTRAINT_CREATOR
    private static final int UNSET_GONE_MARGIN
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2
com.google.android.material.transformation.TransformationChildLayout
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.R$style
androidx.lifecycle.ComputableLiveData
androidx.viewpager2.adapter.FragmentStateAdapter$2
    void <init>(androidx.viewpager2.adapter.FragmentStateAdapter,androidx.viewpager2.adapter.FragmentViewHolder)
androidx.core.app.NotificationCompat$GroupAlertBehavior
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable
androidx.recyclerview.widget.AsyncListUtil$ViewCallback
androidx.appcompat.widget.AppCompatSpinner
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,int)
    private static final int MAX_ITEMS_MEASURED
    private static final java.lang.String TAG
    private static final int MODE_DIALOG
    private static final int MODE_DROPDOWN
    private static final int MODE_THEME
androidx.activity.R$style
androidx.coordinatorlayout.R$drawable
com.google.android.material.shape.Shapeable
    public abstract com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.recyclerview.widget.SimpleItemAnimator
    public boolean getSupportsChangeAnimations()
    public void setSupportsChangeAnimations(boolean)
    private static final boolean DEBUG
    private static final java.lang.String TAG
androidx.transition.Styleable$TransitionTarget
com.google.android.material.expandable.ExpandableTransformationWidget
    public abstract int getExpandedComponentIdHint()
    public abstract void setExpandedComponentIdHint(int)
androidx.transition.ChangeTransform$3
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
    public synthetic bridge void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public synthetic bridge boolean isAutoHideEnabled()
    public synthetic bridge void setAutoHideEnabled(boolean)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl
com.google.android.material.internal.NavigationMenuPresenter$ViewHolder
androidx.core.view.accessibility.AccessibilityNodeProviderCompat
    public static final int HOST_VIEW_ID
androidx.annotation.AnimatorRes
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper
androidx.versionedparcelable.ParcelField
com.google.android.material.floatingactionbutton.BorderDrawable$BorderState
androidx.core.content.res.ColorStateListInflaterCompat
    private void <init>()
androidx.transition.PatternPathMotion
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$HideStrategy
androidx.appcompat.app.AlertDialog$Builder
    public androidx.appcompat.app.AlertDialog$Builder setTitle(int)
    public androidx.appcompat.app.AlertDialog$Builder setMessage(int)
    public androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence)
    public androidx.appcompat.app.AlertDialog$Builder setIcon(int)
    public androidx.appcompat.app.AlertDialog$Builder setIconAttribute(int)
    public androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setPositiveButtonIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNegativeButtonIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNeutralButtonIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setCancelable(boolean)
    public androidx.appcompat.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)
    public androidx.appcompat.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener)
    public androidx.appcompat.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String)
    public androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
    public androidx.appcompat.app.AlertDialog$Builder setView(int)
    public androidx.appcompat.app.AlertDialog$Builder setView(android.view.View)
    public androidx.appcompat.app.AlertDialog$Builder setView(android.view.View,int,int,int,int)
    public androidx.appcompat.app.AlertDialog$Builder setInverseBackgroundForced(boolean)
    public androidx.appcompat.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean)
    public androidx.appcompat.app.AlertDialog show()
androidx.core.provider.FontsContractCompat$FontRequestCallback
androidx.transition.FragmentTransitionSupport$4
    public android.graphics.Rect onGetEpicenter(androidx.transition.Transition)
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord
androidx.appcompat.widget.ScrollingTabContainerView
    public void <init>(android.content.Context)
    private androidx.appcompat.widget.LinearLayoutCompat createTabLayout()
    public void animateToVisibility(int)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public void updateTab(int)
    public void removeTabAt(int)
    public void removeAllTabs()
    protected android.view.ViewPropertyAnimator mVisibilityAnim
    protected final androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener
    private static final java.lang.String TAG
    private static final int FADE_DURATION
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener
androidx.core.database.DatabaseUtilsCompat
com.google.android.material.snackbar.BaseTransientBottomBar$7
com.google.android.material.appbar.AppBarLayout$Behavior
    public synthetic bridge void setDragCallback(com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback)
    public synthetic bridge boolean isHorizontalOffsetEnabled()
    public synthetic bridge void setHorizontalOffsetEnabled(boolean)
    public synthetic bridge boolean isVerticalOffsetEnabled()
    public synthetic bridge void setVerticalOffsetEnabled(boolean)
    public synthetic bridge int getLeftAndRightOffset()
    public synthetic bridge boolean setLeftAndRightOffset(int)
com.google.android.material.appbar.ViewUtilsLollipop
    void <init>()
    static void setBoundsViewOutlineProvider(android.view.View)
    static void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int)
androidx.core.view.MenuItemCompat$OnActionExpandListener
androidx.constraintlayout.widget.ConstraintHelper
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.viewpager2.adapter.FragmentViewHolder
    private void <init>(android.widget.FrameLayout)
    static androidx.viewpager2.adapter.FragmentViewHolder create(android.view.ViewGroup)
androidx.loader.app.LoaderManagerImpl$LoaderObserver
    void <init>(androidx.loader.content.Loader,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public void onChanged(java.lang.Object)
    public java.lang.String toString()
    private final androidx.loader.content.Loader mLoader
    private final androidx.loader.app.LoaderManager$LoaderCallbacks mCallback
    private boolean mDeliveredData
androidx.coordinatorlayout.R$color
com.google.android.material.tabs.TabLayoutMediator$PagerAdapterObserver
androidx.appcompat.view.menu.ListMenuPresenter
    int getItemIndexOffset()
    public void setItemIndexOffset(int)
    public void setId(int)
    private static final java.lang.String TAG
    public static final java.lang.String VIEWS_TAG
com.google.android.material.bottomsheet.BottomSheetBehavior$SaveFlags
androidx.recyclerview.widget.GridLayoutManager
    public void <init>(android.content.Context,int)
    public void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup)
    public androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup()
    public void setUsingSpansToEstimateScrollbarDimensions(boolean)
    public boolean isUsingSpansToEstimateScrollbarDimensions()
    private static final boolean DEBUG
    private static final java.lang.String TAG
    public static final int DEFAULT_SPAN_COUNT
androidx.recyclerview.widget.RecyclerView$ItemAnimator$AdapterChanges
com.google.android.material.appbar.AppBarLayout$Behavior$DragCallback
androidx.annotation.AnimRes
androidx.annotation.XmlRes
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$2
androidx.loader.content.Loader$OnLoadCanceledListener
androidx.lifecycle.ViewModelStore
    java.util.Set keys()
androidx.core.graphics.TypefaceCompatBaseImpl
    private static final java.lang.String TAG
    private static final int INVALID_KEY
androidx.appcompat.R
androidx.core.view.ViewCompat$NestedScrollType
com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback
    public void <init>()
androidx.transition.FloatArrayEvaluator
androidx.activity.OnBackPressedDispatcher
    public void <init>()
    public void addCallback(androidx.activity.OnBackPressedCallback)
    public boolean hasEnabledCallbacks()
androidx.annotation.IntDef
androidx.core.os.CancellationSignal$OnCancelListener
androidx.recyclerview.R$layout
com.google.android.material.floatingactionbutton.BaseMotionStrategy
androidx.loader.R$styleable
androidx.recyclerview.widget.RecyclerView$ViewHolder
    public final int getPosition()
    void stopIgnoring()
    static final int FLAG_BOUND
    static final int FLAG_UPDATE
    static final int FLAG_INVALID
    static final int FLAG_REMOVED
    static final int FLAG_NOT_RECYCLABLE
    static final int FLAG_RETURNED_FROM_SCRAP
    static final int FLAG_IGNORE
    static final int FLAG_TMP_DETACHED
    static final int FLAG_ADAPTER_POSITION_UNKNOWN
    static final int FLAG_ADAPTER_FULLUPDATE
    static final int FLAG_MOVED
    static final int FLAG_APPEARED_IN_PRE_LAYOUT
    static final int PENDING_ACCESSIBILITY_STATE_NOT_SET
    static final int FLAG_BOUNCED_FROM_HIDDEN_LIST
androidx.core.view.KeyEventDispatcher
    private void <init>()
androidx.viewpager2.R$color
androidx.core.view.NestedScrollingChild3
    public abstract void dispatchNestedScroll(int,int,int,int,int[],int,int[])
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1
com.qy.R$attr
androidx.appcompat.view.menu.ActionMenuItemView
    public void setShortcut(boolean,char)
    public boolean showsIcon()
    private static final java.lang.String TAG
    private static final int MAX_ICON_SIZE
androidx.core.content.res.TypedArrayUtils
    public static boolean getBoolean(android.content.res.TypedArray,int,int,boolean)
    public static android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int)
    public static int getInt(android.content.res.TypedArray,int,int,int)
    public static int getResourceId(android.content.res.TypedArray,int,int,int)
    public static java.lang.String getString(android.content.res.TypedArray,int,int)
    public static java.lang.CharSequence getText(android.content.res.TypedArray,int,int)
    public static java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int)
    public static int getAttr(android.content.Context,int,int)
    private void <init>()
    private static final java.lang.String NAMESPACE
com.google.android.material.R$plurals
    private void <init>()
androidx.transition.GhostViewPort
androidx.transition.TransitionInflater
androidx.constraintlayout.solver.widgets.Optimizer
    public void <init>()
    public static final int OPTIMIZATION_NONE
    public static final int OPTIMIZATION_DIRECT
    public static final int OPTIMIZATION_BARRIER
    public static final int OPTIMIZATION_CHAIN
    public static final int OPTIMIZATION_DIMENSIONS
    public static final int OPTIMIZATION_RATIO
    public static final int OPTIMIZATION_GROUPS
    public static final int OPTIMIZATION_STANDARD
    static final int FLAG_USE_OPTIMIZE
    static final int FLAG_CHAIN_DANGLING
    static final int FLAG_RECOMPUTE_BOUNDS
com.google.android.material.R$string
    private void <init>()
androidx.recyclerview.widget.DiffUtil$Range
com.google.android.material.snackbar.BaseTransientBottomBar$10
android.support.v4.os.ResultReceiver
    public void <init>(android.os.Handler)
    public void send(int,android.os.Bundle)
androidx.core.app.JobIntentService$JobWorkEnqueuer
    void enqueueWork(android.content.Intent)
android.support.constraint.solver.widgets.Chain
    void <init>()
    private static final boolean DEBUG
androidx.arch.core.R
androidx.transition.Slide$4
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory
androidx.core.content.pm.ShortcutManagerCompat
androidx.lifecycle.LifecycleRegistry
    public int getObserverCount()
androidx.coordinatorlayout.R$dimen
androidx.appcompat.widget.ActionBarContextView
    public boolean hideOverflowMenu()
    public boolean isOverflowMenuShowing()
    public synthetic bridge void dismissPopupMenus()
    public synthetic bridge boolean canShowOverflowMenu()
    public synthetic bridge boolean isOverflowReserved()
    public synthetic bridge boolean isOverflowMenuShowPending()
    public synthetic bridge void postShowOverflowMenu()
    public synthetic bridge void animateToVisibility(int)
    private static final java.lang.String TAG
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState
    private static final long REVERSED_BIT
    private static final long REVERSIBLE_FLAG_BIT
androidx.core.widget.ScrollerCompat
androidx.fragment.app.FragmentHostCallback
    public void <init>(android.content.Context,android.os.Handler,int)
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
    public void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
    public boolean onShouldShowRequestPermissionRationale(java.lang.String)
androidx.core.provider.FontsContractCompat$4$7
android.support.constraint.solver.widgets.Analyzer
    private void <init>()
androidx.fragment.app.FragmentTransaction
    public androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)
    public androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String)
    public androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
    public boolean isEmpty()
    public androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int)
    public androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int)
    public androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)
    public androidx.fragment.app.FragmentTransaction setTransition(int)
    public androidx.fragment.app.FragmentTransaction setTransitionStyle(int)
    public androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String)
    public boolean isAddToBackStackAllowed()
    public androidx.fragment.app.FragmentTransaction disallowAddToBackStack()
    public androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
    public androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean)
    public androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean)
    public androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable)
    public abstract int commitAllowingStateLoss()
    public abstract void commitNow()
    public abstract void commitNowAllowingStateLoss()
    static final int OP_NULL
    static final int OP_ADD
    static final int OP_REPLACE
    static final int OP_REMOVE
    static final int OP_HIDE
    static final int OP_SHOW
    static final int OP_DETACH
    static final int OP_ATTACH
    static final int OP_SET_PRIMARY_NAV
    static final int OP_UNSET_PRIMARY_NAV
    static final int OP_SET_MAX_LIFECYCLE
    public static final int TRANSIT_ENTER_MASK
    public static final int TRANSIT_EXIT_MASK
    public static final int TRANSIT_UNSET
    public static final int TRANSIT_NONE
    public static final int TRANSIT_FRAGMENT_OPEN
    public static final int TRANSIT_FRAGMENT_CLOSE
    public static final int TRANSIT_FRAGMENT_FADE
androidx.core.app.AppComponentFactory
androidx.core.app.NotificationCompatExtras
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator
    public abstract void validateRequestPermissionsRequestCode(int)
com.google.android.material.switchmaterial.SwitchMaterial
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public boolean isUseMaterialThemeColors()
androidx.appcompat.R$integer
androidx.core.R$attr
    private void <init>()
com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker
    private void <init>(com.google.android.material.button.MaterialButtonToggleGroup)
    synthetic void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1)
    public void onPressedChanged(com.google.android.material.button.MaterialButton,boolean)
    final synthetic com.google.android.material.button.MaterialButtonToggleGroup this$0
androidx.annotation.ColorRes
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl
androidx.core.content.res.GrowingArrayUtils
    public static long[] append(long[],int,long)
    public static boolean[] append(boolean[],int,boolean)
    public static java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object)
    public static int[] insert(int[],int,int,int)
    public static long[] insert(long[],int,int,long)
    public static boolean[] insert(boolean[],int,int,boolean)
androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener
androidx.annotation.IdRes
androidx.appcompat.view.menu.MenuItemWrapperICS
    static final java.lang.String LOG_TAG
androidx.drawerlayout.widget.DrawerLayout
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    static boolean includeChildForAccessibility(android.view.View)
    public void setChildInsets(java.lang.Object,boolean)
    public void setDrawerShadow(android.graphics.drawable.Drawable,int)
    public void setDrawerShadow(int,int)
    public void setDrawerLockMode(int,android.view.View)
    public void setDrawerTitle(int,java.lang.CharSequence)
    public java.lang.CharSequence getDrawerTitle(int)
    public void openDrawer(int)
    public void openDrawer(int,boolean)
    public void closeDrawer(int)
    public void closeDrawer(int,boolean)
    public boolean isDrawerOpen(int)
    public boolean isDrawerVisible(int)
    void cancelChildViewTouch()
    private java.lang.CharSequence mTitleLeft
    private java.lang.CharSequence mTitleRight
    private static final java.lang.String TAG
    public static final int STATE_IDLE
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int LOCK_MODE_UNLOCKED
    public static final int LOCK_MODE_LOCKED_CLOSED
    public static final int LOCK_MODE_LOCKED_OPEN
    public static final int LOCK_MODE_UNDEFINED
    private static final int MIN_DRAWER_MARGIN
    private static final int DRAWER_ELEVATION
    private static final int DEFAULT_SCRIM_COLOR
    private static final int PEEK_DELAY
    private static final int MIN_FLING_VELOCITY
    private static final boolean ALLOW_EDGE_LOCK
    private static final boolean CHILDREN_DISALLOW_INTERCEPT
    private static final float TOUCH_SLOP_SENSITIVITY
androidx.appcompat.resources.R$dimen
com.google.android.material.datepicker.MaterialDatePicker$3
androidx.viewpager.widget.PagerAdapter
    public void notifyDataSetChanged()
    public static final int POSITION_UNCHANGED
    public static final int POSITION_NONE
androidx.core.text.ICUCompat
    private void <init>()
    private static final java.lang.String TAG
androidx.appcompat.widget.ToolbarWidgetWrapper
    private void ensureSpinner()
    public java.lang.CharSequence getSubtitle()
    public boolean hasIcon()
    public boolean hasLogo()
    public boolean hasEmbeddedTabs()
    public boolean isTitleTruncated()
    public void setNavigationMode(int)
    public void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
    public void setDropdownSelectedPosition(int)
    public int getDropdownSelectedPosition()
    public int getDropdownItemCount()
    public android.view.View getCustomView()
    public void animateToVisibility(int)
    public void setNavigationIcon(int)
    public void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
    public void saveHierarchyState(android.util.SparseArray)
    public void restoreHierarchyState(android.util.SparseArray)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public int getHeight()
    public int getVisibility()
    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    public android.view.Menu getMenu()
    private android.widget.Spinner mSpinner
    private static final java.lang.String TAG
    private static final int AFFECTS_LOGO_MASK
    private static final long DEFAULT_FADE_DURATION_MS
androidx.core.os.ParcelableCompatCreatorCallbacks
androidx.core.util.Pair
    public static androidx.core.util.Pair create(java.lang.Object,java.lang.Object)
android.support.constraint.solver.widgets.Rectangle
    public void setBounds(int,int,int,int)
    void grow(int,int)
    boolean intersects(android.support.constraint.solver.widgets.Rectangle)
    public boolean contains(int,int)
    public int getCenterX()
    public int getCenterY()
    public int x
    public int y
    public int width
    public int height
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor
androidx.coordinatorlayout.R$id
androidx.collection.CircularIntArray
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate
    void <init>()
    public void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.google.android.material.datepicker.MaterialTextInputPicker
androidx.constraintlayout.solver.SolverVariable$1
androidx.viewpager2.widget.ViewPager2
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
    private void initialize(android.content.Context,android.util.AttributeSet)
    private androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener enforceChildFillListener()
    private void setOrientation(android.content.Context,android.util.AttributeSet)
    boolean isRtl()
    public boolean beginFakeDrag()
    public boolean fakeDragBy(float)
    public boolean endFakeDrag()
    void snapToPage()
    public boolean isUserInputEnabled()
    public void registerOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback)
    public void unregisterOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback)
    public void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
    public void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int)
    public androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int)
    public void invalidateItemDecorations()
    public void removeItemDecorationAt(int)
    public void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
    private androidx.viewpager2.widget.CompositeOnPageChangeCallback mExternalPageChangeCallbacks
    public static final int ORIENTATION_HORIZONTAL
    public static final int ORIENTATION_VERTICAL
    public static final int SCROLL_STATE_IDLE
    public static final int SCROLL_STATE_DRAGGING
    public static final int SCROLL_STATE_SETTLING
    public static final int OFFSCREEN_PAGE_LIMIT_DEFAULT
androidx.drawerlayout.R$layout
androidx.versionedparcelable.VersionedParcelStream$1
com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener
androidx.loader.content.AsyncTaskLoader$LoadTask
androidx.core.os.LocaleListCompatWrapper
androidx.core.content.pm.ShortcutInfoCompat$Builder
androidx.appcompat.R$dimen
    private void <init>()
androidx.appcompat.resources.R$styleable
    private void <init>()
androidx.fragment.app.FragmentManager
    public static void enableDebugLogging(boolean)
    public androidx.fragment.app.FragmentTransaction openTransaction()
    public abstract androidx.fragment.app.Fragment findFragmentById(int)
    public abstract void popBackStack()
    public abstract void popBackStack(java.lang.String,int)
    public abstract boolean popBackStackImmediate(java.lang.String,int)
    public abstract void popBackStack(int,int)
    public abstract boolean popBackStackImmediate(int,int)
    public abstract int getBackStackEntryCount()
    public abstract androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    public abstract void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public abstract void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public abstract void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)
    public abstract androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)
    public abstract androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
    public abstract boolean isDestroyed()
    public abstract void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
    public abstract void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
    public abstract androidx.fragment.app.Fragment getPrimaryNavigationFragment()
    public abstract boolean isStateSaved()
    public static final int POP_BACK_STACK_INCLUSIVE
androidx.core.provider.FontsContractCompat$Columns
com.google.android.material.circularreveal.cardview.CircularRevealCardView
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void actualDraw(android.graphics.Canvas)
    public boolean actualIsOpaque()
androidx.core.widget.ListPopupWindowCompat
androidx.loader.content.Loader
    public void <init>(android.content.Context)
    public void deliverResult(java.lang.Object)
    public void deliverCancellation()
    public android.content.Context getContext()
    public int getId()
    public void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener)
    public void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
    public void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
    public boolean isStarted()
    public boolean isAbandoned()
    public boolean isReset()
    protected void onStartLoading()
    protected boolean onCancelLoad()
    public void forceLoad()
    protected void onForceLoad()
    protected void onStopLoading()
    protected void onAbandon()
    protected void onReset()
    public boolean takeContentChanged()
    public void commitContentChanged()
    public void rollbackContentChanged()
    public void onContentChanged()
    public java.lang.String toString()
    int mId
    androidx.loader.content.Loader$OnLoadCompleteListener mListener
    androidx.loader.content.Loader$OnLoadCanceledListener mOnLoadCanceledListener
    android.content.Context mContext
    boolean mStarted
    boolean mAbandoned
    boolean mReset
    boolean mContentChanged
    boolean mProcessingChange
androidx.core.app.AlarmManagerCompat
androidx.lifecycle.ComputableLiveData$3
androidx.core.graphics.drawable.RoundedBitmapDrawable21
com.google.android.material.navigation.NavigationView
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    private boolean hasShapeAppearance(androidx.appcompat.widget.TintTypedArray)
    private final android.graphics.drawable.Drawable createDefaultItemBackground(androidx.appcompat.widget.TintTypedArray)
    private android.content.res.ColorStateList createDefaultColorStateList(int)
    private void setupInsetScrimsListener()
    static synthetic int[] access$000(com.google.android.material.navigation.NavigationView)
    static synthetic com.google.android.material.internal.NavigationMenuPresenter access$100(com.google.android.material.navigation.NavigationView)
    protected void onInsetsChanged(androidx.core.view.WindowInsetsCompat)
    public void inflateMenu(int)
    public android.view.View inflateHeaderView(int)
    public void addHeaderView(android.view.View)
    public void removeHeaderView(android.view.View)
    public android.view.View getHeaderView(int)
    private final int[] tmpLocation
    private static final int PRESENTER_NAVIGATION_VIEW_ID
androidx.transition.GhostViewPlatform
com.google.android.material.bottomsheet.BottomSheetDialog
androidx.lifecycle.ClassesInfoCache
    private static final int CALL_TYPE_NO_ARG
    private static final int CALL_TYPE_PROVIDER
    private static final int CALL_TYPE_PROVIDER_WITH_EVENT
androidx.constraintlayout.widget.ConstraintLayout
    public void fillMetrics(androidx.constraintlayout.solver.Metrics)
    static final boolean ALLOWS_EMBEDDED
    private static final boolean CACHE_MEASURED_DIMENSION
    public static final java.lang.String VERSION
    private static final java.lang.String TAG
    private static final boolean USE_CONSTRAINTS_HELPER
    private static final boolean DEBUG
    public static final int DESIGN_INFO_ID
androidx.fragment.app.FragmentTransition
    static boolean supportsTransition()
    private void <init>()
com.google.android.material.bottomappbar.BottomAppBar$1
androidx.transition.ChangeImageTransform$1
com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams
    public void <init>(int,int,int)
    public void <init>(android.view.ViewGroup$MarginLayoutParams)
    public void <init>(android.widget.FrameLayout$LayoutParams)
    public void setCollapseMode(int)
    public int getCollapseMode()
    public float getParallaxMultiplier()
    private static final float DEFAULT_PARALLAX_MULTIPLIER
    public static final int COLLAPSE_MODE_OFF
    public static final int COLLAPSE_MODE_PIN
    public static final int COLLAPSE_MODE_PARALLAX
androidx.core.os.ParcelableCompat
androidx.drawerlayout.widget.DrawerLayout$LayoutParams
    public void <init>(int,int,int)
    private static final int FLAG_IS_OPENED
    private static final int FLAG_IS_OPENING
    private static final int FLAG_IS_CLOSING
com.google.android.material.textfield.ClearTextEndIconDelegate
    private static final int ANIMATION_FADE_DURATION
    private static final int ANIMATION_SCALE_DURATION
    private static final float ANIMATION_SCALE_FROM_VALUE
androidx.appcompat.widget.AppCompatSeekBar
    public void <init>(android.content.Context)
androidx.loader.R$attr
com.google.android.material.internal.TextScale$1
androidx.activity.R$id
androidx.core.os.BuildCompat
com.qy.MaxMapWindow
    public static void setLayoutSrc(android.widget.ImageView,int)
androidx.appcompat.widget.ActivityChooserView$Callbacks
    void <init>(androidx.appcompat.widget.ActivityChooserView)
    private void notifyOnDismissListener()
    public void onItemClick(android.widget.AdapterView,android.view.View,int,long)
    public void onClick(android.view.View)
    public boolean onLongClick(android.view.View)
    public void onDismiss()
    final synthetic androidx.appcompat.widget.ActivityChooserView this$0
androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback$DismissEvent
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback
    public void <init>()
    public void onShown(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public void onHidden(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public void onExtended(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public void onShrunken(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
com.google.android.material.datepicker.CalendarConstraints
    static synthetic com.google.android.material.datepicker.Month access$100(com.google.android.material.datepicker.CalendarConstraints)
    static synthetic com.google.android.material.datepicker.Month access$200(com.google.android.material.datepicker.CalendarConstraints)
    static synthetic com.google.android.material.datepicker.Month access$300(com.google.android.material.datepicker.CalendarConstraints)
    static synthetic com.google.android.material.datepicker.CalendarConstraints$DateValidator access$400(com.google.android.material.datepicker.CalendarConstraints)
    boolean isWithinBounds(long)
com.google.android.material.bottomnavigation.BottomNavigationView$2
androidx.core.view.MarginLayoutParamsCompat
    public static boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
    public static int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
    public static void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
    public static void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
    private void <init>()
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback
    public abstract void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.viewpager.R
com.google.android.material.bottomnavigation.BottomNavigationMenuView
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    private void removeUnusedBadges()
    private void validateMenuItemId(int)
    static synthetic com.google.android.material.bottomnavigation.BottomNavigationPresenter access$000(com.google.android.material.bottomnavigation.BottomNavigationMenuView)
    static synthetic androidx.appcompat.view.menu.MenuBuilder access$100(com.google.android.material.bottomnavigation.BottomNavigationMenuView)
    public android.content.res.ColorStateList createDefaultColorStateList(int)
    public void buildMenuView()
    public void updateMenuView()
    void tryRestoreSelectedItemId(int)
    com.google.android.material.badge.BadgeDrawable getBadge(int)
    com.google.android.material.badge.BadgeDrawable getOrCreateBadge(int)
    void removeBadge(int)
    com.google.android.material.bottomnavigation.BottomNavigationItemView findItemView(int)
    private final androidx.transition.TransitionSet set
    private final android.view.View$OnClickListener onClickListener
    private final android.content.res.ColorStateList itemTextColorDefault
    private static final long ACTIVE_ANIMATION_DURATION_MS
    private static final int ITEM_POOL_SIZE
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat
    public static androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int)
    private static boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    private static void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    private void removeAnimatorSetListener()
    public static void registerAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public static boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public static void clearAnimationCallbacks(android.graphics.drawable.Drawable)
    public void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public void clearAnimationCallbacks()
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState mCachedConstantStateDelegate
    private static final java.lang.String LOGTAG
    private static final java.lang.String ANIMATED_VECTOR
    private static final java.lang.String TARGET
    private static final boolean DBG_ANIMATION_VECTOR_DRAWABLE
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask
android.support.constraint.ConstraintHelper
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.R$xml
androidx.customview.R$string
com.google.android.material.animation.AnimatorSetCompat
    public void <init>()
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb
androidx.recyclerview.widget.DiffUtil$PostponedUpdate
com.google.android.material.R$interpolator
com.google.android.material.snackbar.BaseTransientBottomBar$14
androidx.annotation.IntRange
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation
com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void actualDraw(android.graphics.Canvas)
    public boolean actualIsOpaque()
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
    private void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
    static synthetic void access$1000(com.google.android.material.snackbar.BaseTransientBottomBar$Behavior,com.google.android.material.snackbar.BaseTransientBottomBar)
androidx.core.text.BidiFormatter$DirectionalityEstimator
    private static final int DIR_TYPE_CACHE_SIZE
androidx.constraintlayout.solver.SolverVariable
    private static java.lang.String getUniqueName(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String)
    public void <init>(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type)
    void clearStrengths()
    java.lang.String strengthsToString()
    public java.lang.String getName()
    public void setName(java.lang.String)
    private static final boolean INTERNAL_DEBUG
    public static final int STRENGTH_NONE
    public static final int STRENGTH_LOW
    public static final int STRENGTH_MEDIUM
    public static final int STRENGTH_HIGH
    public static final int STRENGTH_HIGHEST
    public static final int STRENGTH_EQUALITY
    public static final int STRENGTH_FIXED
    public static final int STRENGTH_BARRIER
    static final int MAX_STRENGTH
androidx.constraintlayout.widget.Constraints$LayoutParams
    public void <init>(androidx.constraintlayout.widget.Constraints$LayoutParams)
com.google.android.material.resources.MaterialAttributes
    public void <init>()
    public static boolean resolveBooleanOrThrow(android.content.Context,int,java.lang.String)
    public static int resolveMinimumAccessibleTouchTarget(android.content.Context)
    public static int resolveDimension(android.content.Context,int,int)
android.support.constraint.solver.widgets.ConstraintTableLayout$HorizontalSlice
androidx.drawerlayout.R$dimen
com.google.android.material.appbar.CollapsingToolbarLayout
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat)
    public boolean isTitleEnabled()
    public void setExpandedTitleMargin(int,int,int,int)
    private static final int DEFAULT_SCRIM_ANIMATION_DURATION
androidx.recyclerview.widget.OrientationHelper
    public androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
    public abstract void offsetChild(android.view.View,int)
    private static final int INVALID_SIZE
    public static final int HORIZONTAL
    public static final int VERTICAL
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuViewAccessibilityDelegate
com.google.android.material.shape.ShapeAppearanceModel
    public com.google.android.material.shape.ShapeAppearanceModel withCornerSize(com.google.android.material.shape.CornerSize)
com.google.android.material.R$styleable
    private void <init>()
androidx.recyclerview.widget.MessageThreadUtil$2$1
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback
com.google.android.material.datepicker.RangeDateSelector$1
com.google.android.material.tabs.TabLayoutMediator$TabLayoutOnPageChangeCallback
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuItem
com.qy.MenuWindow
    public static void setMap(android.widget.ProgressBar,android.widget.LinearLayout,com.qy.Hero)
    public static void setLayoutXY(android.widget.LinearLayout,int,int)
    public static com.qy.MiniMapWindow getMiniMapWindow()
    public static com.qy.MaxMapInfoWindow getMaxMapInfoWindow()
    public static com.qy.MaxMapWindow getMaxMapWindow()
    public android.widget.TabHost getTabHost()
    public static android.os.Handler maxBackHandler
    public static android.os.Handler maxInfoBackHandler
androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener
com.google.android.material.floatingactionbutton.BorderDrawable
    void <init>(com.google.android.material.shape.ShapeAppearanceModel)
    private android.graphics.Shader createGradientShader()
    public void setBorderWidth(float)
    public void setColorFilter(android.graphics.ColorFilter)
    void setGradientColors(int,int,int,int)
    public void draw(android.graphics.Canvas)
    public void getOutline(android.graphics.Outline)
    public boolean getPadding(android.graphics.Rect)
    protected android.graphics.RectF getBoundsAsRectF()
    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    public void setAlpha(int)
    public int getOpacity()
    protected void onBoundsChange(android.graphics.Rect)
    public boolean isStateful()
    protected boolean onStateChange(int[])
    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    private final com.google.android.material.shape.ShapeAppearancePathProvider pathProvider
    private final android.graphics.Paint paint
    private final android.graphics.Path shapePath
    private final android.graphics.Rect rect
    private final android.graphics.RectF rectF
    private final android.graphics.RectF boundsRectF
    private final com.google.android.material.floatingactionbutton.BorderDrawable$BorderState state
    float borderWidth
    private int topOuterStrokeColor
    private int topInnerStrokeColor
    private int bottomOuterStrokeColor
    private int bottomInnerStrokeColor
    private int currentBorderTintColor
    private boolean invalidateShader
    private com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel
    private android.content.res.ColorStateList borderTint
    private static final float DRAW_STROKE_WIDTH_MULTIPLE
androidx.core.widget.ListViewCompat
    public static boolean canScrollList(android.widget.ListView,int)
    private void <init>()
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer
    void <init>(androidx.viewpager2.adapter.FragmentStateAdapter)
    private androidx.viewpager2.widget.ViewPager2 inferViewPager(androidx.recyclerview.widget.RecyclerView)
    void register(androidx.recyclerview.widget.RecyclerView)
    void unregister(androidx.recyclerview.widget.RecyclerView)
    private androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback mPageChangeCallback
    private androidx.recyclerview.widget.RecyclerView$AdapterDataObserver mDataObserver
    private androidx.lifecycle.LifecycleEventObserver mLifecycleObserver
    private androidx.viewpager2.widget.ViewPager2 mViewPager
    private long mPrimaryItemId
    final synthetic androidx.viewpager2.adapter.FragmentStateAdapter this$0
androidx.transition.Styleable$TransitionSet
androidx.core.R$dimen
androidx.core.view.ViewCompat$FocusRealDirection
com.qy.R$dimen
androidx.core.math.MathUtils
    private void <init>()
    public static double clamp(double,double,double)
androidx.core.os.TraceCompat
    private void <init>()
androidx.transition.ViewOverlayApi14$OverlayViewGroup
    protected android.view.ViewParent invalidateChildInParentFast(int,int,android.graphics.Rect)
androidx.viewpager2.R$integer
androidx.core.app.ActivityCompat
    protected void <init>()
    public static void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate)
    public static boolean invalidateOptionsMenu(android.app.Activity)
    public static void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
    public static void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public static void finishAfterTransition(android.app.Activity)
    public static android.net.Uri getReferrer(android.app.Activity)
    public static android.view.View requireViewById(android.app.Activity,int)
    public static void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
    public static void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
    public static void postponeEnterTransition(android.app.Activity)
    public static void startPostponedEnterTransition(android.app.Activity)
    public static void requestPermissions(android.app.Activity,java.lang.String[],int)
    public static boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
    public static androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent)
com.google.android.material.dialog.MaterialDialogs
androidx.appcompat.app.AlertController$AlertParams
    public boolean mForceInverseBackground
com.qy.MainActivity
    public void onActivityResult(android.app.Activity,int,int,android.content.Intent,com.qy.MainActivity$OnWindowPermissionListener)
    private static final int REQUEST_CODE
androidx.transition.ArcMotion
androidx.recyclerview.widget.StaggeredGridLayoutManager
    public void <init>(int,int)
    public int getGapStrategy()
    public void setGapStrategy(int)
    public int getSpanCount()
    public boolean getReverseLayout()
    public int[] findFirstVisibleItemPositions(int[])
    public int[] findFirstCompletelyVisibleItemPositions(int[])
    public int[] findLastVisibleItemPositions(int[])
    public int[] findLastCompletelyVisibleItemPositions(int[])
    public void scrollToPositionWithOffset(int,int)
    public int getOrientation()
    private static final java.lang.String TAG
    static final boolean DEBUG
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int GAP_HANDLING_NONE
    public static final int GAP_HANDLING_LAZY
    public static final int GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS
    static final int INVALID_OFFSET
    private static final float MAX_SCROLL_FACTOR
androidx.core.widget.ContentLoadingProgressBar$1
androidx.appcompat.widget.ActivityChooserModel
    public static androidx.appcompat.widget.ActivityChooserModel get(android.content.Context,java.lang.String)
    private void <init>(android.content.Context,java.lang.String)
    private void persistHistoricalDataIfNeeded()
    private void ensureConsistentState()
    private boolean sortActivitiesIfNeeded()
    private boolean loadActivitiesIfNeeded()
    private boolean readHistoricalDataIfNeeded()
    private boolean addHistoricalRecord(androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord)
    private void pruneExcessiveHistoricalRecordsIfNeeded()
    private void readHistoricalDataImpl()
    public void setIntent(android.content.Intent)
    public android.content.Intent getIntent()
    public int getActivityCount()
    public android.content.pm.ResolveInfo getActivity(int)
    public int getActivityIndex(android.content.pm.ResolveInfo)
    public android.content.Intent chooseActivity(int)
    public void setOnChooseActivityListener(androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener)
    public android.content.pm.ResolveInfo getDefaultActivity()
    public void setDefaultActivity(int)
    public void setActivitySorter(androidx.appcompat.widget.ActivityChooserModel$ActivitySorter)
    public void setHistoryMaxSize(int)
    public int getHistoryMaxSize()
    public int getHistorySize()
    private final java.lang.Object mInstanceLock
    private final java.util.List mActivities
    private final java.util.List mHistoricalRecords
    final android.content.Context mContext
    final java.lang.String mHistoryFileName
    private android.content.Intent mIntent
    private androidx.appcompat.widget.ActivityChooserModel$ActivitySorter mActivitySorter
    private int mHistoryMaxSize
    boolean mCanReadHistoricalData
    private boolean mReadShareHistoryCalled
    private boolean mHistoricalRecordsChanged
    private boolean mReloadActivities
    private androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy
    static final boolean DEBUG
    static final java.lang.String TAG_HISTORICAL_RECORDS
    static final java.lang.String TAG_HISTORICAL_RECORD
    static final java.lang.String ATTRIBUTE_ACTIVITY
    static final java.lang.String ATTRIBUTE_TIME
    static final java.lang.String ATTRIBUTE_WEIGHT
    public static final java.lang.String DEFAULT_HISTORY_FILE_NAME
    public static final int DEFAULT_HISTORY_MAX_LENGTH
    private static final int DEFAULT_ACTIVITY_INFLATION
    private static final float DEFAULT_HISTORICAL_RECORD_WEIGHT
    private static final java.lang.String HISTORY_FILE_EXTENSION
    private static final int INVALID_INDEX
androidx.coordinatorlayout.R$attr
    private void <init>()
androidx.core.util.ObjectsCompat
    private void <init>()
    public static int hashCode(java.lang.Object)
androidx.annotation.WorkerThread
com.google.android.material.shape.ShapeAppearanceModel$Builder
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCorners(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCorners(com.google.android.material.shape.CornerTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllEdges(com.google.android.material.shape.EdgeTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setLeftEdge(com.google.android.material.shape.EdgeTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopEdge(com.google.android.material.shape.EdgeTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setRightEdge(com.google.android.material.shape.EdgeTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomEdge(com.google.android.material.shape.EdgeTreatment)
com.google.android.material.bottomappbar.BottomAppBar$FabAnimationMode
com.google.android.material.snackbar.Snackbar$1
androidx.appcompat.R$layout
    private void <init>()
androidx.coordinatorlayout.R$integer
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory
androidx.appcompat.widget.AppCompatSeekBarHelper
    android.graphics.drawable.Drawable getTickMark()
    void setTickMarkTintList(android.content.res.ColorStateList)
    android.content.res.ColorStateList getTickMarkTintList()
    void setTickMarkTintMode(android.graphics.PorterDuff$Mode)
    android.graphics.PorterDuff$Mode getTickMarkTintMode()
com.google.android.material.navigation.NavigationView$1
androidx.recyclerview.widget.RecyclerView$State
    public boolean isMeasuring()
    public boolean willRunSimpleAnimations()
    public void remove(int)
    public java.lang.Object get(int)
    public void put(int,java.lang.Object)
    public boolean didStructureChange()
    public int getRemainingScrollHorizontal()
    public int getRemainingScrollVertical()
    static final int STEP_START
    static final int STEP_LAYOUT
    static final int STEP_ANIMATIONS
androidx.annotation.DrawableRes
androidx.core.app.ServiceCompat$StopForegroundFlags
androidx.loader.R$style
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$2
com.google.android.material.card.MaterialCardView
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void setContentPadding(int,int,int,int)
    void setAncestorContentPadding(int,int,int,int)
    private static final java.lang.String LOG_TAG
androidx.core.net.ConnectivityManagerCompat
androidx.customview.R$styleable
com.qy.R$style
com.google.android.material.tabs.TabLayout$LabelVisibility
androidx.cardview.R
androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler
    public abstract void prepareForDrop(android.view.View,android.view.View,int,int)
androidx.transition.TransitionManager
    public void <init>()
    private androidx.transition.Transition getTransition(androidx.transition.Scene)
    private static void changeScene(androidx.transition.Scene,androidx.transition.Transition)
    public static void go(androidx.transition.Scene)
    public static void go(androidx.transition.Scene,androidx.transition.Transition)
    public static void beginDelayedTransition(android.view.ViewGroup)
    public static void endTransitions(android.view.ViewGroup)
    public void setTransition(androidx.transition.Scene,androidx.transition.Transition)
    public void setTransition(androidx.transition.Scene,androidx.transition.Scene,androidx.transition.Transition)
    public void transitionTo(androidx.transition.Scene)
    private androidx.collection.ArrayMap mSceneTransitions
    private androidx.collection.ArrayMap mScenePairTransitions
    private static final java.lang.String LOG_TAG
androidx.activity.R$integer
androidx.viewpager2.adapter.FragmentStateAdapter$4
androidx.recyclerview.widget.ItemTouchHelper$2
android.support.constraint.solver.widgets.ConstraintTableLayout
com.google.android.material.textfield.IndicatorViewController
    private boolean isCaptionStateHelperText(int)
    boolean errorIsDisplayed()
    boolean helperTextIsDisplayed()
    boolean helperTextShouldBeShown()
    android.content.res.ColorStateList getHelperTextViewColors()
    private static final int CAPTION_TRANSLATE_Y_ANIMATION_DURATION
    private static final int CAPTION_OPACITY_FADE_ANIMATION_DURATION
    static final int ERROR_INDEX
    static final int HELPER_INDEX
    static final int COUNTER_INDEX
    private static final int CAPTION_STATE_NONE
    private static final int CAPTION_STATE_ERROR
    private static final int CAPTION_STATE_HELPER_TEXT
com.google.android.material.internal.ParcelableSparseBooleanArray
    public void <init>(android.util.SparseBooleanArray)
com.google.android.material.internal.NavigationMenuItemView
    public void recycle()
    public void setShortcut(boolean,char)
    public boolean showsIcon()
androidx.appcompat.widget.PopupMenu$2
android.support.constraint.solver.widgets.ConstraintWidget
    public void <init>(int,int,int,int)
    public void <init>(int,int)
    public int getMaxHeight()
    public int getMaxWidth()
    public boolean isRoot()
    public boolean isRootContainer()
    public boolean isInsideConstraintLayout()
    public boolean hasAncestor(android.support.constraint.solver.widgets.ConstraintWidget)
    public android.support.constraint.solver.widgets.WidgetContainer getRootWidgetContainer()
    public boolean isWidthWrapContent()
    public boolean isHeightWrapContent()
    public java.lang.String getType()
    public void setType(java.lang.String)
    public void setDebugSolverName(android.support.constraint.solver.LinearSystem,java.lang.String)
    int getInternalDrawX()
    int getInternalDrawY()
    public int getInternalDrawRight()
    public int getInternalDrawBottom()
    public int getOptimizerWrapWidth()
    public int getOptimizerWrapHeight()
    public int getDrawWidth()
    public int getDrawHeight()
    public int getDrawBottom()
    public int getDrawRight()
    public int getMinWidth()
    public int getMinHeight()
    public int getLeft()
    public int getTop()
    public float getHorizontalBiasPercent()
    public float getVerticalBiasPercent()
    public void setGoneMargin(android.support.constraint.solver.widgets.ConstraintAnchor$Type,int)
    public void forceUpdateDrawPosition()
    public void setDrawOrigin(int,int)
    public void setDrawX(int)
    public void setDrawY(int)
    public void setDrawWidth(int)
    public void setDrawHeight(int)
    public void setLength(int,int)
    public void setDimensionRatio(float,int)
    public float getDimensionRatio()
    public int getDimensionRatioSide()
    public void setDimension(int,int)
    public void setContainerItemSkip(int)
    public int getContainerItemSkip()
    public int getHorizontalChainStyle()
    public int getVerticalChainStyle()
    public void connectedTo(android.support.constraint.solver.widgets.ConstraintWidget)
    public void connect(android.support.constraint.solver.widgets.ConstraintAnchor,android.support.constraint.solver.widgets.ConstraintAnchor,int,int)
    public void connect(android.support.constraint.solver.widgets.ConstraintAnchor,android.support.constraint.solver.widgets.ConstraintAnchor,int)
    public void connect(android.support.constraint.solver.widgets.ConstraintAnchor,android.support.constraint.solver.widgets.ConstraintAnchor,int,android.support.constraint.solver.widgets.ConstraintAnchor$Strength,int)
    public void connect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int)
    public void connect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type)
    public void connect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,android.support.constraint.solver.widgets.ConstraintAnchor$Strength)
    public void connect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,android.support.constraint.solver.widgets.ConstraintAnchor$Strength,int)
    public void resetAllConstraints()
    public void resetAnchor(android.support.constraint.solver.widgets.ConstraintAnchor)
    public void resetAnchors(int)
    public void disconnectWidget(android.support.constraint.solver.widgets.ConstraintWidget)
    public void disconnectUnlockedWidget(android.support.constraint.solver.widgets.ConstraintWidget)
    public android.support.constraint.solver.widgets.ConstraintWidget getHorizontalChainControlWidget()
    public android.support.constraint.solver.widgets.ConstraintWidget getVerticalChainControlWidget()
    int mDistToTop
    int mDistToLeft
    int mDistToRight
    int mDistToBottom
    boolean mLeftHasCentered
    boolean mRightHasCentered
    boolean mTopHasCentered
    boolean mBottomHasCentered
    private static final boolean AUTOTAG_CENTER
    protected static final int SOLVER
    protected static final int DIRECT
    public static final int MATCH_CONSTRAINT_SPREAD
    public static final int MATCH_CONSTRAINT_WRAP
    public static final int MATCH_CONSTRAINT_PERCENT
    public static final int MATCH_CONSTRAINT_RATIO
    public static final int MATCH_CONSTRAINT_RATIO_RESOLVED
    public static final int UNKNOWN
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int VISIBLE
    public static final int INVISIBLE
    public static final int GONE
    public static final int CHAIN_SPREAD
    public static final int CHAIN_SPREAD_INSIDE
    public static final int CHAIN_PACKED
    private static final int WRAP
    protected static final int ANCHOR_LEFT
    protected static final int ANCHOR_RIGHT
    protected static final int ANCHOR_TOP
    protected static final int ANCHOR_BOTTOM
    protected static final int ANCHOR_BASELINE
    static final int DIMENSION_HORIZONTAL
    static final int DIMENSION_VERTICAL
com.google.android.material.appbar.AppBarLayout$BaseBehavior
    public void setDragCallback(com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback)
    boolean isOffsetAnimatorRunning()
    private static final int MAX_OFFSET_ANIMATION_DURATION
    private static final int INVALID_POSITION
androidx.appcompat.view.menu.MenuPresenter
    public abstract androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
androidx.transition.MatrixUtils
androidx.drawerlayout.R$integer
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
    public void onItemRangeChanged(int,int)
    public void onItemRangeChanged(int,int,java.lang.Object)
    public void onItemRangeInserted(int,int)
    public void onItemRangeRemoved(int,int)
    public void onItemRangeMoved(int,int,int)
androidx.core.content.SharedPreferencesCompat
com.google.android.material.bottomsheet.BottomSheetDialogFragment
androidx.appcompat.widget.LinearLayoutCompat$OrientationMode
androidx.transition.CanvasUtils
androidx.lifecycle.MutableLiveData
    public void postValue(java.lang.Object)
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
com.google.android.material.internal.NavigationMenuPresenter$NormalViewHolder
androidx.viewpager2.widget.CompositePageTransformer
androidx.core.content.res.FontResourcesParserCompat$FetchStrategy
androidx.cardview.widget.CardView
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    static synthetic void access$001(androidx.cardview.widget.CardView,int,int,int,int)
    static synthetic void access$101(androidx.cardview.widget.CardView,int)
    static synthetic void access$201(androidx.cardview.widget.CardView,int)
    public void setContentPadding(int,int,int,int)
    final android.graphics.Rect mShadowBounds
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl
androidx.transition.Slide$CalculateSlideVertical
androidx.core.hardware.fingerprint.FingerprintManagerCompat
androidx.annotation.LongDef
com.google.android.material.R$anim
androidx.lifecycle.livedata.R
com.google.android.material.internal.DescendantOffsetUtils
    public void <init>()
androidx.viewpager.widget.PagerTabStrip$2
androidx.core.app.ServiceCompat
androidx.transition.ViewUtilsApi29
    public void setAnimationMatrix(android.view.View,android.graphics.Matrix)
androidx.appcompat.widget.ActionMenuPresenter
    public void setWidthLimit(int,boolean)
    public void setItemLimit(int)
    public boolean isOverflowReserved()
    private static final java.lang.String TAG
androidx.viewpager2.widget.AnimateLayoutChangeDetector
androidx.constraintlayout.solver.Metrics
    public void <init>()
    public java.lang.String toString()
    public void reset()
    public long variables
    public long oldresolvedWidgets
    public java.util.ArrayList problematicLayouts
androidx.constraintlayout.solver.widgets.ConstraintAnchor
    private boolean isConnectionToMe(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.HashSet)
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType getConnectionType()
    public void setConnectionType(androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType)
    public void setConnectionCreator(int)
    public boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int)
    public boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)
    public boolean isSideAnchor()
    public boolean isSimilarDimensionConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public void setStrength(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength)
    public void setMargin(int)
    public void setGoneMargin(int)
    public boolean isVerticalAnchor()
    public int getSnapPriorityLevel()
    public int getPriorityLevel()
    public boolean isSnapCompatibleWith(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public final androidx.constraintlayout.solver.widgets.ConstraintAnchor getOpposite()
    private static final boolean ALLOW_BINARY
    public static final int USER_CREATOR
    public static final int SCOUT_CREATOR
    public static final int AUTO_CONSTRAINT_CREATOR
    private static final int UNSET_GONE_MARGIN
com.google.android.material.circularreveal.CircularRevealHelper
    public void <init>(com.google.android.material.circularreveal.CircularRevealHelper$Delegate)
    private void invalidateRevealInfo()
    private float getDistanceToFurthestCorner(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    private void drawOverlayDrawable(android.graphics.Canvas)
    private boolean shouldDrawCircularReveal()
    private boolean shouldDrawScrim()
    private boolean shouldDrawOverlayDrawable()
    private void drawDebugMode(android.graphics.Canvas)
    private void drawDebugCircle(android.graphics.Canvas,int,float)
    private final com.google.android.material.circularreveal.CircularRevealHelper$Delegate delegate
    private final android.view.View view
    private final android.graphics.Path revealPath
    private final android.graphics.Paint revealPaint
    private final android.graphics.Paint scrimPaint
    private com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo revealInfo
    private android.graphics.drawable.Drawable overlayDrawable
    private android.graphics.Paint debugPaint
    private boolean buildingCircularRevealCache
    private boolean hasCircularRevealCache
    private static final boolean DEBUG
    public static final int BITMAP_SHADER
    public static final int CLIP_PATH
    public static final int REVEAL_ANIMATOR
androidx.loader.content.ModernAsyncTask$2
androidx.fragment.app.BackStackRecord
    public int getId()
    public int getBreadCrumbTitleRes()
    public int getBreadCrumbShortTitleRes()
    public java.lang.CharSequence getBreadCrumbTitle()
    public java.lang.CharSequence getBreadCrumbShortTitle()
    public androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
    public int commitAllowingStateLoss()
    public void commitNow()
    public void commitNowAllowingStateLoss()
    public boolean isEmpty()
    static final java.lang.String TAG
androidx.loader.content.ModernAsyncTask$WorkerRunnable
androidx.core.content.FileProvider
    public static android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File)
    private static final java.lang.String META_DATA_FILE_PROVIDER_PATHS
    private static final java.lang.String TAG_ROOT_PATH
    private static final java.lang.String TAG_FILES_PATH
    private static final java.lang.String TAG_CACHE_PATH
    private static final java.lang.String TAG_EXTERNAL
    private static final java.lang.String TAG_EXTERNAL_FILES
    private static final java.lang.String TAG_EXTERNAL_CACHE
    private static final java.lang.String TAG_EXTERNAL_MEDIA
    private static final java.lang.String ATTR_NAME
    private static final java.lang.String ATTR_PATH
androidx.appcompat.R$string
    private void <init>()
com.google.android.material.internal.NavigationSubMenu
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper
com.google.android.material.R$attr
    private void <init>()
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
    public int changeFlags
androidx.core.content.ContextCompat
    protected void <init>()
    public static boolean startActivities(android.content.Context,android.content.Intent[])
    public static void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
    public static java.io.File getDataDir(android.content.Context)
    public static java.io.File[] getObbDirs(android.content.Context)
    public static int checkSelfPermission(android.content.Context,java.lang.String)
    public static java.io.File getNoBackupFilesDir(android.content.Context)
    public static java.io.File getCodeCacheDir(android.content.Context)
    private static synchronized java.io.File createFilesDir(java.io.File)
    public static android.content.Context createDeviceProtectedStorageContext(android.content.Context)
    public static boolean isDeviceProtectedStorage(android.content.Context)
    public static java.util.concurrent.Executor getMainExecutor(android.content.Context)
    public static void startForegroundService(android.content.Context,android.content.Intent)
    public static java.lang.Object getSystemService(android.content.Context,java.lang.Class)
    public static java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
    private static final java.lang.String TAG
androidx.annotation.Dimension
com.google.android.material.animation.MotionSpec
    private android.animation.PropertyValuesHolder[] clonePropertyValuesHolder(android.animation.PropertyValuesHolder[])
    public boolean hasPropertyValues(java.lang.String)
    public android.animation.PropertyValuesHolder[] getPropertyValues(java.lang.String)
    public android.animation.ObjectAnimator getAnimator(java.lang.String,java.lang.Object,android.util.Property)
    private static final java.lang.String TAG
androidx.core.widget.EdgeEffectCompat
    public void <init>(android.content.Context)
    public void setSize(int,int)
    public boolean isFinished()
    public void finish()
    public boolean onPull(float)
    public boolean onPull(float,float)
    public boolean onRelease()
    public boolean onAbsorb(int)
    public boolean draw(android.graphics.Canvas)
    private android.widget.EdgeEffect mEdgeEffect
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments
    public int getStart()
    public int getEnd()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table
    private void <init>()
    public static final int UNUSED
    public static final int ANDROID_ORIENTATION
    public static final int LAYOUT_CONSTRAINT_CIRCLE
    public static final int LAYOUT_CONSTRAINT_CIRCLE_RADIUS
    public static final int LAYOUT_CONSTRAINT_CIRCLE_ANGLE
    public static final int LAYOUT_CONSTRAINT_GUIDE_BEGIN
    public static final int LAYOUT_CONSTRAINT_GUIDE_END
    public static final int LAYOUT_CONSTRAINT_GUIDE_PERCENT
    public static final int LAYOUT_CONSTRAINT_LEFT_TO_LEFT_OF
    public static final int LAYOUT_CONSTRAINT_LEFT_TO_RIGHT_OF
    public static final int LAYOUT_CONSTRAINT_RIGHT_TO_LEFT_OF
    public static final int LAYOUT_CONSTRAINT_RIGHT_TO_RIGHT_OF
    public static final int LAYOUT_CONSTRAINT_TOP_TO_TOP_OF
    public static final int LAYOUT_CONSTRAINT_TOP_TO_BOTTOM_OF
    public static final int LAYOUT_CONSTRAINT_BOTTOM_TO_TOP_OF
    public static final int LAYOUT_CONSTRAINT_BOTTOM_TO_BOTTOM_OF
    public static final int LAYOUT_CONSTRAINT_BASELINE_TO_BASELINE_OF
    public static final int LAYOUT_CONSTRAINT_START_TO_END_OF
    public static final int LAYOUT_CONSTRAINT_START_TO_START_OF
    public static final int LAYOUT_CONSTRAINT_END_TO_START_OF
    public static final int LAYOUT_CONSTRAINT_END_TO_END_OF
    public static final int LAYOUT_GONE_MARGIN_LEFT
    public static final int LAYOUT_GONE_MARGIN_TOP
    public static final int LAYOUT_GONE_MARGIN_RIGHT
    public static final int LAYOUT_GONE_MARGIN_BOTTOM
    public static final int LAYOUT_GONE_MARGIN_START
    public static final int LAYOUT_GONE_MARGIN_END
    public static final int LAYOUT_CONSTRAINED_WIDTH
    public static final int LAYOUT_CONSTRAINED_HEIGHT
    public static final int LAYOUT_CONSTRAINT_HORIZONTAL_BIAS
    public static final int LAYOUT_CONSTRAINT_VERTICAL_BIAS
    public static final int LAYOUT_CONSTRAINT_WIDTH_DEFAULT
    public static final int LAYOUT_CONSTRAINT_HEIGHT_DEFAULT
    public static final int LAYOUT_CONSTRAINT_WIDTH_MIN
    public static final int LAYOUT_CONSTRAINT_WIDTH_MAX
    public static final int LAYOUT_CONSTRAINT_WIDTH_PERCENT
    public static final int LAYOUT_CONSTRAINT_HEIGHT_MIN
    public static final int LAYOUT_CONSTRAINT_HEIGHT_MAX
    public static final int LAYOUT_CONSTRAINT_HEIGHT_PERCENT
    public static final int LAYOUT_CONSTRAINT_LEFT_CREATOR
    public static final int LAYOUT_CONSTRAINT_TOP_CREATOR
    public static final int LAYOUT_CONSTRAINT_RIGHT_CREATOR
    public static final int LAYOUT_CONSTRAINT_BOTTOM_CREATOR
    public static final int LAYOUT_CONSTRAINT_BASELINE_CREATOR
    public static final int LAYOUT_CONSTRAINT_DIMENSION_RATIO
    public static final int LAYOUT_CONSTRAINT_HORIZONTAL_WEIGHT
    public static final int LAYOUT_CONSTRAINT_VERTICAL_WEIGHT
    public static final int LAYOUT_CONSTRAINT_HORIZONTAL_CHAINSTYLE
    public static final int LAYOUT_CONSTRAINT_VERTICAL_CHAINSTYLE
    public static final int LAYOUT_EDITOR_ABSOLUTEX
    public static final int LAYOUT_EDITOR_ABSOLUTEY
com.google.android.material.internal.CheckableImageButton
    public boolean isPressable()
com.google.android.material.textfield.DropdownMenuEndIconDelegate
    private static final int ANIMATION_FADE_OUT_DURATION
    private static final int ANIMATION_FADE_IN_DURATION
androidx.appcompat.widget.ShareActionProvider
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath
    public void printVPath(int)
    public java.lang.String nodesToString(androidx.core.graphics.PathParser$PathDataNode[])
    public boolean canApplyTheme()
    public void applyTheme(android.content.res.Resources$Theme)
    protected static final int FILL_TYPE_WINDING
androidx.core.app.ActivityCompat$1
androidx.core.app.NotificationCompat$Action$Builder
com.google.android.material.floatingactionbutton.MotionStrategy
    public abstract com.google.android.material.animation.MotionSpec getCurrentMotionSpec()
    public abstract int getDefaultMotionSpecResource()
    public abstract void addAnimationListener(android.animation.Animator$AnimatorListener)
    public abstract void removeAnimationListener(android.animation.Animator$AnimatorListener)
com.google.android.material.R$id
    private void <init>()
androidx.appcompat.R$bool
    private void <init>()
androidx.core.os.UserManagerCompat
androidx.appcompat.app.WindowDecorActionBar$TabImpl
androidx.core.util.AtomicFile
androidx.lifecycle.LiveData
    public void observeForever(androidx.lifecycle.Observer)
    public void removeObservers(androidx.lifecycle.LifecycleOwner)
    protected void postValue(java.lang.Object)
    int getVersion()
    public boolean hasObservers()
    static final int START_VERSION
androidx.annotation.CallSuper
androidx.vectordrawable.R$integer
androidx.appcompat.app.ActionBar$NavigationMode
androidx.appcompat.widget.AbsActionBarView$1
androidx.appcompat.view.menu.MenuPopupHelper
    public void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
    public void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View)
    public int getGravity()
    public void show(int,int)
    public android.widget.ListView getListView()
    private static final int TOUCH_EPICENTER_SIZE_DP
androidx.loader.R$layout
com.google.android.material.datepicker.SmoothCalendarLayoutManager
    private static final float MILLISECONDS_PER_INCH
com.google.android.material.snackbar.BaseTransientBottomBar$3
androidx.viewpager2.widget.FakeDrag
    void <init>(androidx.viewpager2.widget.ViewPager2,androidx.viewpager2.widget.ScrollEventAdapter,androidx.recyclerview.widget.RecyclerView)
    private void beginFakeVelocityTracker()
    private void addFakeMotionEvent(long,int,float,float)
    boolean beginFakeDrag()
    boolean fakeDragBy(float)
    boolean endFakeDrag()
    private final androidx.viewpager2.widget.ViewPager2 mViewPager
    private final androidx.viewpager2.widget.ScrollEventAdapter mScrollEventAdapter
    private final androidx.recyclerview.widget.RecyclerView mRecyclerView
    private android.view.VelocityTracker mVelocityTracker
    private int mMaximumVelocity
    private float mRequestedDragDistance
    private int mActualDraggedDistance
    private long mFakeDragBeginTime
com.google.android.material.internal.ViewUtils
    private void <init>()
    public static void requestFocusAndShowKeyboard(android.view.View)
    public static void doOnApplyWindowInsets(android.view.View,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener)
    public static void requestApplyInsetsWhenAttached(android.view.View)
androidx.appcompat.widget.TooltipCompat
    private void <init>()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    private boolean isOrWillBeShown()
    private boolean isOrWillBeHidden()
    static synthetic boolean access$602(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,boolean)
    static synthetic boolean access$600(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    static synthetic int access$702(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int)
    static synthetic boolean access$800(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    static synthetic boolean access$900(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public final boolean isExtended()
    public void addOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void addOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public void addOnShrinkAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnShrinkAnimationListener(android.animation.Animator$AnimatorListener)
    public void addOnExtendAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnExtendAnimationListener(android.animation.Animator$AnimatorListener)
    public void hide()
    public void hide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    public void show()
    public void show(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    public void extend()
    public void extend(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    public void shrink()
    public void shrink(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    private int animState
    private final com.google.android.material.floatingactionbutton.AnimatorTracker changeVisibilityTracker
    private static final int ANIM_STATE_NONE
    private static final int ANIM_STATE_HIDING
    private static final int ANIM_STATE_SHOWING
androidx.core.app.ShareCompat$IntentBuilder
androidx.fragment.app.FragmentManagerNonConfig
androidx.viewpager2.R$attr
com.google.android.material.circularreveal.CircularRevealWidget
    public abstract void draw(android.graphics.Canvas)
    public abstract boolean isOpaque()
    public abstract android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
androidx.core.view.MenuCompat
androidx.core.view.MenuItemCompat
    public static void setShowAsAction(android.view.MenuItem,int)
    public static android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)
    public static android.view.MenuItem setActionView(android.view.MenuItem,int)
    public static android.view.View getActionView(android.view.MenuItem)
    public static androidx.core.view.ActionProvider getActionProvider(android.view.MenuItem)
    public static boolean expandActionView(android.view.MenuItem)
    public static boolean collapseActionView(android.view.MenuItem)
    public static boolean isActionViewExpanded(android.view.MenuItem)
    public static android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener)
    public static java.lang.CharSequence getContentDescription(android.view.MenuItem)
    public static java.lang.CharSequence getTooltipText(android.view.MenuItem)
    public static void setShortcut(android.view.MenuItem,char,char,int,int)
    public static int getNumericModifiers(android.view.MenuItem)
    public static int getAlphabeticModifiers(android.view.MenuItem)
    public static android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
    public static android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
    private void <init>()
    private static final java.lang.String TAG
    public static final int SHOW_AS_ACTION_NEVER
    public static final int SHOW_AS_ACTION_IF_ROOM
    public static final int SHOW_AS_ACTION_ALWAYS
    public static final int SHOW_AS_ACTION_WITH_TEXT
    public static final int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
androidx.appcompat.app.ActionBar
    public abstract void setCustomView(android.view.View)
    public abstract void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
    public abstract void setCustomView(int)
    public abstract void setIcon(int)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract void setLogo(int)
    public abstract void setLogo(android.graphics.drawable.Drawable)
    public abstract void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
    public abstract void setSelectedNavigationItem(int)
    public abstract int getSelectedNavigationIndex()
    public abstract int getNavigationItemCount()
    public abstract void setTitle(java.lang.CharSequence)
    public abstract void setTitle(int)
    public abstract void setSubtitle(java.lang.CharSequence)
    public abstract void setSubtitle(int)
    public abstract void setDisplayOptions(int)
    public abstract void setDisplayOptions(int,int)
    public abstract void setDisplayUseLogoEnabled(boolean)
    public abstract void setDisplayShowHomeEnabled(boolean)
    public abstract void setDisplayHomeAsUpEnabled(boolean)
    public abstract void setDisplayShowTitleEnabled(boolean)
    public abstract void setDisplayShowCustomEnabled(boolean)
    public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    public abstract android.view.View getCustomView()
    public abstract java.lang.CharSequence getTitle()
    public abstract java.lang.CharSequence getSubtitle()
    public abstract int getNavigationMode()
    public abstract void setNavigationMode(int)
    public abstract androidx.appcompat.app.ActionBar$Tab newTab()
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab)
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab,int)
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public abstract void removeTab(androidx.appcompat.app.ActionBar$Tab)
    public abstract void removeTabAt(int)
    public abstract void removeAllTabs()
    public abstract void selectTab(androidx.appcompat.app.ActionBar$Tab)
    public abstract androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    public abstract androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    public abstract int getTabCount()
    public abstract int getHeight()
    public abstract void show()
    public abstract void hide()
    public abstract boolean isShowing()
    public abstract void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public abstract void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void setHomeButtonEnabled(boolean)
    public boolean isTitleTruncated()
    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    public void setHomeAsUpIndicator(int)
    public void setHomeActionContentDescription(java.lang.CharSequence)
    public void setHomeActionContentDescription(int)
    public void setHideOnContentScrollEnabled(boolean)
    public boolean isHideOnContentScrollEnabled()
    public int getHideOffset()
    public void setHideOffset(int)
    public void setElevation(float)
    public float getElevation()
    boolean requestFocus()
    public static final int NAVIGATION_MODE_STANDARD
    public static final int NAVIGATION_MODE_LIST
    public static final int NAVIGATION_MODE_TABS
    public static final int DISPLAY_USE_LOGO
    public static final int DISPLAY_SHOW_HOME
    public static final int DISPLAY_HOME_AS_UP
    public static final int DISPLAY_SHOW_TITLE
    public static final int DISPLAY_SHOW_CUSTOM
androidx.transition.ChangeClipBounds
androidx.loader.content.Loader$OnLoadCompleteListener
    public abstract void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
androidx.transition.ChangeTransform$GhostListener
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase
androidx.appcompat.widget.ResourceManagerInternal
    private void removeDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)
    private static boolean arrayContains(int[],int)
    private static final java.lang.String TAG
    private static final boolean DEBUG
    private static final java.lang.String SKIP_DRAWABLE_TAG
    private static final java.lang.String PLATFORM_VD_CLAZZ
androidx.recyclerview.widget.ViewBoundsCheck$ViewBounds
androidx.appcompat.widget.ActivityChooserView$3
androidx.lifecycle.Transformations
androidx.customview.R$integer
androidx.core.widget.AutoSizeableTextView
    public abstract void setAutoSizeTextTypeWithDefaults(int)
    public abstract void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
    public abstract void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
    public abstract int getAutoSizeTextType()
    public abstract int getAutoSizeStepGranularity()
    public abstract int getAutoSizeMinTextSize()
    public abstract int getAutoSizeMaxTextSize()
    public abstract int[] getAutoSizeTextAvailableSizes()
androidx.appcompat.widget.AppCompatCompoundButtonHelper$DirectSetButtonDrawableInterface
androidx.recyclerview.widget.MessageThreadUtil
androidx.viewpager2.R$style
com.google.android.material.snackbar.BaseTransientBottomBar$4
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.cardview.R$dimen
androidx.core.app.TaskStackBuilder
    public static androidx.core.app.TaskStackBuilder from(android.content.Context)
    public androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent)
    public androidx.core.app.TaskStackBuilder addParentStack(java.lang.Class)
    public int getIntentCount()
    public android.content.Intent getIntent(int)
    public android.content.Intent editIntentAt(int)
    public android.app.PendingIntent getPendingIntent(int,int)
    public android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)
    public android.content.Intent[] getIntents()
    private static final java.lang.String TAG
androidx.versionedparcelable.VersionedParcelStream
androidx.appcompat.app.AppCompatDelegate
    public static androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback)
    public static androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback)
    public static void setDefaultNightMode(int)
    public static void setCompatVectorFromResourcesEnabled(boolean)
    public static boolean isCompatVectorFromResourcesEnabled()
    private static void applyDayNightToActiveDelegates()
    public abstract void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    public abstract androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    public abstract boolean hasWindowFeature(int)
    public abstract androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
    public abstract android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public abstract void setHandleNativeActionModesEnabled(boolean)
    public abstract boolean isHandleNativeActionModesEnabled()
    public abstract boolean applyDayNight()
    public abstract void setLocalNightMode(int)
    static final java.lang.String TAG
    public static final int MODE_NIGHT_FOLLOW_SYSTEM
    public static final int MODE_NIGHT_AUTO_TIME
    public static final int MODE_NIGHT_AUTO
    public static final int MODE_NIGHT_NO
    public static final int MODE_NIGHT_YES
    public static final int MODE_NIGHT_AUTO_BATTERY
    public static final int MODE_NIGHT_UNSPECIFIED
    public static final int FEATURE_SUPPORT_ACTION_BAR
    public static final int FEATURE_SUPPORT_ACTION_BAR_OVERLAY
    public static final int FEATURE_ACTION_MODE_OVERLAY
androidx.recyclerview.widget.DiffUtil$Callback
androidx.core.view.inputmethod.EditorInfoCompat
androidx.appcompat.view.menu.MenuHelper
    public abstract void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
    public abstract void dismiss()
androidx.recyclerview.widget.ViewBoundsCheck
    static final int GT
    static final int EQ
    static final int LT
    static final int CVS_PVS_POS
    static final int FLAG_CVS_GT_PVS
    static final int FLAG_CVS_EQ_PVS
    static final int FLAG_CVS_LT_PVS
    static final int CVS_PVE_POS
    static final int FLAG_CVS_GT_PVE
    static final int FLAG_CVS_EQ_PVE
    static final int FLAG_CVS_LT_PVE
    static final int CVE_PVS_POS
    static final int FLAG_CVE_GT_PVS
    static final int FLAG_CVE_EQ_PVS
    static final int FLAG_CVE_LT_PVS
    static final int CVE_PVE_POS
    static final int FLAG_CVE_GT_PVE
    static final int FLAG_CVE_EQ_PVE
    static final int FLAG_CVE_LT_PVE
    static final int MASK
androidx.recyclerview.widget.ItemTouchHelper$Callback
androidx.appcompat.widget.ListPopupWindow$1
androidx.recyclerview.R$integer
androidx.viewpager2.widget.ViewPager2$2
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo
    public void <init>(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    public void set(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    public boolean isInvalid()
    public static final float INVALID_RADIUS
androidx.recyclerview.widget.TileList$Tile
androidx.viewpager.widget.ViewPager$4
android.support.constraint.R$styleable
    private void <init>()
androidx.constraintlayout.widget.Barrier
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public boolean allowsGoneWidget()
    public static final int LEFT
    public static final int TOP
    public static final int RIGHT
    public static final int BOTTOM
    public static final int START
    public static final int END
androidx.loader.R$dimen
androidx.lifecycle.Transformations$2$1
androidx.viewpager.widget.PagerTitleStrip$PageListener
    void <init>(androidx.viewpager.widget.PagerTitleStrip)
    public void onPageScrolled(int,float,int)
    public void onPageSelected(int)
    public void onPageScrollStateChanged(int)
    public void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter)
    public void onChanged()
    private int mScrollState
    final synthetic androidx.viewpager.widget.PagerTitleStrip this$0
com.google.android.material.tabs.TabLayout
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    private static android.content.res.ColorStateList createColorStateList(int,int)
    static synthetic android.graphics.RectF access$1100(com.google.android.material.tabs.TabLayout)
    public void addTab(com.google.android.material.tabs.TabLayout$Tab,int)
    public void addOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener)
    public void removeOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener)
    public void clearOnTabSelectedListeners()
    public void removeTab(com.google.android.material.tabs.TabLayout$Tab)
    public void removeTabAt(int)
    public boolean isTabIndicatorFullWidth()
    public boolean isInlineLabel()
    public boolean hasUnboundedRipple()
    public void setTabTextColors(int,int)
    private final android.graphics.RectF tabViewContentBounds
    private static final int DEFAULT_HEIGHT_WITH_TEXT_ICON
    static final int DEFAULT_GAP_TEXT_ICON
    private static final int DEFAULT_HEIGHT
    private static final int TAB_MIN_WIDTH_MARGIN
    private static final int MIN_INDICATOR_WIDTH
    static final int FIXED_WRAP_GUTTER_MIN
    private static final int INVALID_WIDTH
    private static final int ANIMATION_DURATION
    public static final int MODE_SCROLLABLE
    public static final int MODE_FIXED
    public static final int MODE_AUTO
    public static final int TAB_LABEL_VISIBILITY_UNLABELED
    public static final int TAB_LABEL_VISIBILITY_LABELED
    public static final int GRAVITY_FILL
    public static final int GRAVITY_CENTER
    public static final int INDICATOR_GRAVITY_BOTTOM
    public static final int INDICATOR_GRAVITY_CENTER
    public static final int INDICATOR_GRAVITY_TOP
    public static final int INDICATOR_GRAVITY_STRETCH
androidx.appcompat.app.ActionBar$DisplayOptions
androidx.vectordrawable.animated.R$integer
com.google.android.material.bottomnavigation.BottomNavigationView
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    private void applyWindowInsets()
    private com.google.android.material.shape.MaterialShapeDrawable createMaterialShapeDrawableBackground(android.content.Context)
    private void addCompatibilityTopDivider(android.content.Context)
    static synthetic com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener access$000(com.google.android.material.bottomnavigation.BottomNavigationView)
    static synthetic com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener access$100(com.google.android.material.bottomnavigation.BottomNavigationView)
    public void inflateMenu(int)
    public boolean isItemHorizontalTranslationEnabled()
    public com.google.android.material.badge.BadgeDrawable getBadge(int)
    public com.google.android.material.badge.BadgeDrawable getOrCreateBadge(int)
    public void removeBadge(int)
    private static final int MENU_PRESENTER_ID
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo
androidx.viewpager2.R$drawable
com.google.android.material.bottomsheet.BottomSheetBehavior$State
androidx.annotation.RequiresFeature
androidx.constraintlayout.solver.ArrayRow
    public androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable)
    public androidx.constraintlayout.solver.ArrayRow createRowEqualDimension(float,float,float,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int)
    int sizeInBytes()
    private static final boolean DEBUG
    private static final float epsilon
androidx.core.os.ParcelCompat
androidx.annotation.Px
androidx.vectordrawable.R$color
androidx.core.R$id
    private void <init>()
androidx.appcompat.text.AllCapsTransformationMethod
android.support.constraint.solver.widgets.ResolutionAnchor
    public void remove(android.support.constraint.solver.widgets.ResolutionDimension)
    public static final int UNCONNECTED
    public static final int DIRECT_CONNECTION
    public static final int CENTER_CONNECTION
    public static final int MATCH_CONNECTION
    public static final int CHAIN_CONNECTION
    public static final int BARRIER_CONNECTION
androidx.viewpager.widget.PagerTabStrip$1
androidx.core.provider.FontsContractCompat$4$8
androidx.core.content.PermissionChecker$PermissionResult
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1
androidx.customview.R$drawable
androidx.core.app.NotificationManagerCompat$Task
androidx.core.os.ConfigurationCompat
androidx.core.util.Supplier
androidx.core.view.WindowCompat
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate
androidx.cardview.widget.CardView$1
com.google.android.material.snackbar.BaseTransientBottomBar$8
androidx.vectordrawable.animated.R$attr
androidx.recyclerview.R$styleable
    private void <init>()
androidx.recyclerview.widget.RecyclerView$LayoutParams
    public boolean viewNeedsUpdate()
    public int getViewPosition()
    public int getViewAdapterPosition()
androidx.fragment.R
androidx.annotation.StringRes
com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener
    public abstract void onNavigationItemReselected(android.view.MenuItem)
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent
androidx.appcompat.app.ActionBar$OnNavigationListener
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper
com.google.android.material.snackbar.Snackbar$Callback
com.google.android.material.card.MaterialCardViewHelper$1
androidx.core.view.inputmethod.InputConnectionCompat$2
androidx.core.view.DragStartHelper$1
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper
androidx.core.app.JobIntentService$WorkEnqueuer
    abstract void enqueueWork(android.content.Intent)
com.google.android.material.internal.ViewUtils$3
androidx.appcompat.app.ToolbarActionBar
    void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)
    private android.view.Menu getMenu()
    public android.view.Window$Callback getWrappedWindowCallback()
    public void setCustomView(android.view.View)
    public void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
    public void setCustomView(int)
    public void setIcon(int)
    public void setIcon(android.graphics.drawable.Drawable)
    public void setLogo(int)
    public void setLogo(android.graphics.drawable.Drawable)
    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setHomeButtonEnabled(boolean)
    public void setElevation(float)
    public float getElevation()
    public android.content.Context getThemedContext()
    public boolean isTitleTruncated()
    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    public void setHomeAsUpIndicator(int)
    public void setHomeActionContentDescription(java.lang.CharSequence)
    public void setDefaultDisplayHomeAsUpEnabled(boolean)
    public void setHomeActionContentDescription(int)
    public void setShowHideAnimationEnabled(boolean)
    public void onConfigurationChanged(android.content.res.Configuration)
    public void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
    public void setSelectedNavigationItem(int)
    public int getSelectedNavigationIndex()
    public int getNavigationItemCount()
    public void setTitle(java.lang.CharSequence)
    public void setTitle(int)
    public void setWindowTitle(java.lang.CharSequence)
    public boolean requestFocus()
    public void setSubtitle(java.lang.CharSequence)
    public void setSubtitle(int)
    public void setDisplayOptions(int)
    public void setDisplayOptions(int,int)
    public void setDisplayUseLogoEnabled(boolean)
    public void setDisplayShowHomeEnabled(boolean)
    public void setDisplayHomeAsUpEnabled(boolean)
    public void setDisplayShowTitleEnabled(boolean)
    public void setDisplayShowCustomEnabled(boolean)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public android.view.View getCustomView()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getSubtitle()
    public int getNavigationMode()
    public void setNavigationMode(int)
    public int getDisplayOptions()
    public androidx.appcompat.app.ActionBar$Tab newTab()
    public void addTab(androidx.appcompat.app.ActionBar$Tab)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public void removeTab(androidx.appcompat.app.ActionBar$Tab)
    public void removeTabAt(int)
    public void removeAllTabs()
    public void selectTab(androidx.appcompat.app.ActionBar$Tab)
    public androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    public androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    public int getTabCount()
    public int getHeight()
    public void show()
    public void hide()
    public boolean isShowing()
    public boolean openOptionsMenu()
    public boolean closeOptionsMenu()
    public boolean invalidateOptionsMenu()
    public boolean collapseActionView()
    void populateOptionsMenu()
    public boolean onMenuKeyEvent(android.view.KeyEvent)
    public boolean onKeyShortcut(int,android.view.KeyEvent)
    void onDestroy()
    public void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void dispatchMenuVisibilityChanged(boolean)
    androidx.appcompat.widget.DecorToolbar mDecorToolbar
    boolean mToolbarMenuPrepared
    android.view.Window$Callback mWindowCallback
    private boolean mMenuCallbackSet
    private boolean mLastMenuVisibility
    private java.util.ArrayList mMenuVisibilityListeners
    private final java.lang.Runnable mMenuInvalidator
    private final androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mMenuClicker
android.support.constraint.solver.widgets.ConstraintTableLayout$VerticalSlice
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult
androidx.fragment.app.Fragment$SavedState
    void <init>(android.os.Bundle)
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback
com.google.android.material.tabs.TabLayout$Mode
androidx.vectordrawable.R$id
androidx.appcompat.widget.SearchView
    public boolean isIconfiedByDefault()
    public boolean isSubmitButtonEnabled()
    public boolean isQueryRefinementEnabled()
    static final boolean DBG
    static final java.lang.String LOG_TAG
    private static final java.lang.String IME_OPTION_NO_MICROPHONE
androidx.transition.Styleable$Slide
com.qy.R$interpolator
androidx.core.app.NotificationCompat$InboxStyle
androidx.transition.Slide$3
androidx.recyclerview.widget.DiffUtil$DiffResult
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$1
androidx.appcompat.resources.R$attr
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl
androidx.customview.widget.FocusStrategy
    private void <init>()
androidx.appcompat.widget.ViewUtils
    private void <init>()
    private static final java.lang.String TAG
androidx.core.util.Preconditions
    public static void checkArgument(boolean)
    public static void checkState(boolean,java.lang.String)
    public static void checkState(boolean)
    public static int checkArgumentNonnegative(int,java.lang.String)
    public static int checkArgumentInRange(int,int,int,java.lang.String)
    private void <init>()
androidx.core.provider.FontsContractCompat$FontFamilyResult
    public static final int STATUS_OK
    public static final int STATUS_WRONG_CERTIFICATES
    public static final int STATUS_UNEXPECTED_DATA_PROVIDED
androidx.core.widget.CompoundButtonCompat
    private void <init>()
    public static android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
    private static final java.lang.String TAG
androidx.core.R$style
androidx.core.text.TextUtilsCompat
    public static java.lang.String htmlEncode(java.lang.String)
    private void <init>()
    private static final java.lang.String ARAB_SCRIPT_SUBTAG
    private static final java.lang.String HEBR_SCRIPT_SUBTAG
androidx.appcompat.resources.R$style
androidx.recyclerview.widget.LayoutState
    static final int LAYOUT_START
    static final int LAYOUT_END
    static final int INVALID_LAYOUT
    static final int ITEM_DIRECTION_HEAD
    static final int ITEM_DIRECTION_TAIL
androidx.core.app.NotificationCompat$Action$WearableExtender
com.google.android.material.internal.NavigationMenuPresenter$1
com.google.android.material.bottomsheet.BottomSheetDialog$1
androidx.viewpager.R$styleable
com.google.android.material.bottomappbar.BottomAppBar$FabAlignmentMode
com.qy.R$string
com.qy.R$drawable
androidx.core.app.JobIntentService$CompatWorkEnqueuer
    void enqueueWork(android.content.Intent)
androidx.activity.R$dimen
com.google.android.material.drawable.DrawableUtils
    private void <init>()
    public static android.util.AttributeSet parseDrawableXml(android.content.Context,int,java.lang.CharSequence)
androidx.core.view.ViewCompat$FocusDirection
com.google.android.material.math.MathUtils
    private void <init>()
    public static boolean geq(float,float,float)
    public static final float DEFAULT_EPSILON
android.support.constraint.Constraints$LayoutParams
    public void <init>(android.support.constraint.Constraints$LayoutParams)
androidx.appcompat.view.menu.CascadingMenuPopup$HorizPosition
androidx.activity.ComponentActivity
    public void <init>(int)
    public java.lang.Object getLastCustomNonConfigurationInstance()
com.google.android.material.datepicker.DateFormatTextWatcher
androidx.versionedparcelable.ParcelImpl
    public void <init>(androidx.versionedparcelable.VersionedParcelable)
    public androidx.versionedparcelable.VersionedParcelable getVersionedParcel()
androidx.annotation.StyleableRes
androidx.recyclerview.R$id
androidx.transition.R$color
androidx.core.provider.FontsContractCompat$4
androidx.transition.Visibility$Mode
androidx.appcompat.app.AppCompatDialog
    public void <init>(android.content.Context)
    protected void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
    public androidx.appcompat.app.ActionBar getSupportActionBar()
androidx.constraintlayout.solver.LinearSystem
    private void addSingleError(androidx.constraintlayout.solver.ArrayRow,int)
    private androidx.constraintlayout.solver.SolverVariable createVariable(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type)
    private void displayRows()
    private void displaySolverVariables()
    private java.lang.String getDisplaySize(int)
    private java.lang.String getDisplayStrength(int)
    public static androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
    public static androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
    public static androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
    public static androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
    public void fillMetrics(androidx.constraintlayout.solver.Metrics)
    androidx.constraintlayout.solver.LinearSystem$Row getGoal()
    androidx.constraintlayout.solver.ArrayRow getRow(int)
    float getValueFor(java.lang.String)
    androidx.constraintlayout.solver.SolverVariable getVariable(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type)
    void displayReadableRows()
    public void displayVariablesReadableRows()
    public int getMemoryUsed()
    public int getNumEquations()
    public int getNumVariables()
    void displaySystemInformations()
    public void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,int)
    public void addEquality(androidx.constraintlayout.solver.SolverVariable,int,int)
    public static final boolean FULL_DEBUG
    private static final boolean DEBUG
androidx.transition.GhostViewPort$1
com.google.android.material.snackbar.SnackbarManager$Callback
    public abstract void show()
androidx.core.text.HtmlCompat
androidx.core.view.accessibility.AccessibilityRecordCompat
    public void <init>(java.lang.Object)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat obtain(androidx.core.view.accessibility.AccessibilityRecordCompat)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat obtain()
    public static int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
    public static int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
    public java.lang.Object getImpl()
    public void setSource(android.view.View)
    public void setSource(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getSource()
    public int getWindowId()
    public boolean isChecked()
    public void setChecked(boolean)
    public boolean isEnabled()
    public void setEnabled(boolean)
    public boolean isPassword()
    public void setPassword(boolean)
    public boolean isFullScreen()
    public void setFullScreen(boolean)
    public boolean isScrollable()
    public void setScrollable(boolean)
    public int getItemCount()
    public void setItemCount(int)
    public int getCurrentItemIndex()
    public void setCurrentItemIndex(int)
    public int getFromIndex()
    public void setFromIndex(int)
    public int getToIndex()
    public void setToIndex(int)
    public int getScrollX()
    public void setScrollX(int)
    public int getScrollY()
    public void setScrollY(int)
    public int getMaxScrollX()
    public void setMaxScrollX(int)
    public int getMaxScrollY()
    public void setMaxScrollY(int)
    public int getAddedCount()
    public void setAddedCount(int)
    public int getRemovedCount()
    public void setRemovedCount(int)
    public java.lang.CharSequence getClassName()
    public void setClassName(java.lang.CharSequence)
    public java.util.List getText()
    public java.lang.CharSequence getBeforeText()
    public void setBeforeText(java.lang.CharSequence)
    public java.lang.CharSequence getContentDescription()
    public void setContentDescription(java.lang.CharSequence)
    public android.os.Parcelable getParcelableData()
    public void setParcelableData(android.os.Parcelable)
    public void recycle()
    public int hashCode()
    public boolean equals(java.lang.Object)
    private final android.view.accessibility.AccessibilityRecord mRecord
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat
    private static void dumpKeyframes(java.lang.Object[],java.lang.String)
    private void <init>()
    private static final java.lang.String TAG
    private static final int TOGETHER
    private static final int MAX_NUM_POINTS
    private static final int VALUE_TYPE_FLOAT
    private static final int VALUE_TYPE_INT
    private static final int VALUE_TYPE_PATH
    private static final int VALUE_TYPE_COLOR
    private static final int VALUE_TYPE_UNDEFINED
    private static final boolean DBG_ANIMATOR_INFLATER
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer
androidx.appcompat.app.ActionBar$Tab
    public abstract int getPosition()
    public abstract androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)
    public abstract androidx.appcompat.app.ActionBar$Tab setIcon(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence)
    public abstract androidx.appcompat.app.ActionBar$Tab setText(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View)
    public abstract androidx.appcompat.app.ActionBar$Tab setCustomView(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object)
    public abstract java.lang.Object getTag()
    public abstract androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener)
    public abstract androidx.appcompat.app.ActionBar$Tab setContentDescription(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)
    public static final int INVALID_POSITION
androidx.core.view.animation.PathInterpolatorApi14
androidx.fragment.app.FragmentActivity
    public void <init>(int)
    private int allocateRequestIndex(androidx.fragment.app.Fragment)
    public void supportFinishAfterTransition()
    public void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void supportPostponeEnterTransition()
    public void supportStartPostponedEnterTransition()
    public androidx.loader.app.LoaderManager getSupportLoaderManager()
    public final void validateRequestPermissionsRequestCode(int)
    public void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
    public void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
    boolean mRequestedPermissionsFromFragment
    private static final java.lang.String TAG
    static final java.lang.String FRAGMENTS_TAG
    static final java.lang.String NEXT_CANDIDATE_REQUEST_INDEX_TAG
    static final java.lang.String ALLOCATED_REQUEST_INDICIES_TAG
    static final java.lang.String REQUEST_FRAGMENT_WHO_TAG
    static final int MAX_NUM_PENDING_FRAGMENT_ACTIVITY_RESULTS
androidx.annotation.FractionRes
androidx.appcompat.widget.LinearLayoutCompat$DividerMode
androidx.core.provider.FontsContractCompat$4$4
androidx.fragment.app.ListFragment$1
androidx.transition.Transition
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static int[] parseMatchOrder(java.lang.String)
    private static boolean isValidMatch(int)
    private static boolean alreadyContains(int[],int)
    private static java.util.ArrayList excludeObject(java.util.ArrayList,java.lang.Object,boolean)
    private java.util.ArrayList excludeId(java.util.ArrayList,int,boolean)
    private java.util.ArrayList excludeView(java.util.ArrayList,android.view.View,boolean)
    private java.util.ArrayList excludeType(java.util.ArrayList,java.lang.Class,boolean)
    public varargs void setMatchOrder(int[])
    public androidx.transition.Transition addTarget(int)
    public androidx.transition.Transition addTarget(java.lang.String)
    public androidx.transition.Transition addTarget(java.lang.Class)
    public androidx.transition.Transition removeTarget(int)
    public androidx.transition.Transition removeTarget(java.lang.String)
    public androidx.transition.Transition removeTarget(java.lang.Class)
    public androidx.transition.Transition excludeTarget(android.view.View,boolean)
    public androidx.transition.Transition excludeTarget(int,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.String,boolean)
    public androidx.transition.Transition excludeChildren(android.view.View,boolean)
    public androidx.transition.Transition excludeChildren(int,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.Class,boolean)
    public androidx.transition.Transition excludeChildren(java.lang.Class,boolean)
    void forceToEnd(android.view.ViewGroup)
    public android.graphics.Rect getEpicenter()
    androidx.transition.Transition setSceneRoot(android.view.ViewGroup)
    void setCanRemoveViews(boolean)
    private static final java.lang.String LOG_TAG
    static final boolean DBG
    public static final int MATCH_INSTANCE
    private static final int MATCH_FIRST
    public static final int MATCH_NAME
    public static final int MATCH_ID
    public static final int MATCH_ITEM_ID
    private static final int MATCH_LAST
    private static final java.lang.String MATCH_INSTANCE_STR
    private static final java.lang.String MATCH_NAME_STR
    private static final java.lang.String MATCH_ID_STR
    private static final java.lang.String MATCH_ITEM_ID_STR
androidx.core.app.NotificationManagerCompat$SideChannelManager
androidx.annotation.FloatRange
com.google.android.material.R
androidx.appcompat.graphics.drawable.DrawerArrowDrawable$ArrowDirection
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState
    public void clearMenuPresenters()
    android.os.Parcelable onSaveInstanceState()
    void onRestoreInstanceState(android.os.Parcelable)
    void applyFrozenState()
    boolean wasLastOpen
    android.os.Bundle frozenMenuState
androidx.core.app.DialogCompat
androidx.core.view.MenuItemCompat$1
androidx.transition.TransitionUtils
    private void <init>()
    private static final int MAX_IMAGE_SIZE
androidx.core.view.ViewPropertyAnimatorCompat
    public androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable)
    public android.view.animation.Interpolator getInterpolator()
    public long getStartDelay()
    public androidx.core.view.ViewPropertyAnimatorCompat rotation(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationY(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleY(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat x(float)
    public androidx.core.view.ViewPropertyAnimatorCompat xBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat y(float)
    public androidx.core.view.ViewPropertyAnimatorCompat yBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationZ(float)
    public androidx.core.view.ViewPropertyAnimatorCompat z(float)
    public androidx.core.view.ViewPropertyAnimatorCompat zBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat withLayer()
    public androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable)
    static final int LISTENER_TAG_ID
com.google.android.material.snackbar.ContentViewCallback
    public abstract void animateContentIn(int,int)
    public abstract void animateContentOut(int,int)
androidx.core.content.res.ComplexColorCompat
    private static final java.lang.String LOG_TAG
com.google.android.material.shadow.ShadowViewDelegate
    public abstract float getRadius()
androidx.fragment.app.FragmentTabHost
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    private void initFragmentTabHost(android.content.Context,android.util.AttributeSet)
    private void ensureHierarchy(android.content.Context)
    private void ensureContent()
    public void setup(android.content.Context,androidx.fragment.app.FragmentManager)
    public void setup(android.content.Context,androidx.fragment.app.FragmentManager,int)
    public void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle)
    private android.widget.FrameLayout mRealTabContent
androidx.viewpager2.R$styleable
com.google.android.material.datepicker.MaterialCalendar
    static com.google.android.material.datepicker.MaterialCalendar newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints)
    private static final java.lang.String THEME_RES_ID_KEY
    private static final java.lang.String GRID_SELECTOR_KEY
    private static final java.lang.String CALENDAR_CONSTRAINTS_KEY
    private static final java.lang.String CURRENT_MONTH_KEY
    private static final int SMOOTH_SCROLL_MAX
com.google.android.material.datepicker.MaterialDatePicker$2
androidx.appcompat.widget.Toolbar
    private static boolean isCustomView(android.view.View)
    public void setTitleMargin(int,int,int,int)
    public boolean isTitleTruncated()
    public void setContentInsetsAbsolute(int,int)
    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    private static final java.lang.String TAG
com.google.android.material.shadow.ShadowRenderer
    private static final int COLOR_ALPHA_START
    private static final int COLOR_ALPHA_MIDDLE
    private static final int COLOR_ALPHA_END
com.google.android.material.internal.TextScale
androidx.appcompat.widget.AppCompatCheckedTextView
    public void <init>(android.content.Context)
androidx.viewpager2.adapter.FragmentStateAdapter
    public void <init>(androidx.fragment.app.FragmentActivity)
    public void <init>(androidx.fragment.app.Fragment)
    public void <init>(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle)
    private boolean isFragmentViewBound(long)
    private java.lang.Long itemForViewHolder(int)
    private void ensureFragment(int)
    private void scheduleViewAttach(androidx.fragment.app.Fragment,android.widget.FrameLayout)
    private void removeFragment(long)
    private void scheduleGracePeriodEnd()
    private static java.lang.String createKey(java.lang.String,long)
    private static boolean isValidKey(java.lang.String,java.lang.String)
    private static long parseIdFromKey(java.lang.String,java.lang.String)
    public void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public abstract androidx.fragment.app.Fragment createFragment(int)
    public final androidx.viewpager2.adapter.FragmentViewHolder onCreateViewHolder(android.view.ViewGroup,int)
    public final void onBindViewHolder(androidx.viewpager2.adapter.FragmentViewHolder,int)
    void gcFragments()
    public final void onViewAttachedToWindow(androidx.viewpager2.adapter.FragmentViewHolder)
    void addViewToContainer(android.view.View,android.widget.FrameLayout)
    public final void onViewRecycled(androidx.viewpager2.adapter.FragmentViewHolder)
    public final boolean onFailedToRecycleView(androidx.viewpager2.adapter.FragmentViewHolder)
    public long getItemId(int)
    public boolean containsItem(long)
    public final void setHasStableIds(boolean)
    public final android.os.Parcelable saveState()
    public final void restoreState(android.os.Parcelable)
    public synthetic bridge void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public synthetic bridge boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public synthetic bridge void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public synthetic bridge void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    public synthetic bridge androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
    final androidx.lifecycle.Lifecycle mLifecycle
    final androidx.fragment.app.FragmentManager mFragmentManager
    final androidx.collection.LongSparseArray mFragments
    private final androidx.collection.LongSparseArray mSavedStates
    private final androidx.collection.LongSparseArray mItemIdToViewHolder
    private androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer mFragmentMaxLifecycleEnforcer
    boolean mIsInGracePeriod
    private boolean mHasStaleFragments
    private static final java.lang.String KEY_PREFIX_FRAGMENT
    private static final java.lang.String KEY_PREFIX_STATE
    private static final long GRACE_WINDOW_TIME_MS
androidx.recyclerview.widget.ItemTouchUIUtilImpl
androidx.core.content.pm.PackageInfoCompat
androidx.fragment.app.FragmentManagerViewModel
    void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig)
    androidx.fragment.app.FragmentManagerNonConfig getSnapshot()
androidx.customview.widget.ExploreByTouchHelper
    public final void invalidateRoot()
    public final void invalidateVirtualView(int)
    public final void invalidateVirtualView(int,int)
    public int getFocusedVirtualView()
    public static final int INVALID_ID
    public static final int HOST_ID
    private static final java.lang.String DEFAULT_CLASS_NAME
com.google.android.material.snackbar.BaseTransientBottomBar$13
androidx.annotation.CheckResult
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ChangeSizeStrategy
androidx.core.graphics.drawable.WrappedDrawableApi21
    private static final java.lang.String TAG
androidx.lifecycle.LiveData$AlwaysActiveObserver
androidx.core.app.ActivityManagerCompat
com.google.android.material.resources.TextAppearanceConfig
    public void <init>()
    public static void setShouldLoadFontSynchronously(boolean)
androidx.core.app.NotificationCompat$Action
androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider
    public abstract androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
androidx.appcompat.R$style
    private void <init>()
androidx.recyclerview.widget.AsyncDifferConfig
com.google.android.material.expandable.ExpandableWidget
    public abstract boolean setExpanded(boolean)
androidx.appcompat.widget.AppCompatHintHelper
    private void <init>()
androidx.core.content.res.ConfigurationHelper
com.google.android.material.datepicker.DateStrings
    private void <init>()
    static java.lang.String getYearMonthDay(long)
    static java.lang.String getYearMonthDay(long,java.util.Locale)
    static java.lang.String getMonthDay(long)
    static java.lang.String getMonthDay(long,java.util.Locale)
    static java.lang.String getDateString(long)
    static java.lang.String getDateString(long,java.text.SimpleDateFormat)
    static androidx.core.util.Pair getDateRangeString(java.lang.Long,java.lang.Long)
    static androidx.core.util.Pair getDateRangeString(java.lang.Long,java.lang.Long,java.text.SimpleDateFormat)
androidx.appcompat.resources.R$id
androidx.transition.AnimatorUtils
    private void <init>()
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments
    public int getRow()
    public int getColumn()
androidx.constraintlayout.widget.R$styleable
    private void <init>()
androidx.recyclerview.widget.RecyclerView$LayoutManager
    public static int getChildMeasureSpec(int,int,int,boolean)
    public void assertInLayoutOrScroll(java.lang.String)
    public void setAutoMeasureEnabled(boolean)
    public final void setItemPrefetchEnabled(boolean)
    public void postOnAnimation(java.lang.Runnable)
    public void endAnimation(android.view.View)
    public void removeAllViews()
    public int getItemViewType(android.view.View)
    public void detachView(android.view.View)
    public void attachView(android.view.View)
    public void removeDetachedView(android.view.View)
    public void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)
    public void detachAndScrapViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)
    public int getPaddingStart()
    public int getPaddingEnd()
    public boolean isFocused()
    public boolean hasFocus()
    public void ignoreView(android.view.View)
    public void stopIgnoringView(android.view.View)
    public void measureChild(android.view.View,int,int)
    public boolean isMeasurementCacheEnabled()
    public void setMeasurementCacheEnabled(boolean)
    public void layoutDecorated(android.view.View,int,int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
    protected void onBoundsChange(android.graphics.Rect)
com.google.android.material.shape.RelativeCornerSize
    public float getRelativePercent()
androidx.recyclerview.R
androidx.viewpager.widget.ViewPager
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    void initViewPager()
    public void clearOnPageChangeListeners()
    public void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer)
    public void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int)
    void smoothScrollTo(int,int)
    public boolean beginFakeDrag()
    public void endFakeDrag()
    public void fakeDragBy(float)
    public boolean isFakeDragging()
    private long mFakeDragBeginTime
    private static final java.lang.String TAG
    private static final boolean DEBUG
    private static final boolean USE_CACHE
    private static final int DEFAULT_OFFSCREEN_PAGES
    private static final int MAX_SETTLE_DURATION
    private static final int MIN_DISTANCE_FOR_FLING
    private static final int DEFAULT_GUTTER_SIZE
    private static final int MIN_FLING_VELOCITY
    private static final int INVALID_POINTER
    private static final int CLOSE_ENOUGH
    private static final int DRAW_ORDER_DEFAULT
    private static final int DRAW_ORDER_FORWARD
    private static final int DRAW_ORDER_REVERSE
    public static final int SCROLL_STATE_IDLE
    public static final int SCROLL_STATE_DRAGGING
    public static final int SCROLL_STATE_SETTLING
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper
    private static final java.lang.String TAG
    private static final int DEFAULT_AUTO_SIZE_MIN_TEXT_SIZE_IN_SP
    private static final int DEFAULT_AUTO_SIZE_MAX_TEXT_SIZE_IN_SP
    private static final int DEFAULT_AUTO_SIZE_GRANULARITY_IN_PX
    static final float UNSET_AUTO_SIZE_UNIFORM_CONFIGURATION_VALUE
    private static final int VERY_WIDE
androidx.customview.R$id
com.google.android.material.internal.ScrimInsetsFrameLayout
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    protected void onInsetsChanged(androidx.core.view.WindowInsetsCompat)
androidx.vectordrawable.graphics.drawable.Animatable2Compat
    public abstract void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public abstract boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public abstract void clearAnimationCallbacks()
androidx.core.view.ViewCompat$FocusRelativeDirection
androidx.core.app.FrameMetricsAggregator
com.google.android.material.internal.NavigationMenuPresenter$SeparatorViewHolder
androidx.fragment.R$drawable
androidx.core.graphics.PaintCompat
androidx.recyclerview.R$attr
    private void <init>()
androidx.constraintlayout.solver.widgets.Rectangle
    public void setBounds(int,int,int,int)
    void grow(int,int)
    boolean intersects(androidx.constraintlayout.solver.widgets.Rectangle)
    public boolean contains(int,int)
    public int getCenterX()
    public int getCenterY()
    public int x
    public int y
    public int width
    public int height
com.google.android.material.chip.Chip
    public boolean isChipIconVisible()
    public boolean isChipIconEnabled()
    public boolean isCloseIconEnabled()
    public boolean isCheckedIconVisible()
    public boolean isCheckedIconEnabled()
    private static final java.lang.String TAG
    private static final int CHIP_BODY_VIRTUAL_ID
    private static final int CLOSE_ICON_VIRTUAL_ID
    private static final java.lang.String NAMESPACE_ANDROID
    private static final int MIN_TOUCH_TARGET_DP
    private static final java.lang.String BUTTON_ACCESSIBILITY_CLASS_NAME
    private static final java.lang.String COMPOUND_BUTTON_ACCESSIBILITY_CLASS_NAME
    private static final java.lang.String GENERIC_VIEW_ACCESSIBILITY_CLASS_NAME
androidx.viewpager.R$layout
com.google.android.material.datepicker.CalendarConstraints$Builder
androidx.viewpager2.R
androidx.appcompat.R$anim
androidx.transition.ChangeTransform$PathAnimatorMatrix
com.qy.R$animator
com.google.android.material.appbar.AppBarLayout
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public boolean setLiftable(boolean)
    public boolean setLifted(boolean)
    androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat)
    static final int PENDING_ACTION_NONE
    static final int PENDING_ACTION_EXPANDED
    static final int PENDING_ACTION_COLLAPSED
    static final int PENDING_ACTION_ANIMATE_ENABLED
    static final int PENDING_ACTION_FORCE
    private static final int INVALID_SCROLL_RANGE
androidx.appcompat.widget.PopupMenu$3
androidx.versionedparcelable.VersionedParcel$1
androidx.viewpager.R$string
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl
androidx.core.app.ActivityRecreator
    private void <init>()
    private static final java.lang.String LOG_TAG
com.google.android.material.internal.NavigationMenuPresenter$HeaderViewHolder
androidx.transition.ChangeTransform$Transforms
androidx.versionedparcelable.NonParcelField
androidx.fragment.app.FragmentPagerAdapter
androidx.core.view.GravityCompat
    public static void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
    public static void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
    private void <init>()
    public static final int RELATIVE_LAYOUT_DIRECTION
    public static final int START
    public static final int END
    public static final int RELATIVE_HORIZONTAL_GRAVITY_MASK
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState
    final void clearMutated()
    public final int getEnterFadeDuration()
    public final int getExitFadeDuration()
    public final boolean isStateful()
androidx.recyclerview.widget.ScrollbarHelper
    private void <init>()
com.google.android.material.shape.MaterialShapeDrawable$CompatibilityShadowMode
androidx.annotation.IntegerRes
com.qy.BuildConfig
androidx.core.R
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean)
    public int getColumnIndex()
    public int getColumnSpan()
    public int getRowIndex()
    public int getRowSpan()
    public boolean isHeading()
    public boolean isSelected()
com.google.android.material.badge.BadgeUtils
    private void <init>()
    public static com.google.android.material.internal.ParcelableSparseArray createParcelableBadgeStates(android.util.SparseArray)
    public static android.util.SparseArray createBadgeDrawablesFromSavedStates(android.content.Context,com.google.android.material.internal.ParcelableSparseArray)
androidx.transition.ChangeImageTransform$2
androidx.core.view.ViewPropertyAnimatorListenerAdapter
    public void onAnimationEnd(android.view.View)
androidx.constraintlayout.widget.R
androidx.transition.PropertyValuesHolderUtils
    private void <init>()
androidx.transition.ChangeTransform
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener
com.google.android.material.internal.Experimental
androidx.core.app.NotificationManagerCompat$NotifyTask
androidx.fragment.app.FragmentManagerImpl
    public void popBackStack()
    public void popBackStack(java.lang.String,int)
    public boolean popBackStackImmediate(java.lang.String,int)
    public void popBackStack(int,int)
    public boolean popBackStackImmediate(int,int)
    public androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    public void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    java.util.List getActiveFragments()
    int getActiveFragmentCount()
    public androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
    public void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)
    androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()
    void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)
    public void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
    public void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
    static final java.lang.String TAG
    static final java.lang.String TARGET_REQUEST_CODE_STATE_TAG
    static final java.lang.String TARGET_STATE_TAG
    static final java.lang.String VIEW_STATE_TAG
    static final java.lang.String USER_VISIBLE_HINT_TAG
    static final int ANIM_DUR
    public static final int ANIM_STYLE_OPEN_ENTER
    public static final int ANIM_STYLE_OPEN_EXIT
    public static final int ANIM_STYLE_CLOSE_ENTER
    public static final int ANIM_STYLE_CLOSE_EXIT
    public static final int ANIM_STYLE_FADE_ENTER
    public static final int ANIM_STYLE_FADE_EXIT
androidx.core.content.pm.ShortcutInfoCompat
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
    public static void setTag(android.view.View,java.lang.Object)
    public static java.lang.Object getTag(android.view.View)
androidx.constraintlayout.widget.Guideline
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
androidx.core.view.NestedScrollingParent
    public abstract int getNestedScrollAxes()
androidx.core.app.NotificationCompat$Extender
androidx.fragment.app.ListFragment
androidx.coordinatorlayout.R$style
    private void <init>()
com.google.android.material.chip.ChipGroup$LayoutParams
    public void <init>(android.view.ViewGroup$MarginLayoutParams)
androidx.core.graphics.TypefaceCompatApi24Impl
    private static final java.lang.String TAG
    private static final java.lang.String FONT_FAMILY_CLASS
    private static final java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup
    private static final int MIN_SIZE
androidx.core.provider.FontsContractCompat$4$1
com.qy.R$plurals
com.google.android.material.datepicker.Month
    static com.google.android.material.datepicker.Month create(long)
androidx.viewpager.R$dimen
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper
androidx.appcompat.widget.DropDownListView
    public int lookForSelectablePosition(int,boolean)
    public static final int INVALID_POSITION
    public static final int NO_POSITION
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter
    void <init>(androidx.appcompat.widget.ActivityChooserView)
    public int getItemViewType(int)
    public int getViewTypeCount()
    public int getCount()
    public java.lang.Object getItem(int)
    public long getItemId(int)
    public android.view.View getView(int,android.view.View,android.view.ViewGroup)
    public android.content.pm.ResolveInfo getDefaultActivity()
    public int getHistorySize()
    public boolean getShowDefaultActivity()
    private androidx.appcompat.widget.ActivityChooserModel mDataModel
    private int mMaxActivityCount
    private boolean mShowDefaultActivity
    private boolean mHighlightDefaultActivity
    private boolean mShowFooterView
    final synthetic androidx.appcompat.widget.ActivityChooserView this$0
    public static final int MAX_ACTIVITY_COUNT_UNLIMITED
    public static final int MAX_ACTIVITY_COUNT_DEFAULT
    private static final int ITEM_VIEW_TYPE_ACTIVITY
    private static final int ITEM_VIEW_TYPE_FOOTER
    private static final int ITEM_VIEW_TYPE_COUNT
androidx.appcompat.graphics.drawable.DrawerArrowDrawable
androidx.appcompat.widget.MenuPopupWindow
    private static final java.lang.String TAG
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder
androidx.loader.content.ModernAsyncTask
androidx.coordinatorlayout.widget.CoordinatorLayout
    public boolean doViewsOverlap(android.view.View,android.view.View)
    static final java.lang.String TAG
    private static final int TYPE_ON_INTERCEPT
    private static final int TYPE_ON_TOUCH
    static final int EVENT_PRE_DRAW
    static final int EVENT_NESTED_SCROLL
    static final int EVENT_VIEW_REMOVED
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener
com.google.android.material.bottomsheet.BottomSheetDialogFragment$1
androidx.viewpager2.widget.ViewPager2$DataSetChangeObserver
androidx.transition.Styleable
androidx.transition.Styleable$ChangeBounds
androidx.transition.R$integer
com.google.android.material.snackbar.BaseTransientBottomBar$17
androidx.fragment.R$integer
com.google.android.material.R$animator
    private void <init>()
androidx.appcompat.R$attr
    private void <init>()
androidx.appcompat.view.menu.ListMenuItemView
    public boolean showsIcon()
    private static final java.lang.String TAG
androidx.appcompat.view.menu.MenuPopup
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
com.google.android.material.shape.CornerTreatment
    public void getCornerPath(float,float,com.google.android.material.shape.ShapePath)
android.support.constraint.solver.widgets.ChainHead
    public android.support.constraint.solver.widgets.ConstraintWidget getFirst()
    public android.support.constraint.solver.widgets.ConstraintWidget getFirstVisibleWidget()
    public android.support.constraint.solver.widgets.ConstraintWidget getLast()
    public android.support.constraint.solver.widgets.ConstraintWidget getLastVisibleWidget()
    public android.support.constraint.solver.widgets.ConstraintWidget getHead()
    public android.support.constraint.solver.widgets.ConstraintWidget getFirstMatchConstraintWidget()
    public android.support.constraint.solver.widgets.ConstraintWidget getLastMatchConstraintWidget()
    public float getTotalWeight()
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$1
androidx.transition.ObjectAnimatorUtils
    private void <init>()
androidx.loader.R
com.google.android.material.elevation.ElevationOverlayProvider
    public int compositeOverlayWithThemeSurfaceColorIfNeeded(float,android.view.View)
    public int compositeOverlayWithThemeSurfaceColorIfNeeded(float)
    public int compositeOverlayIfNeeded(int,float,android.view.View)
    public int compositeOverlay(int,float,android.view.View)
    public int calculateOverlayAlpha(float)
    public int getThemeElevationOverlayColor()
    public int getThemeSurfaceColor()
    public float getParentAbsoluteElevation(android.view.View)
    private static final float FORMULA_MULTIPLIER
    private static final float FORMULA_OFFSET
androidx.appcompat.resources.R$drawable
    private void <init>()
androidx.core.graphics.drawable.DrawableCompat
    private void <init>()
    private static final java.lang.String TAG
androidx.cardview.widget.CardViewImpl
    public abstract void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)
    public abstract void updatePadding(androidx.cardview.widget.CardViewDelegate)
androidx.viewpager.R$id
com.google.android.material.snackbar.BaseTransientBottomBar$Duration
com.google.android.material.appbar.AppBarLayout$1
com.google.android.material.floatingactionbutton.FloatingActionButton
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public boolean shouldEnsureMinTouchTargetSize()
    public void show()
    public void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void hide()
    public void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public boolean setExpanded(boolean)
    public void clearCustomSize()
    public void removeTransformationCallback(com.google.android.material.animation.TransformationCallback)
    private int borderWidth
    private static final java.lang.String LOG_TAG
    private static final java.lang.String EXPANDABLE_WIDGET_HELPER_KEY
    public static final int SIZE_MINI
    public static final int SIZE_NORMAL
    public static final int SIZE_AUTO
    public static final int NO_CUSTOM_SIZE
    private static final int AUTO_MINI_LARGEST_SCREEN_WIDTH
androidx.constraintlayout.solver.widgets.Guideline
    public int getRelativeBehaviour()
    public androidx.constraintlayout.solver.widgets.Rectangle getHead()
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor()
    public java.lang.String getType()
    public void setMinimumPosition(int)
    public void setPositionRelaxed(boolean)
    public void setGuidePercent(int)
    public float getRelativePercent()
    public int getRelativeBegin()
    public int getRelativeEnd()
    public void setDrawOrigin(int,int)
    void inferRelativePercentPosition()
    void inferRelativeBeginPosition()
    void inferRelativeEndPosition()
    public void cyclePosition()
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int RELATIVE_PERCENT
    public static final int RELATIVE_BEGIN
    public static final int RELATIVE_END
    public static final int RELATIVE_UNKNWON
androidx.cursoradapter.R
androidx.appcompat.widget.ActivityChooserModel$ActivitySorter
androidx.recyclerview.widget.ItemTouchHelper$1
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate
androidx.viewpager.R$attr
com.google.android.material.tabs.TabLayout$Tab
    public java.lang.Object getTag()
    public com.google.android.material.tabs.TabLayout$Tab setTag(java.lang.Object)
    public com.google.android.material.tabs.TabLayout$Tab setIcon(int)
    public com.google.android.material.tabs.TabLayout$Tab setText(int)
    public com.google.android.material.badge.BadgeDrawable getOrCreateBadge()
    public void removeBadge()
    public com.google.android.material.badge.BadgeDrawable getBadge()
    public com.google.android.material.tabs.TabLayout$Tab setTabLabelVisibility(int)
    public com.google.android.material.tabs.TabLayout$Tab setContentDescription(int)
    public java.lang.CharSequence getContentDescription()
    public static final int INVALID_POSITION
androidx.core.provider.FontsContractCompat
    private void <init>()
    public static void resetCache()
    public static void requestFont(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
    private static void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
    public static android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])
    public static final java.lang.String PARCEL_FONT_RESULTS
    static final int RESULT_CODE_PROVIDER_NOT_FOUND
    static final int RESULT_CODE_WRONG_CERTIFICATES
    private static final int BACKGROUND_THREAD_KEEP_ALIVE_DURATION_MS
com.google.android.material.bottomnavigation.BottomNavigationPresenter
    public void <init>()
    public void setBottomNavigationMenuView(com.google.android.material.bottomnavigation.BottomNavigationMenuView)
    public void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
    public boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
    public boolean flagActionItems()
    public boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
    public boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
    public void setId(int)
    public int getId()
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
    public void setUpdateSuspended(boolean)
    private androidx.appcompat.view.menu.MenuBuilder menu
    private com.google.android.material.bottomnavigation.BottomNavigationMenuView menuView
    private boolean updateSuspended
    private int id
androidx.core.content.FileProvider$SimplePathStrategy
    public android.net.Uri getUriForFile(java.io.File)
androidx.lifecycle.Transformations$1
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
    public void setAutoHideEnabled(boolean)
    public boolean isAutoHideEnabled()
    public void setAutoShrinkEnabled(boolean)
    public boolean isAutoShrinkEnabled()
    void setInternalAutoHideCallback(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    void setInternalAutoShrinkCallback(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    private static final boolean AUTO_HIDE_DEFAULT
    private static final boolean AUTO_SHRINK_DEFAULT
androidx.core.util.TimeUtils
androidx.core.app.AppOpsManagerCompat
    private void <init>()
    public static int noteOp(android.content.Context,java.lang.String,int,java.lang.String)
    public static int noteOpNoThrow(android.content.Context,java.lang.String,int,java.lang.String)
    public static int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)
    public static final int MODE_ALLOWED
    public static final int MODE_IGNORED
    public static final int MODE_ERRORED
    public static final int MODE_DEFAULT
com.google.android.material.R$dimen
    private void <init>()
androidx.activity.R$layout
androidx.recyclerview.widget.LinearLayoutManager
    public void <init>(android.content.Context)
    private void logChildren()
    public boolean getRecycleChildrenOnDetach()
    public void setRecycleChildrenOnDetach(boolean)
    public boolean getStackFromEnd()
    public boolean getReverseLayout()
    public void scrollToPositionWithOffset(int,int)
    public void setSmoothScrollbarEnabled(boolean)
    public void setInitialPrefetchItemCount(int)
    public int getInitialPrefetchItemCount()
    public int findFirstCompletelyVisibleItemPosition()
    public int findLastCompletelyVisibleItemPosition()
    void validateChildOrder()
    public void prepareForDrop(android.view.View,android.view.View,int,int)
    private static final java.lang.String TAG
    static final boolean DEBUG
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int INVALID_OFFSET
    private static final float MAX_SCROLL_FACTOR
androidx.core.app.Person$Builder
androidx.appcompat.widget.DecorContentParent
    public abstract java.lang.CharSequence getTitle()
    public abstract void setUiOptions(int)
    public abstract boolean hasIcon()
    public abstract boolean hasLogo()
    public abstract void setIcon(int)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract void setLogo(int)
    public abstract void saveToolbarHierarchyState(android.util.SparseArray)
    public abstract void restoreToolbarHierarchyState(android.util.SparseArray)
androidx.viewpager.R$style
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2
androidx.core.widget.AutoScrollHelper
    public boolean isEnabled()
    public androidx.core.widget.AutoScrollHelper setExclusive(boolean)
    public boolean isExclusive()
    public static final float RELATIVE_UNSPECIFIED
    public static final float NO_MAX
    public static final float NO_MIN
    public static final int EDGE_TYPE_INSIDE
    public static final int EDGE_TYPE_INSIDE_EXTEND
    public static final int EDGE_TYPE_OUTSIDE
    private static final int HORIZONTAL
    private static final int VERTICAL
    private static final int DEFAULT_EDGE_TYPE
    private static final int DEFAULT_MINIMUM_VELOCITY_DIPS
    private static final int DEFAULT_MAXIMUM_VELOCITY_DIPS
    private static final float DEFAULT_MAXIMUM_EDGE
    private static final float DEFAULT_RELATIVE_EDGE
    private static final float DEFAULT_RELATIVE_VELOCITY
    private static final int DEFAULT_RAMP_UP_DURATION
    private static final int DEFAULT_RAMP_DOWN_DURATION
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
    private void printGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,int)
    public float getPixelSize()
    static final java.lang.String LOGTAG
    private static final java.lang.String SHAPE_CLIP_PATH
    private static final java.lang.String SHAPE_GROUP
    private static final java.lang.String SHAPE_PATH
    private static final java.lang.String SHAPE_VECTOR
    private static final int LINECAP_BUTT
    private static final int LINECAP_ROUND
    private static final int LINECAP_SQUARE
    private static final int LINEJOIN_MITER
    private static final int LINEJOIN_ROUND
    private static final int LINEJOIN_BEVEL
    private static final int MAX_CACHED_BITMAP_SIZE
    private static final boolean DBG_VECTOR_DRAWABLE
androidx.core.text.util.FindAddress$ZipRange
androidx.transition.FragmentTransitionSupport$1
    public android.graphics.Rect onGetEpicenter(androidx.transition.Transition)
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup
    public abstract int getHorizontalOriginalOffset()
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment
    public void <init>(float,float,float)
    public float getHorizontalOffset()
    private static final int ARC_QUARTER
    private static final int ARC_HALF
    private static final int ANGLE_UP
    private static final int ANGLE_LEFT
com.google.android.material.button.MaterialButton
    public void clearOnCheckedChangeListeners()
    public static final int ICON_GRAVITY_START
    public static final int ICON_GRAVITY_TEXT_START
    public static final int ICON_GRAVITY_END
    public static final int ICON_GRAVITY_TEXT_END
    private static final java.lang.String LOG_TAG
androidx.appcompat.app.ToolbarActionBar$2
androidx.transition.Explode
androidx.transition.Visibility
    public void <init>(android.content.Context,android.util.AttributeSet)
    public int getMode()
    public boolean isVisible(androidx.transition.TransitionValues)
    static final java.lang.String PROPNAME_VISIBILITY
    private static final java.lang.String PROPNAME_PARENT
    private static final java.lang.String PROPNAME_SCREEN_LOCATION
    public static final int MODE_IN
    public static final int MODE_OUT
com.google.android.material.tabs.TabItem
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.solver.LinearSystem$Row
    public abstract boolean isEmpty()
androidx.recyclerview.widget.RecyclerView$Orientation
android.support.constraint.solver.LinearSystem$Row
    public abstract boolean isEmpty()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
    public synthetic bridge boolean isHorizontalOffsetEnabled()
    public synthetic bridge void setHorizontalOffsetEnabled(boolean)
    public synthetic bridge boolean isVerticalOffsetEnabled()
    public synthetic bridge void setVerticalOffsetEnabled(boolean)
    public synthetic bridge int getLeftAndRightOffset()
    public synthetic bridge int getTopAndBottomOffset()
    public synthetic bridge boolean setLeftAndRightOffset(int)
    public synthetic bridge boolean setTopAndBottomOffset(int)
androidx.core.app.NotificationCompat$MessagingStyle$Message
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView
    public void <init>(android.content.Context)
androidx.transition.SidePropagation
androidx.transition.MatrixUtils$1
androidx.loader.content.ModernAsyncTask$1
androidx.core.widget.TextViewCompat$AutoSizeTextType
androidx.appcompat.widget.Toolbar$SavedState
    public void <init>(android.os.Parcel)
androidx.annotation.NavigationRes
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState
    public void <init>(android.os.Parcel)
    public void <init>(android.os.Parcelable,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat
    static androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)
    public void <init>(java.lang.Object)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int)
    private java.util.List extrasCharSequenceList(java.lang.String)
    public java.lang.Object getInfo()
    public void setSource(android.view.View)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int)
    public int getWindowId()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int)
    public void addChild(android.view.View)
    public boolean removeChild(android.view.View)
    public boolean removeChild(android.view.View,int)
    public boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
    public boolean performAction(int)
    public void setMovementGranularities(int)
    public int getMovementGranularities()
    public java.util.List findAccessibilityNodeInfosByText(java.lang.String)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent()
    public boolean isVisibleToUser()
    public boolean isAccessibilityFocused()
    public void setSelected(boolean)
    public void setLongClickable(boolean)
    public void setPassword(boolean)
    public boolean isImportantForAccessibility()
    public void setImportantForAccessibility(boolean)
    public void setViewIdResourceName(java.lang.String)
    public int getLiveRegion()
    public void setLiveRegion(int)
    public int getDrawingOrder()
    public void setDrawingOrder(int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo()
    public void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat)
    public java.util.List getActionList()
    public boolean isContentInvalid()
    public boolean isContextClickable()
    public void setContextClickable(boolean)
    public java.lang.CharSequence getHintText()
    public java.lang.CharSequence getError()
    public void setLabelFor(android.view.View)
    public void setLabelFor(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor()
    public void setLabeledBy(android.view.View)
    public void setLabeledBy(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy()
    public boolean canOpenPopup()
    public void setCanOpenPopup(boolean)
    public java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)
    public int getInputType()
    public void setInputType(int)
    public void setMaxTextLength(int)
    public int getMaxTextLength()
    public void setTextSelection(int,int)
    public int getTextSelectionStart()
    public int getTextSelectionEnd()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore()
    public void setTraversalBefore(android.view.View)
    public void setTraversalBefore(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter()
    public void setTraversalAfter(android.view.View)
    public void setTraversalAfter(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow()
    public boolean isDismissable()
    public void setDismissable(boolean)
    public boolean isEditable()
    public void setEditable(boolean)
    public boolean isMultiLine()
    public void setMultiLine(boolean)
    public java.lang.CharSequence getTooltipText()
    public void setTooltipText(java.lang.CharSequence)
    public java.lang.CharSequence getPaneTitle()
    public boolean isScreenReaderFocusable()
    public boolean isHeading()
    public boolean isTextEntryKey()
    public void setTextEntryKey(boolean)
    public boolean refresh()
    public java.lang.CharSequence getRoleDescription()
    public void setRoleDescription(java.lang.CharSequence)
    private static final java.lang.String ROLE_DESCRIPTION_KEY
    private static final java.lang.String PANE_TITLE_KEY
    private static final java.lang.String TOOLTIP_TEXT_KEY
    private static final java.lang.String HINT_TEXT_KEY
    private static final java.lang.String BOOLEAN_PROPERTY_KEY
    private static final java.lang.String SPANS_ID_KEY
    private static final java.lang.String SPANS_START_KEY
    private static final java.lang.String SPANS_END_KEY
    private static final java.lang.String SPANS_FLAGS_KEY
    private static final java.lang.String SPANS_ACTION_ID_KEY
    private static final int BOOLEAN_PROPERTY_SCREEN_READER_FOCUSABLE
    private static final int BOOLEAN_PROPERTY_IS_HEADING
    private static final int BOOLEAN_PROPERTY_IS_SHOWING_HINT
    private static final int BOOLEAN_PROPERTY_IS_TEXT_ENTRY_KEY
    public static final int ACTION_FOCUS
    public static final int ACTION_CLEAR_FOCUS
    public static final int ACTION_SELECT
    public static final int ACTION_CLEAR_SELECTION
    public static final int ACTION_CLICK
    public static final int ACTION_LONG_CLICK
    public static final int ACTION_ACCESSIBILITY_FOCUS
    public static final int ACTION_CLEAR_ACCESSIBILITY_FOCUS
    public static final int ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    public static final int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    public static final int ACTION_NEXT_HTML_ELEMENT
    public static final int ACTION_PREVIOUS_HTML_ELEMENT
    public static final int ACTION_SCROLL_FORWARD
    public static final int ACTION_SCROLL_BACKWARD
    public static final int ACTION_COPY
    public static final int ACTION_PASTE
    public static final int ACTION_CUT
    public static final int ACTION_SET_SELECTION
    public static final int ACTION_EXPAND
    public static final int ACTION_COLLAPSE
    public static final int ACTION_DISMISS
    public static final int ACTION_SET_TEXT
    public static final java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    public static final java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING
    public static final java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_START_INT
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_END_INT
    public static final java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
    public static final java.lang.String ACTION_ARGUMENT_ROW_INT
    public static final java.lang.String ACTION_ARGUMENT_COLUMN_INT
    public static final java.lang.String ACTION_ARGUMENT_PROGRESS_VALUE
    public static final java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_X
    public static final java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_Y
    public static final int FOCUS_INPUT
    public static final int FOCUS_ACCESSIBILITY
    public static final int MOVEMENT_GRANULARITY_CHARACTER
    public static final int MOVEMENT_GRANULARITY_WORD
    public static final int MOVEMENT_GRANULARITY_LINE
    public static final int MOVEMENT_GRANULARITY_PARAGRAPH
    public static final int MOVEMENT_GRANULARITY_PAGE
com.google.android.material.shape.MaterialShapeDrawable
    public static com.google.android.material.shape.MaterialShapeDrawable createWithElevationOverlay(android.content.Context)
    public void <init>(com.google.android.material.shape.ShapePathModel)
    public void setShapedViewModel(com.google.android.material.shape.ShapePathModel)
    public com.google.android.material.shape.ShapePathModel getShapedViewModel()
    public android.content.res.ColorStateList getStrokeColor()
    public android.content.res.ColorStateList getStrokeTintList()
    public void setStrokeTint(android.content.res.ColorStateList)
    public void setStrokeTint(int)
    public float getStrokeWidth()
    public void setCornerSize(com.google.android.material.shape.CornerSize)
    public boolean isPointInTransparentRegion(int,int)
    public int getShadowCompatibilityMode()
    public void setShadowCompatibilityMode(int)
    public boolean isShadowEnabled()
    public void setShadowEnabled(boolean)
    public boolean isElevationOverlayInitialized()
    public float getInterpolation()
    public void setTranslationZ(float)
    public void setZ(float)
    public int getShadowElevation()
    public void setShadowElevation(int)
    public int getShadowVerticalOffset()
    public void setShadowVerticalOffset(int)
    public int getShadowCompatRotation()
    public void setShadowRadius(int)
    public float getScale()
    public void setScale(float)
    public void setUseTintColorForShadow(boolean)
    public void setShadowColor(int)
    public android.graphics.Paint$Style getPaintStyle()
    public void setPaintStyle(android.graphics.Paint$Style)
    public void getPathForSize(int,int,android.graphics.Path)
    private static final float SHADOW_RADIUS_MULTIPLIER
    private static final float SHADOW_OFFSET_MULTIPLIER
    public static final int SHADOW_COMPAT_MODE_DEFAULT
    public static final int SHADOW_COMPAT_MODE_NEVER
    public static final int SHADOW_COMPAT_MODE_ALWAYS
androidx.appcompat.view.menu.MenuView
    public abstract int getWindowAnimations()
com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener
    public abstract boolean onNavigationItemSelected(android.view.MenuItem)
androidx.appcompat.widget.SuggestionsAdapter
    public int getQueryRefinement()
    public void close()
    private static final boolean DBG
    private static final java.lang.String LOG_TAG
    private static final int QUERY_LIMIT
    static final int REFINE_NONE
    static final int REFINE_BY_ENTRY
    static final int REFINE_ALL
    static final int INVALID_INDEX
androidx.recyclerview.widget.RecyclerView$ItemAnimator
    public void setMoveDuration(long)
    public void setAddDuration(long)
    public void setRemoveDuration(long)
    public void setChangeDuration(long)
    public final void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener)
    public static final int FLAG_CHANGED
    public static final int FLAG_REMOVED
    public static final int FLAG_INVALIDATED
    public static final int FLAG_MOVED
    public static final int FLAG_APPEARED_IN_PRE_LAYOUT
androidx.recyclerview.widget.ItemTouchHelper$Callback$2
com.google.android.material.tabs.TabLayoutMediator$ViewPagerOnTabSelectedListener
androidx.constraintlayout.solver.widgets.Chain
    void <init>()
    private static final boolean DEBUG
androidx.core.internal.view.SupportMenu
    public abstract void setGroupDividerEnabled(boolean)
    public static final int USER_MASK
    public static final int USER_SHIFT
    public static final int CATEGORY_MASK
    public static final int CATEGORY_SHIFT
    public static final int SUPPORTED_MODIFIERS_MASK
    public static final int FLAG_KEEP_OPEN_ON_SUBMENU_OPENED
com.google.android.material.button.MaterialButtonToggleGroup
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    static synthetic boolean access$200(com.google.android.material.button.MaterialButtonToggleGroup)
    static synthetic boolean access$300(com.google.android.material.button.MaterialButtonToggleGroup)
    static synthetic int access$402(com.google.android.material.button.MaterialButtonToggleGroup,int)
    static synthetic void access$500(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean)
    static synthetic void access$600(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean)
    public void check(int)
    public void uncheck(int)
    public void addOnButtonCheckedListener(com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener)
    public void removeOnButtonCheckedListener(com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener)
    public void clearOnButtonCheckedListeners()
    public boolean isSingleSelection()
com.google.android.material.tabs.TabLayoutMediator
androidx.viewpager2.adapter.FragmentStateAdapter$5
    void <init>(androidx.viewpager2.adapter.FragmentStateAdapter,android.os.Handler,java.lang.Runnable)
    final synthetic androidx.viewpager2.adapter.FragmentStateAdapter this$0
com.google.android.material.textfield.TextInputLayout
    public void setBoxCornerRadiiResources(int,int,int,int)
    public void setBoxCornerRadii(float,float,float,float)
    public boolean isHintEnabled()
    public boolean isErrorEnabled()
    public boolean isCounterEnabled()
    public boolean isHintAnimationEnabled()
    public boolean isStartIconCheckable()
    public boolean isEndIconCheckable()
    public void removeOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener)
    public void clearOnEndIconChangedListeners()
    public void removeOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener)
    public void clearOnEditTextAttachedListeners()
    public boolean isPasswordVisibilityToggleEnabled()
    public void passwordVisibilityToggleRequested(boolean)
    boolean cutoutIsOpen()
    final boolean isHintExpanded()
    final boolean isHelperTextDisplayed()
    private static final int LABEL_SCALE_ANIMATION_DURATION
    private static final int INVALID_MAX_LENGTH
    private static final java.lang.String LOG_TAG
    public static final int BOX_BACKGROUND_NONE
    public static final int BOX_BACKGROUND_FILLED
    public static final int BOX_BACKGROUND_OUTLINE
    public static final int END_ICON_CUSTOM
    public static final int END_ICON_NONE
    public static final int END_ICON_PASSWORD_TOGGLE
    public static final int END_ICON_CLEAR_TEXT
    public static final int END_ICON_DROPDOWN_MENU
androidx.transition.VisibilityPropagation
androidx.core.view.WindowInsetsCompat
    public void <init>(androidx.core.view.WindowInsetsCompat)
    public boolean hasSystemWindowInsets()
    public boolean hasInsets()
    public boolean isRound()
    public androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
    public androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect)
    public int getStableInsetTop()
    public int getStableInsetLeft()
    public int getStableInsetRight()
    public int getStableInsetBottom()
    public boolean hasStableInsets()
    public androidx.core.view.WindowInsetsCompat consumeStableInsets()
    public androidx.core.view.DisplayCutoutCompat getDisplayCutout()
    public androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.appcompat.widget.TooltipPopup
    private static final java.lang.String TAG
com.google.android.material.datepicker.DateValidatorPointForward
    public static com.google.android.material.datepicker.DateValidatorPointForward from(long)
    public static com.google.android.material.datepicker.DateValidatorPointForward now()
androidx.appcompat.app.AppCompatActivity
    public void <init>(int)
    public void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    public boolean supportRequestWindowFeature(int)
    public androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
    public void setSupportProgressBarVisibility(boolean)
    public void setSupportProgressBarIndeterminateVisibility(boolean)
    public void setSupportProgressBarIndeterminate(boolean)
    public void setSupportProgress(int)
    public androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
androidx.core.view.LayoutInflaterFactory
android.support.constraint.solver.widgets.Optimizer
    public void <init>()
    public static final int OPTIMIZATION_NONE
    public static final int OPTIMIZATION_DIRECT
    public static final int OPTIMIZATION_BARRIER
    public static final int OPTIMIZATION_CHAIN
    public static final int OPTIMIZATION_DIMENSIONS
    public static final int OPTIMIZATION_RATIO
    public static final int OPTIMIZATION_GROUPS
    public static final int OPTIMIZATION_STANDARD
    static final int FLAG_USE_OPTIMIZE
    static final int FLAG_CHAIN_DANGLING
    static final int FLAG_RECOMPUTE_BOUNDS
androidx.recyclerview.widget.ViewInfoStore$InfoRecord
    static final int FLAG_DISAPPEARED
    static final int FLAG_APPEAR
    static final int FLAG_PRE
    static final int FLAG_POST
    static final int FLAG_APPEAR_AND_DISAPPEAR
    static final int FLAG_PRE_AND_POST
    static final int FLAG_APPEAR_PRE_AND_POST
androidx.transition.ChangeClipBounds$1
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
    public void setSpanIndexCacheEnabled(boolean)
    public void setSpanGroupIndexCacheEnabled(boolean)
    public boolean isSpanIndexCacheEnabled()
    public boolean isSpanGroupIndexCacheEnabled()
com.google.android.material.radiobutton.MaterialRadioButton
    public void <init>(android.content.Context)
    public boolean isUseMaterialThemeColors()
androidx.appcompat.widget.AppCompatRatingBar
    public void <init>(android.content.Context)
android.support.constraint.R$attr
androidx.recyclerview.widget.FastScroller
    public boolean isDragging()
    boolean isVisible()
    android.graphics.drawable.Drawable getHorizontalTrackDrawable()
    android.graphics.drawable.Drawable getHorizontalThumbDrawable()
    android.graphics.drawable.Drawable getVerticalTrackDrawable()
    android.graphics.drawable.Drawable getVerticalThumbDrawable()
    private static final int STATE_HIDDEN
    private static final int STATE_VISIBLE
    private static final int STATE_DRAGGING
    private static final int DRAG_NONE
    private static final int DRAG_X
    private static final int DRAG_Y
    private static final int ANIMATION_STATE_OUT
    private static final int ANIMATION_STATE_FADING_IN
    private static final int ANIMATION_STATE_IN
    private static final int ANIMATION_STATE_FADING_OUT
    private static final int SHOW_DURATION_MS
    private static final int HIDE_DELAY_AFTER_VISIBLE_MS
    private static final int HIDE_DELAY_AFTER_DRAGGING_MS
    private static final int HIDE_DURATION_MS
    private static final int SCROLLBAR_FULL_OPAQUE
androidx.appcompat.widget.AppCompatSpinner$DialogPopup
    public int getHorizontalOriginalOffset()
androidx.core.R$drawable
androidx.core.text.BidiFormatter
    public static androidx.core.text.BidiFormatter getInstance(boolean)
    public static androidx.core.text.BidiFormatter getInstance(java.util.Locale)
    public boolean isRtlContext()
    public boolean isRtl(java.lang.String)
    public boolean isRtl(java.lang.CharSequence)
    public java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean)
    public java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat)
    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
    public java.lang.String unicodeWrap(java.lang.String,boolean)
    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence,boolean)
    public java.lang.String unicodeWrap(java.lang.String)
    private static final char LRE
    private static final char RLE
    private static final char PDF
    private static final char LRM
    private static final char RLM
    private static final java.lang.String EMPTY_STRING
    private static final int FLAG_STEREO_RESET
    private static final int DEFAULT_FLAGS
    private static final int DIR_LTR
    private static final int DIR_UNKNOWN
    private static final int DIR_RTL
androidx.core.view.inputmethod.InputConnectionCompat$1
androidx.loader.content.AsyncTaskLoader
android.support.constraint.Guideline
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
androidx.viewpager2.widget.AnimateLayoutChangeDetector$1
androidx.core.view.InputDeviceCompat
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener
androidx.recyclerview.widget.DiffUtil$Snake
androidx.constraintlayout.widget.ConstraintSet$Constraint
    static synthetic void access$100(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams)
    static final int UNSET
com.google.android.material.bottomnavigation.BottomNavigationItemView
    private void tryRemoveBadgeFromAnchor(android.view.View)
    public void setShortcut(boolean,char)
    public boolean showsIcon()
    void removeBadge()
    public static final int INVALID_ITEM_POSITION
androidx.transition.TranslationAnimationCreator$TransitionPositionListener
androidx.core.provider.FontRequest
    public void <init>(java.lang.String,java.lang.String,java.lang.String,int)
androidx.recyclerview.R$drawable
androidx.fragment.app.FragmentTabHost$DummyTabFactory
androidx.fragment.R$id
androidx.recyclerview.R$color
androidx.core.graphics.TypefaceCompatApi28Impl
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
    private static final int RESOLVE_BY_FONT_TABLE
    private static final java.lang.String DEFAULT_FAMILY
androidx.activity.R$string
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span
    public int findFirstVisibleItemPosition()
    public int findFirstCompletelyVisibleItemPosition()
    public int findLastVisibleItemPosition()
    public int findLastCompletelyVisibleItemPosition()
    int findOneVisibleChild(int,int,boolean)
    static final int INVALID_LINE
androidx.recyclerview.widget.ItemTouchHelper
androidx.viewpager2.widget.ViewPager2$PageTransformer
    public abstract void transformPage(android.view.View,float)
androidx.core.content.pm.PermissionInfoCompat$ProtectionFlags
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo
androidx.loader.app.LoaderManagerImpl$LoaderInfo
    void <init>(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader)
    androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks)
    boolean isCallbackWaitingForData()
    public void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
androidx.core.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop
    void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)
    com.google.android.material.floatingactionbutton.BorderDrawable createBorderDrawable(int,android.content.res.ColorStateList)
    com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable()
androidx.lifecycle.ComputableLiveData$1
androidx.drawerlayout.widget.DrawerLayout$1
androidx.recyclerview.widget.ItemTouchHelper$5
androidx.core.app.NotificationCompat$Builder
androidx.core.net.ConnectivityManagerCompat$RestrictBackgroundStatus
com.google.android.material.transformation.FabTransformationScrimBehavior
    public static final long EXPAND_DELAY
    public static final long EXPAND_DURATION
    public static final long COLLAPSE_DELAY
    public static final long COLLAPSE_DURATION
com.google.android.material.snackbar.BaseTransientBottomBar$5
com.google.android.material.R$integer
    private void <init>()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB
    public void refreshVisibility()
androidx.core.graphics.TypefaceCompatApi21Impl
    private static final java.lang.String TAG
    private static final java.lang.String FONT_FAMILY_CLASS
    private static final java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
androidx.versionedparcelable.VersionedParcelize
androidx.appcompat.widget.AppCompatDrawableManager
    synchronized android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)
    boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
    private static final java.lang.String TAG
    private static final boolean DEBUG
com.google.android.material.shape.CornerFamily
androidx.transition.TransitionUtils$MatrixEvaluator
androidx.recyclerview.widget.ChildHelper
    private static final boolean DEBUG
    private static final java.lang.String TAG
androidx.recyclerview.widget.DividerItemDecoration
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback
com.google.android.material.tabs.TabLayout$TabGravity
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator
    void <init>(androidx.core.graphics.PathParser$PathDataNode[])
androidx.core.view.ViewCompat
    public static boolean canScrollHorizontally(android.view.View,int)
    public static boolean canScrollVertically(android.view.View,int)
    public static int getOverScrollMode(android.view.View)
    public static void setOverScrollMode(android.view.View,int)
    public static void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public static void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public static varargs void setAutofillHints(android.view.View,java.lang.String[])
    public static boolean isImportantForAutofill(android.view.View)
    public static boolean hasAccessibilityDelegate(android.view.View)
    public static void postInvalidateOnAnimation(android.view.View,int,int,int,int)
    public static boolean isImportantForAccessibility(android.view.View)
    public static int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
    private static int getAvailableActionIdFromResources(android.view.View)
    public static void enableAccessibleClickableSpanSupport(android.view.View)
    public static androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    public static float getAlpha(android.view.View)
    public static void setLayerType(android.view.View,int,android.graphics.Paint)
    public static int getLayerType(android.view.View)
    public static int getLabelFor(android.view.View)
    public static void setLabelFor(android.view.View,int)
    public static void setLayerPaint(android.view.View,android.graphics.Paint)
    public static void setLayoutDirection(android.view.View,int)
    public static android.view.ViewParent getParentForAccessibility(android.view.View)
    public static android.view.View requireViewById(android.view.View,int)
    public static boolean isOpaque(android.view.View)
    public static int resolveSizeAndState(int,int,int)
    public static int getMeasuredWidthAndState(android.view.View)
    public static int getMeasuredHeightAndState(android.view.View)
    public static int getMeasuredState(android.view.View)
    public static int combineMeasuredStates(int,int)
    private static void bindTempDetach()
    public static void dispatchStartTemporaryDetach(android.view.View)
    public static void dispatchFinishTemporaryDetach(android.view.View)
    public static float getTranslationX(android.view.View)
    public static float getTranslationY(android.view.View)
    public static android.graphics.Matrix getMatrix(android.view.View)
    public static void setTranslationX(android.view.View,float)
    public static void setTranslationY(android.view.View,float)
    public static void setAlpha(android.view.View,float)
    public static void setX(android.view.View,float)
    public static void setY(android.view.View,float)
    public static void setRotation(android.view.View,float)
    public static void setRotationX(android.view.View,float)
    public static void setRotationY(android.view.View,float)
    public static void setScaleX(android.view.View,float)
    public static void setScaleY(android.view.View,float)
    public static float getPivotX(android.view.View)
    public static void setPivotX(android.view.View,float)
    public static float getPivotY(android.view.View)
    public static void setPivotY(android.view.View,float)
    public static float getRotation(android.view.View)
    public static float getRotationX(android.view.View)
    public static float getRotationY(android.view.View)
    public static float getScaleX(android.view.View)
    public static float getScaleY(android.view.View)
    public static float getX(android.view.View)
    public static float getY(android.view.View)
    public static void setTranslationZ(android.view.View,float)
    public static float getTranslationZ(android.view.View)
    public static void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)
    public static void jumpDrawablesToCurrentState(android.view.View)
    public static androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
    public static void setSaveFromParentEnabled(android.view.View,boolean)
    public static void setActivated(android.view.View,boolean)
    public static void setNestedScrollingEnabled(android.view.View,boolean)
    public static boolean startNestedScroll(android.view.View,int)
    public static boolean hasNestedScrollingParent(android.view.View)
    public static boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
    public static boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
    public static boolean startNestedScroll(android.view.View,int,int)
    public static void stopNestedScroll(android.view.View,int)
    public static boolean hasNestedScrollingParent(android.view.View,int)
    public static void dispatchNestedScroll(android.view.View,int,int,int,int,int[],int,int[])
    public static boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int)
    public static boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int)
    public static boolean dispatchNestedFling(android.view.View,float,float,boolean)
    public static boolean dispatchNestedPreFling(android.view.View,float,float)
    public static boolean isInLayout(android.view.View)
    public static boolean isLayoutDirectionResolved(android.view.View)
    public static void setZ(android.view.View,float)
    public static void setScrollIndicators(android.view.View,int)
    public static int getScrollIndicators(android.view.View)
    public static void setTooltipText(android.view.View,java.lang.CharSequence)
    public static boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)
    public static void cancelDragAndDrop(android.view.View)
    public static void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)
    public static int getNextClusterForwardId(android.view.View)
    public static void setNextClusterForwardId(android.view.View,int)
    public static boolean isKeyboardNavigationCluster(android.view.View)
    public static void setKeyboardNavigationCluster(android.view.View,boolean)
    public static boolean isFocusedByDefault(android.view.View)
    public static void setFocusedByDefault(android.view.View,boolean)
    public static android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
    public static void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
    public static boolean restoreDefaultFocus(android.view.View)
    public static boolean hasExplicitFocusable(android.view.View)
    public static void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
    public static void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
    protected void <init>()
    public static void setScreenReaderFocusable(android.view.View,boolean)
    public static void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
    private static final java.lang.String TAG
    public static final int OVER_SCROLL_ALWAYS
    public static final int OVER_SCROLL_IF_CONTENT_SCROLLS
    public static final int OVER_SCROLL_NEVER
    public static final int IMPORTANT_FOR_ACCESSIBILITY_AUTO
    public static final int IMPORTANT_FOR_ACCESSIBILITY_YES
    public static final int IMPORTANT_FOR_ACCESSIBILITY_NO
    public static final int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    public static final int ACCESSIBILITY_LIVE_REGION_NONE
    public static final int ACCESSIBILITY_LIVE_REGION_POLITE
    public static final int ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    public static final int LAYER_TYPE_NONE
    public static final int LAYER_TYPE_SOFTWARE
    public static final int LAYER_TYPE_HARDWARE
    public static final int LAYOUT_DIRECTION_LTR
    public static final int LAYOUT_DIRECTION_RTL
    public static final int LAYOUT_DIRECTION_INHERIT
    public static final int LAYOUT_DIRECTION_LOCALE
    public static final int MEASURED_SIZE_MASK
    public static final int MEASURED_STATE_MASK
    public static final int MEASURED_HEIGHT_STATE_SHIFT
    public static final int MEASURED_STATE_TOO_SMALL
    public static final int SCROLL_AXIS_NONE
    public static final int SCROLL_AXIS_HORIZONTAL
    public static final int SCROLL_AXIS_VERTICAL
    public static final int TYPE_TOUCH
    public static final int TYPE_NON_TOUCH
    public static final int SCROLL_INDICATOR_TOP
    public static final int SCROLL_INDICATOR_BOTTOM
    public static final int SCROLL_INDICATOR_LEFT
    public static final int SCROLL_INDICATOR_RIGHT
    public static final int SCROLL_INDICATOR_START
    public static final int SCROLL_INDICATOR_END
    private static java.lang.reflect.Method sDispatchStartTemporaryDetach
    private static java.lang.reflect.Method sDispatchFinishTemporaryDetach
    private static boolean sTempDetachBound
    private static java.lang.reflect.Method sChildrenDrawingOrderMethod
com.google.android.material.shape.ShapePath$PathQuadOperation
androidx.lifecycle.ViewModelProvider$NewInstanceFactory
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams
    public void <init>(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams)
    public void reset()
    public static final int MATCH_CONSTRAINT
    public static final int PARENT_ID
    public static final int UNSET
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int LEFT
    public static final int RIGHT
    public static final int TOP
    public static final int BOTTOM
    public static final int BASELINE
    public static final int START
    public static final int END
    public static final int MATCH_CONSTRAINT_WRAP
    public static final int MATCH_CONSTRAINT_SPREAD
    public static final int MATCH_CONSTRAINT_PERCENT
    public static final int CHAIN_SPREAD
    public static final int CHAIN_SPREAD_INSIDE
    public static final int CHAIN_PACKED
androidx.viewpager2.widget.ViewPager2$3
androidx.fragment.app.FragmentManagerImpl$FragmentTag
    private void <init>()
    public static final int Fragment_id
    public static final int Fragment_name
    public static final int Fragment_tag
androidx.lifecycle.ViewModelProvider
    public void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory)
    private static final java.lang.String DEFAULT_KEY
androidx.vectordrawable.animated.R$string
androidx.core.os.CancellationSignal
androidx.core.app.NotificationCompat$BadgeIconType
android.support.constraint.solver.ArrayLinkedVariables
    boolean hasAtLeastOnePositiveVariable()
    android.support.constraint.solver.SolverVariable getPivotCandidate()
    int sizeInBytes()
    public void display()
    private static final boolean DEBUG
    private static final int NONE
    private static final boolean FULL_NEW_CHECK
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem
androidx.recyclerview.widget.RecyclerView$SmoothScroller
    public void instantScrollToPosition(int)
androidx.loader.app.LoaderManagerImpl
    private androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader)
    public androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public void destroyLoader(int)
    public androidx.loader.content.Loader getLoader(int)
    public boolean hasRunningLoaders()
    static final java.lang.String TAG
androidx.loader.app.LoaderManager
    public static void enableDebugLogging(boolean)
    public abstract androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public abstract androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public abstract void destroyLoader(int)
    public abstract androidx.loader.content.Loader getLoader(int)
    public boolean hasRunningLoaders()
androidx.appcompat.widget.Toolbar$LayoutParams
    public void <init>(int,int,int)
    public void <init>(int)
    static final int CUSTOM
    static final int SYSTEM
    static final int EXPANDED
com.google.android.material.shape.TriangleEdgeTreatment
androidx.transition.Fade
    public void <init>()
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static final java.lang.String PROPNAME_TRANSITION_ALPHA
    private static final java.lang.String LOG_TAG
    public static final int IN
    public static final int OUT
androidx.viewpager2.R$layout
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl
    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
    public boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
    public void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.loader.R$integer
androidx.recyclerview.widget.AsyncListDiffer
androidx.core.graphics.TypefaceCompatApi26Impl
    private static final java.lang.String TAG
    private static final java.lang.String FONT_FAMILY_CLASS
    private static final java.lang.String ADD_FONT_FROM_ASSET_MANAGER_METHOD
    private static final java.lang.String ADD_FONT_FROM_BUFFER_METHOD
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
    private static final java.lang.String FREEZE_METHOD
    private static final java.lang.String ABORT_CREATION_METHOD
    private static final int RESOLVE_BY_FONT_TABLE
androidx.core.view.DragStartHelper$2
android.support.v4.os.IResultReceiver$Stub
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_send
androidx.arch.core.util.Function
androidx.recyclerview.widget.OrientationHelper$1
    public void offsetChild(android.view.View,int)
android.support.v4.app.INotificationSideChannel$Stub$Proxy
androidx.lifecycle.MediatorLiveData
androidx.annotation.RequiresPermission$Write
androidx.core.graphics.drawable.IconCompat
    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int)
    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)
    public static androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)
    public static androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap)
    public static androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int)
    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)
    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)
    private void <init>(int)
    private android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)
    private static android.content.res.Resources getResources(android.content.Context,java.lang.String)
    public static androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle)
    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)
    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)
    private static int getType(android.graphics.drawable.Icon)
    private static android.net.Uri getUri(android.graphics.drawable.Icon)
    static android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)
    public int getType()
    public android.graphics.Bitmap getBitmap()
    public android.net.Uri getUri()
    public androidx.core.graphics.drawable.IconCompat setTint(int)
    public androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList)
    public androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode)
    public android.graphics.drawable.Icon toIcon()
    public void checkResource(android.content.Context)
    public android.graphics.drawable.Drawable loadDrawable(android.content.Context)
    public void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)
    public android.os.Bundle toBundle()
    private static final java.lang.String TAG
    public static final int TYPE_UNKNOWN
    private static final float ADAPTIVE_ICON_INSET_FACTOR
    private static final float DEFAULT_VIEW_PORT_SCALE
    private static final float ICON_DIAMETER_FACTOR
    private static final float BLUR_FACTOR
    private static final float KEY_SHADOW_OFFSET_FACTOR
    private static final int KEY_SHADOW_ALPHA
    private static final int AMBIENT_SHADOW_ALPHA
    private static final java.lang.String EXTRA_TYPE
    private static final java.lang.String EXTRA_OBJ
    private static final java.lang.String EXTRA_INT1
    private static final java.lang.String EXTRA_INT2
    private static final java.lang.String EXTRA_TINT_LIST
    private static final java.lang.String EXTRA_TINT_MODE
com.google.android.material.bottomnavigation.BottomNavigationMenu
androidx.core.content.res.GradientColorInflaterCompat
    private void <init>()
    static android.graphics.Shader createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
    private static final int TILE_MODE_CLAMP
    private static final int TILE_MODE_REPEAT
    private static final int TILE_MODE_MIRROR
androidx.constraintlayout.widget.Group
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.shadow.ShadowDrawableWrapper
androidx.viewpager2.widget.ScrollEventAdapter
    void <init>(androidx.viewpager2.widget.ViewPager2)
    private void resetState()
    private void updateScrollEventValues()
    private void startDrag(boolean)
    private boolean isInAnyDraggingState()
    private void dispatchStateChanged(int)
    private void dispatchSelected(int)
    private void dispatchScrolled(int,float,int)
    private int getPosition()
    public void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int)
    public void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)
    void notifyDataSetChangeHappened()
    void notifyBeginFakeDrag()
    void notifyEndFakeDrag()
    void setOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback)
    boolean isDragging()
    boolean isFakeDragging()
    private androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback mCallback
    private final androidx.viewpager2.widget.ViewPager2 mViewPager
    private final androidx.recyclerview.widget.RecyclerView mRecyclerView
    private final androidx.recyclerview.widget.LinearLayoutManager mLayoutManager
    private int mAdapterState
    private int mScrollState
    private androidx.viewpager2.widget.ScrollEventAdapter$ScrollEventValues mScrollValues
    private int mDragStartPosition
    private int mTarget
    private boolean mDispatchSelected
    private boolean mScrollHappened
    private boolean mDataSetChangeHappened
    private boolean mFakeDragging
    private static final int STATE_IDLE
    private static final int STATE_IN_PROGRESS_MANUAL_DRAG
    private static final int STATE_IN_PROGRESS_SMOOTH_SCROLL
    private static final int STATE_IN_PROGRESS_IMMEDIATE_SCROLL
    private static final int STATE_IN_PROGRESS_FAKE_DRAG
    private static final int NO_POSITION
com.google.android.material.dialog.InsetDialogOnTouchListener
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments
    public int getGranularity()
    public boolean getExtendSelection()
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener
androidx.loader.R$string
androidx.appcompat.app.WindowDecorActionBar
    public void <init>(android.view.View)
    private void ensureTabsExist()
    private void cleanupTabs()
    private void configureTab(androidx.appcompat.app.ActionBar$Tab,int)
    public float getElevation()
    public void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void setCustomView(int)
    public void setDisplayUseLogoEnabled(boolean)
    public void setDisplayShowHomeEnabled(boolean)
    public void setDisplayShowTitleEnabled(boolean)
    public void setDisplayShowCustomEnabled(boolean)
    public void setTitle(int)
    public void setSubtitle(int)
    public void setSelectedNavigationItem(int)
    public void removeAllTabs()
    public void setTitle(java.lang.CharSequence)
    public boolean requestFocus()
    public void setSubtitle(java.lang.CharSequence)
    public void setDisplayOptions(int)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    public android.view.View getCustomView()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getSubtitle()
    public void addTab(androidx.appcompat.app.ActionBar$Tab)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public androidx.appcompat.app.ActionBar$Tab newTab()
    public void removeTab(androidx.appcompat.app.ActionBar$Tab)
    public void removeTabAt(int)
    public void selectTab(androidx.appcompat.app.ActionBar$Tab)
    public androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    public int getHeight()
    public void show()
    public void hide()
    public boolean isHideOnContentScrollEnabled()
    public int getHideOffset()
    public void setHideOffset(int)
    public boolean isShowing()
    public boolean isTitleTruncated()
    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    public void setHomeAsUpIndicator(int)
    public void setHomeActionContentDescription(java.lang.CharSequence)
    public void setHomeActionContentDescription(int)
    public void setCustomView(android.view.View)
    public void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
    public void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
    public int getSelectedNavigationIndex()
    public int getNavigationItemCount()
    public int getTabCount()
    public void setNavigationMode(int)
    public androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    public void setIcon(int)
    public void setIcon(android.graphics.drawable.Drawable)
    public boolean hasIcon()
    public void setLogo(int)
    public void setLogo(android.graphics.drawable.Drawable)
    public boolean hasLogo()
    private androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab
    private static final java.lang.String TAG
    private static final int INVALID_POSITION
    private static final long FADE_OUT_DURATION_MS
    private static final long FADE_IN_DURATION_MS
androidx.customview.view.AbsSavedState
    protected void <init>(android.os.Parcel)
androidx.core.os.LocaleListCompat
com.google.android.material.button.MaterialButton$IconGravity
androidx.transition.Slide$6
androidx.appcompat.app.AppCompatDelegate$NightMode
androidx.core.os.LocaleListPlatformWrapper
com.google.android.material.ripple.RippleUtils
    static final java.lang.String TRANSPARENT_DEFAULT_COLOR_WARNING
androidx.cursoradapter.widget.SimpleCursorAdapter
androidx.core.view.ViewCompat$UnhandledKeyEventManager
    static void registerListeningView(android.view.View)
    static void unregisterListeningView(android.view.View)
androidx.transition.R$style
androidx.core.internal.view.SupportMenuItem
    public abstract boolean requiresActionButton()
    public abstract boolean requiresOverflow()
    public static final int SHOW_AS_ACTION_NEVER
    public static final int SHOW_AS_ACTION_IF_ROOM
    public static final int SHOW_AS_ACTION_ALWAYS
    public static final int SHOW_AS_ACTION_WITH_TEXT
    public static final int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
androidx.core.provider.FontsContractCompat$4$9
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams
    public void <init>(int,int,float)
    public void <init>(android.view.ViewGroup$MarginLayoutParams)
    public void <init>(androidx.appcompat.widget.LinearLayoutCompat$LayoutParams)
androidx.annotation.AnyRes
com.google.android.material.datepicker.MaterialStyledDatePickerDialog
androidx.appcompat.widget.AppCompatToggleButton
    public void <init>(android.content.Context)
androidx.viewpager2.widget.ViewPager2$BasicAccessibilityProvider
androidx.customview.R$layout
android.support.v4.app.INotificationSideChannel$Stub
    public static android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder)
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_notify
    static final int TRANSACTION_cancel
    static final int TRANSACTION_cancelAll
androidx.core.app.JobIntentService$JobServiceEngineImpl
    static final java.lang.String TAG
    static final boolean DEBUG
androidx.vectordrawable.R$attr
androidx.core.app.BundleCompat
com.google.android.material.snackbar.BaseTransientBottomBar$9
com.google.android.material.bottomsheet.BottomSheetDialog$2
androidx.appcompat.view.menu.MenuItemImpl
    java.lang.Runnable getCallback()
    public android.view.MenuItem setCallback(java.lang.Runnable)
    public boolean requiresOverflow()
    private static final java.lang.String TAG
    private static final int SHOW_AS_ACTION_MASK
    private static final int CHECKABLE
    private static final int CHECKED
    private static final int EXCLUSIVE
    private static final int HIDDEN
    private static final int ENABLED
    private static final int IS_ACTION
    static final int NO_ICON
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask
com.google.android.material.tabs.TabLayoutMediator$TabConfigurationStrategy
androidx.loader.content.CursorLoader
androidx.core.app.NavUtils
    public static void navigateUpFromSameTask(android.app.Activity)
    public static android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class)
    private void <init>()
    private static final java.lang.String TAG
    public static final java.lang.String PARENT_ACTIVITY
androidx.transition.GhostViewHolder
androidx.recyclerview.widget.SortedList$Callback
androidx.core.graphics.ColorUtils
    private void <init>()
    public static android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)
    public static double calculateLuminance(int)
    public static double calculateContrast(int,int)
    public static int calculateMinimumAlpha(int,int,float)
    public static void RGBToHSL(int,int,int,float[])
    public static void colorToHSL(int,float[])
    public static int HSLToColor(float[])
    public static void colorToLAB(int,double[])
    public static void RGBToLAB(int,int,int,double[])
    public static void colorToXYZ(int,double[])
    public static void RGBToXYZ(int,int,int,double[])
    public static void XYZToLAB(double,double,double,double[])
    public static void LABToXYZ(double,double,double,double[])
    public static int XYZToColor(double,double,double)
    public static int LABToColor(double,double,double)
    public static double distanceEuclidean(double[],double[])
    private static float constrain(float,float,float)
    private static int constrain(int,int,int)
    private static double pivotXyzComponent(double)
    public static int blendARGB(int,int,float)
    public static void blendHSL(float[],float[],float,float[])
    public static void blendLAB(double[],double[],double,double[])
    static float circularInterpolate(float,float,float)
    private static double[] getTempDouble3Array()
    private static final double XYZ_WHITE_REFERENCE_X
    private static final double XYZ_WHITE_REFERENCE_Y
    private static final double XYZ_WHITE_REFERENCE_Z
    private static final double XYZ_EPSILON
    private static final double XYZ_KAPPA
    private static final int MIN_ALPHA_SEARCH_MAX_ITERATIONS
    private static final int MIN_ALPHA_SEARCH_PRECISION
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener
androidx.fragment.app.FragmentManager$BackStackEntry
    public abstract int getId()
    public abstract java.lang.String getName()
    public abstract int getBreadCrumbTitleRes()
    public abstract int getBreadCrumbShortTitleRes()
    public abstract java.lang.CharSequence getBreadCrumbTitle()
    public abstract java.lang.CharSequence getBreadCrumbShortTitle()
androidx.drawerlayout.R
androidx.constraintlayout.widget.Placeholder
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
    private void init(android.util.AttributeSet)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph
    int size()
androidx.vectordrawable.R$drawable
androidx.core.view.DragStartHelper
androidx.core.content.res.ResourcesCompat
    public static android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
    public static int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static float getFloat(android.content.res.Resources,int)
    private void <init>()
    private static final java.lang.String TAG
androidx.viewpager2.R$string
com.google.android.material.datepicker.MaterialDatePicker$1
com.google.android.material.internal.ViewUtils$2
androidx.versionedparcelable.VersionedParcel
    private void writeCollection(java.util.Collection,int)
    private void writeCollection(java.util.Collection)
    private int getType(java.lang.Object)
    private void writeSerializable(java.io.Serializable)
    private int readExceptionCode()
    private java.lang.Exception readException(int,java.lang.String)
    protected static java.lang.Throwable getRootCause(java.lang.Throwable)
    private java.lang.Exception createException(int,java.lang.String)
    private java.util.Collection readCollection(java.util.Collection)
    protected abstract void writeByteArray(byte[],int,int)
    protected abstract void writeLong(long)
    protected abstract void writeFloat(float)
    protected abstract void writeDouble(double)
    protected abstract void writeStrongBinder(android.os.IBinder)
    protected abstract void writeStrongInterface(android.os.IInterface)
    protected abstract void writeBundle(android.os.Bundle)
    protected abstract long readLong()
    protected abstract float readFloat()
    protected abstract double readDouble()
    protected abstract android.os.IBinder readStrongBinder()
    protected abstract android.os.Bundle readBundle()
    public void writeStrongInterface(android.os.IInterface,int)
    public void writeBundle(android.os.Bundle,int)
    public void writeByteArray(byte[],int,int,int)
    public void writeLong(long,int)
    public void writeFloat(float,int)
    public void writeDouble(double,int)
    public void writeStrongBinder(android.os.IBinder,int)
    public long readLong(long,int)
    public float readFloat(float,int)
    public double readDouble(double,int)
    public android.os.IBinder readStrongBinder(android.os.IBinder,int)
    public android.os.Bundle readBundle(android.os.Bundle,int)
    public void writeByte(byte,int)
    public void writeSize(android.util.Size,int)
    public void writeSizeF(android.util.SizeF,int)
    public void writeSparseBooleanArray(android.util.SparseBooleanArray,int)
    public void writeBooleanArray(boolean[],int)
    protected void writeBooleanArray(boolean[])
    public boolean[] readBooleanArray(boolean[],int)
    protected boolean[] readBooleanArray()
    public void writeCharArray(char[],int)
    public char[] readCharArray(char[],int)
    public void writeIntArray(int[],int)
    protected void writeIntArray(int[])
    public int[] readIntArray(int[],int)
    protected int[] readIntArray()
    public void writeLongArray(long[],int)
    protected void writeLongArray(long[])
    public long[] readLongArray(long[],int)
    protected long[] readLongArray()
    public void writeFloatArray(float[],int)
    protected void writeFloatArray(float[])
    public float[] readFloatArray(float[],int)
    protected float[] readFloatArray()
    public void writeDoubleArray(double[],int)
    protected void writeDoubleArray(double[])
    public double[] readDoubleArray(double[],int)
    protected double[] readDoubleArray()
    public void writeSet(java.util.Set,int)
    public void writeList(java.util.List,int)
    public void writeMap(java.util.Map,int)
    public void writeArray(java.lang.Object[],int)
    protected void writeArray(java.lang.Object[])
    public void writeSerializable(java.io.Serializable,int)
    public void writeException(java.lang.Exception,int)
    protected void writeNoException()
    public java.lang.Exception readException(java.lang.Exception,int)
    public byte readByte(byte,int)
    public android.util.Size readSize(android.util.Size,int)
    public android.util.SizeF readSizeF(android.util.SizeF,int)
    public android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int)
    public java.util.Set readSet(java.util.Set,int)
    public java.util.List readList(java.util.List,int)
    public java.util.Map readMap(java.util.Map,int)
    public java.lang.Object[] readArray(java.lang.Object[],int)
    protected java.lang.Object[] readArray(java.lang.Object[])
    protected java.io.Serializable readSerializable()
    private static final java.lang.String TAG
    private static final int EX_SECURITY
    private static final int EX_BAD_PARCELABLE
    private static final int EX_ILLEGAL_ARGUMENT
    private static final int EX_NULL_POINTER
    private static final int EX_ILLEGAL_STATE
    private static final int EX_NETWORK_MAIN_THREAD
    private static final int EX_UNSUPPORTED_OPERATION
    private static final int EX_PARCELABLE
    private static final int TYPE_VERSIONED_PARCELABLE
    private static final int TYPE_PARCELABLE
    private static final int TYPE_SERIALIZABLE
    private static final int TYPE_STRING
    private static final int TYPE_BINDER
    private static final int TYPE_INTEGER
    private static final int TYPE_FLOAT
androidx.transition.ChangeTransform$1
androidx.arch.core.executor.TaskExecutor
    public void executeOnMainThread(java.lang.Runnable)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper
androidx.core.text.TextDirectionHeuristicCompat
    public abstract boolean isRtl(char[],int,int)
androidx.core.graphics.PathSegment
androidx.core.app.SharedElementCallback
    public void <init>()
    private static android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable)
    public void onRejectSharedElements(java.util.List)
    public android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
    public android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)
    public void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener)
    private android.graphics.Matrix mTempMatrix
    private static final int MAX_IMAGE_SIZE
    private static final java.lang.String BUNDLE_SNAPSHOT_BITMAP
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX
androidx.core.graphics.drawable.IconCompat$IconType
androidx.vectordrawable.animated.R$layout
com.google.android.material.snackbar.BaseTransientBottomBar$AnimationMode
androidx.recyclerview.widget.SortedListAdapterCallback
androidx.core.graphics.drawable.RoundedBitmapDrawable
androidx.transition.Styleable$ArcMotion
com.google.android.material.tabs.TabLayout$TabIndicatorGravity
androidx.constraintlayout.widget.Constraints
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    private void init(android.util.AttributeSet)
    public static final java.lang.String TAG
android.support.constraint.Barrier
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public boolean allowsGoneWidget()
    public static final int LEFT
    public static final int TOP
    public static final int RIGHT
    public static final int BOTTOM
    public static final int START
    public static final int END
androidx.coordinatorlayout.widget.CoordinatorLayout$DispatchChangeEvent
androidx.viewpager2.widget.ViewPager2$ScrollState
com.google.android.material.shape.AbsoluteCornerSize
    public float getCornerSize()
com.google.android.material.floatingactionbutton.BorderDrawable$1
androidx.recyclerview.widget.PagerSnapHelper
    public void <init>()
    private boolean isForwardFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
    private boolean isReverseLayout(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    private int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper)
    private android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper)
    private androidx.recyclerview.widget.OrientationHelper getOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    private androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    private androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View)
    public int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
    protected androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    private androidx.recyclerview.widget.OrientationHelper mVerticalHelper
    private androidx.recyclerview.widget.OrientationHelper mHorizontalHelper
    private static final int MAX_SCROLL_ON_FLING_DURATION
androidx.transition.ViewUtilsApi21
    public void setAnimationMatrix(android.view.View,android.graphics.Matrix)
androidx.transition.R$drawable
androidx.transition.Styleable$ChangeTransform
com.google.android.material.snackbar.Snackbar
com.google.android.material.R$color
    private void <init>()
androidx.core.database.sqlite.SQLiteCursorCompat
androidx.core.view.PointerIconCompat
    public static androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float)
    public static androidx.core.view.PointerIconCompat load(android.content.res.Resources,int)
    public static final int TYPE_NULL
    public static final int TYPE_ARROW
    public static final int TYPE_CONTEXT_MENU
    public static final int TYPE_HAND
    public static final int TYPE_HELP
    public static final int TYPE_WAIT
    public static final int TYPE_CELL
    public static final int TYPE_CROSSHAIR
    public static final int TYPE_TEXT
    public static final int TYPE_VERTICAL_TEXT
    public static final int TYPE_ALIAS
    public static final int TYPE_COPY
    public static final int TYPE_NO_DROP
    public static final int TYPE_ALL_SCROLL
    public static final int TYPE_HORIZONTAL_DOUBLE_ARROW
    public static final int TYPE_VERTICAL_DOUBLE_ARROW
    public static final int TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW
    public static final int TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW
    public static final int TYPE_ZOOM_IN
    public static final int TYPE_ZOOM_OUT
    public static final int TYPE_GRAB
    public static final int TYPE_GRABBING
    public static final int TYPE_DEFAULT
androidx.appcompat.view.SupportMenuInflater$MenuState
    private static final int defaultGroupId
    private static final int defaultItemId
    private static final int defaultItemCategory
    private static final int defaultItemOrder
    private static final int defaultItemCheckable
    private static final boolean defaultItemChecked
    private static final boolean defaultItemVisible
    private static final boolean defaultItemEnabled
androidx.fragment.app.ListFragment$2
androidx.annotation.ColorInt
androidx.recyclerview.widget.GridLayoutManager$LayoutParams
    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    public static final int INVALID_SPAN_ID
androidx.transition.Styleable$Fade
androidx.appcompat.app.AppCompatDialogFragment
com.qy.R$bool
androidx.core.net.TrafficStatsCompat
androidx.core.app.ActivityOptionsCompat
androidx.cardview.R$style
com.google.android.material.internal.ContextUtils
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulMaterialShapeDrawable
androidx.transition.RectEvaluator
    void <init>(android.graphics.Rect)
com.google.android.material.tabs.TabLayout$TabView
    private void removeBadge()
    static synthetic com.google.android.material.badge.BadgeDrawable access$600(com.google.android.material.tabs.TabLayout$TabView)
    static synthetic void access$700(com.google.android.material.tabs.TabLayout$TabView)
    static synthetic com.google.android.material.badge.BadgeDrawable access$800(com.google.android.material.tabs.TabLayout$TabView)
    static synthetic int access$1200(com.google.android.material.tabs.TabLayout$TabView)
androidx.activity.ImmLeaksCleaner
    private static final int NOT_INITIALIAZED
    private static final int INIT_SUCCESS
    private static final int INIT_FAILED
androidx.appcompat.widget.ScrollingTabContainerView$TabView
    private static final java.lang.String ACCESSIBILITY_CLASS_NAME
androidx.recyclerview.widget.AsyncListUtil$1
androidx.core.app.NotificationCompat$Action$Extender
com.google.android.material.circularreveal.CircularRevealLinearLayout
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void actualDraw(android.graphics.Canvas)
    public boolean actualIsOpaque()
com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback
com.google.android.material.shape.ShapePath
    public void <init>(float,float)
    public void quadToPoint(float,float,float,float)
    private static final float ANGLE_UP
    protected static final float ANGLE_LEFT
com.google.android.material.circularreveal.CircularRevealHelper$Strategy
com.google.android.material.bottomnavigation.LabelVisibilityMode
androidx.core.text.PrecomputedTextCompat
    public static androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)
    private void <init>(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,int[])
    private void <init>(android.text.PrecomputedText,androidx.core.text.PrecomputedTextCompat$Params)
    public static java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)
    public android.text.PrecomputedText getPrecomputedText()
    public int getParagraphCount()
    public int getParagraphStart(int)
    public int getParagraphEnd(int)
    private final int[] mParagraphEnds
    private final android.text.PrecomputedText mWrapped
    private static final char LINE_FEED
androidx.appcompat.app.ActionBar$TabListener
com.google.android.material.snackbar.BaseTransientBottomBar$12
com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker
    private void <init>(com.google.android.material.button.MaterialButtonToggleGroup)
    synthetic void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1)
    public void onCheckedChanged(com.google.android.material.button.MaterialButton,boolean)
    final synthetic com.google.android.material.button.MaterialButtonToggleGroup this$0
com.google.android.material.resources.TextAppearance
    private static final java.lang.String TAG
    private static final int TYPEFACE_SANS
    private static final int TYPEFACE_SERIF
    private static final int TYPEFACE_MONOSPACE
com.google.android.material.tabs.TabLayout$SlidingTabIndicator
    void <init>(com.google.android.material.tabs.TabLayout,android.content.Context)
    private void updateIndicatorPosition()
    private void calculateTabViewContentBounds(com.google.android.material.tabs.TabLayout$TabView,android.graphics.RectF)
    float getIndicatorPosition()
    public void onRtlPropertiesChanged(int)
    protected void onMeasure(int,int)
    protected void onLayout(boolean,int,int,int,int)
    void setIndicatorPosition(int,int)
    public void draw(android.graphics.Canvas)
    private int selectedIndicatorHeight
    private final android.graphics.Paint selectedIndicatorPaint
    private final android.graphics.drawable.GradientDrawable defaultSelectionIndicator
    int selectedPosition
    float selectionOffset
    private int layoutDirection
    private int indicatorLeft
    private int indicatorRight
    private android.animation.ValueAnimator indicatorAnimator
    final synthetic com.google.android.material.tabs.TabLayout this$0
androidx.appcompat.view.menu.BaseMenuPresenter
    public boolean flagActionItems()
androidx.appcompat.widget.AbsActionBarView
    public void animateToVisibility(int)
    public boolean showOverflowMenu()
    public void postShowOverflowMenu()
    public boolean hideOverflowMenu()
    public boolean isOverflowMenuShowing()
    public boolean isOverflowMenuShowPending()
    public boolean isOverflowReserved()
    public boolean canShowOverflowMenu()
    public void dismissPopupMenus()
    private static final int FADE_DURATION
androidx.annotation.ColorLong
androidx.drawerlayout.R$style
androidx.transition.Slide$2
androidx.core.app.NotificationCompat$StreamType
com.google.android.material.R$drawable
    private void <init>()
androidx.core.view.LayoutInflaterCompat
    private void <init>()
    public static void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory)
    public static androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater)
    private static final java.lang.String TAG
androidx.appcompat.widget.SwitchCompat
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    private void setSwitchTypefaceByIndex(int,int)
    public void setSwitchTextAppearance(android.content.Context,int)
    public void setSwitchTypeface(android.graphics.Typeface,int)
    private final androidx.appcompat.widget.AppCompatTextHelper mTextHelper
    private static final int THUMB_ANIMATION_DURATION
    private static final int TOUCH_MODE_IDLE
    private static final int TOUCH_MODE_DOWN
    private static final int TOUCH_MODE_DRAGGING
    private static final java.lang.String ACCESSIBILITY_EVENT_CLASS_NAME
    private static final int SANS
    private static final int SERIF
    private static final int MONOSPACE
androidx.appcompat.widget.ActivityChooserView$2
androidx.core.view.MotionEventCompat
    public static int getActionMasked(android.view.MotionEvent)
    public static int getActionIndex(android.view.MotionEvent)
    public static int findPointerIndex(android.view.MotionEvent,int)
    public static int getPointerId(android.view.MotionEvent,int)
    public static float getX(android.view.MotionEvent,int)
    public static float getY(android.view.MotionEvent,int)
    public static int getPointerCount(android.view.MotionEvent)
    public static int getSource(android.view.MotionEvent)
    public static float getAxisValue(android.view.MotionEvent,int)
    public static float getAxisValue(android.view.MotionEvent,int,int)
    public static int getButtonState(android.view.MotionEvent)
    private void <init>()
    public static final int ACTION_MASK
    public static final int ACTION_POINTER_DOWN
    public static final int ACTION_POINTER_UP
    public static final int ACTION_HOVER_MOVE
    public static final int ACTION_SCROLL
    public static final int ACTION_POINTER_INDEX_MASK
    public static final int ACTION_POINTER_INDEX_SHIFT
    public static final int ACTION_HOVER_ENTER
    public static final int ACTION_HOVER_EXIT
    public static final int AXIS_X
    public static final int AXIS_Y
    public static final int AXIS_PRESSURE
    public static final int AXIS_SIZE
    public static final int AXIS_TOUCH_MAJOR
    public static final int AXIS_TOUCH_MINOR
    public static final int AXIS_TOOL_MAJOR
    public static final int AXIS_TOOL_MINOR
    public static final int AXIS_ORIENTATION
    public static final int AXIS_VSCROLL
    public static final int AXIS_HSCROLL
    public static final int AXIS_Z
    public static final int AXIS_RX
    public static final int AXIS_RY
    public static final int AXIS_RZ
    public static final int AXIS_HAT_X
    public static final int AXIS_HAT_Y
    public static final int AXIS_LTRIGGER
    public static final int AXIS_RTRIGGER
    public static final int AXIS_THROTTLE
    public static final int AXIS_RUDDER
    public static final int AXIS_WHEEL
    public static final int AXIS_GAS
    public static final int AXIS_BRAKE
    public static final int AXIS_DISTANCE
    public static final int AXIS_TILT
    public static final int AXIS_SCROLL
    public static final int AXIS_RELATIVE_X
    public static final int AXIS_RELATIVE_Y
    public static final int AXIS_GENERIC_1
    public static final int AXIS_GENERIC_2
    public static final int AXIS_GENERIC_3
    public static final int AXIS_GENERIC_4
    public static final int AXIS_GENERIC_5
    public static final int AXIS_GENERIC_6
    public static final int AXIS_GENERIC_7
    public static final int AXIS_GENERIC_8
    public static final int AXIS_GENERIC_9
    public static final int AXIS_GENERIC_10
    public static final int AXIS_GENERIC_11
    public static final int AXIS_GENERIC_12
    public static final int AXIS_GENERIC_13
    public static final int AXIS_GENERIC_14
    public static final int AXIS_GENERIC_15
    public static final int AXIS_GENERIC_16
    public static final int BUTTON_PRIMARY
androidx.core.view.NestedScrollingChildHelper
    public void onDetachedFromWindow()
    public void onStopNestedScroll(android.view.View)
androidx.vectordrawable.animated.R$id
androidx.core.view.DragAndDropPermissionsCompat
androidx.appcompat.view.StandaloneActionMode
    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
    public boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
    public void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
    public boolean isUiFocusable()
androidx.transition.GhostViewUtils
androidx.transition.Styleable$PatternPathMotion
androidx.core.os.MessageCompat
com.google.android.material.internal.CollapsingTextHelper
    public void setCollapsedTextSize(float)
    public float getCollapsedTextSize()
    public float getExpandedTextSize()
    public android.content.res.ColorStateList getExpandedTextColor()
    private static final boolean DEBUG_DRAW
androidx.customview.R$dimen
androidx.core.provider.FontsContractCompat$4$5
com.google.android.material.transformation.ExpandableBehavior
    public static com.google.android.material.transformation.ExpandableBehavior from(android.view.View,java.lang.Class)
    private static final int STATE_UNINITIALIZED
    private static final int STATE_EXPANDED
    private static final int STATE_COLLAPSED
androidx.appcompat.widget.AppCompatRadioButton
    public void <init>(android.content.Context)
androidx.core.content.ContextCompat$LegacyServiceMapHolder
androidx.core.graphics.drawable.WrappedDrawable
    public abstract android.graphics.drawable.Drawable getWrappedDrawable()
    public abstract void setWrappedDrawable(android.graphics.drawable.Drawable)
com.google.android.material.navigation.NavigationView
    public final com.google.android.material.internal.NavigationMenu menu
    public final com.google.android.material.internal.NavigationMenuPresenter presenter
    public com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener listener
    public static final int[] CHECKED_STATE_SET
    public static final int[] DISABLED_STATE_SET
androidx.appcompat.widget.AppCompatBackgroundHelper
    public void onSetBackgroundDrawable(android.graphics.drawable.Drawable)
    public final boolean shouldApplyFrameworkTintUsingColorFilter()
    public final boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
androidx.lifecycle.ClassesInfoCache
    public boolean hasLifecycleMethods(java.lang.Class)
androidx.appcompat.app.AppCompatDelegateImpl
    public void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback)
    public void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)
    public void attachBaseContext(android.content.Context)
    public void onPostCreate(android.os.Bundle)
    public androidx.appcompat.app.ActionBar getSupportActionBar()
    public final androidx.appcompat.app.ActionBar peekSupportActionBar()
    public android.view.MenuInflater getMenuInflater()
    public android.view.View findViewById(int)
    public void onConfigurationChanged(android.content.res.Configuration)
    public void onStart()
    public void onPostResume()
    public void onSaveInstanceState(android.os.Bundle)
    public void setTheme(int)
    public void onSubDecorInstalled(android.view.ViewGroup)
    public final java.lang.CharSequence getTitle()
    public androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback)
    public boolean isHandleNativeActionModesEnabled()
    public boolean onBackPressed()
    public boolean onKeyShortcut(int,android.view.KeyEvent)
    public boolean onKeyUp(int,android.view.KeyEvent)
    public boolean onKeyDown(int,android.view.KeyEvent)
    public android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public void closePanel(int)
    public void dismissPopups()
    public int getLocalNightMode()
    public int mapNightMode(int)
    public final void cleanupAutoManagers()
    public final android.view.ViewGroup createSubDecor()
    public final void applyFixedSizeWindow()
    public final boolean shouldInheritContext(android.view.ViewParent)
    public final androidx.appcompat.app.AppCompatActivity tryUnwrapContext()
    public final boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    public final void reopenMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
    public final boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    public final boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    public final boolean onKeyDownPanel(int,android.view.KeyEvent)
    public final boolean onKeyUpPanel(int,android.view.KeyEvent)
    public final int sanitizeWindowFeatureId(int)
    public final int calculateNightMode()
    public final boolean updateForNightMode(int,boolean)
    public final void updateResourcesConfigurationForNightMode(int,boolean)
    public final androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager()
    public final boolean isActivityManifestHandlingUiMode()
androidx.constraintlayout.widget.ConstraintLayout
    public final void updateHierarchy()
    public final void setChildrenConstraints()
    public final void internalMeasureChildren(int,int)
    public final void internalMeasureDimensions(int,int)
    public final void setSelfDimensionBehaviour(int,int)
    public int mLastMeasureWidthSize
    public int mLastMeasureHeightSize
    public int mLastMeasureWidthMode
    public int mLastMeasureHeightMode
    public androidx.constraintlayout.solver.Metrics mMetrics
androidx.fragment.app.FragmentTransition
    public static androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl()
    public static androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int)
    public static void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap)
    public static void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList)
    public static void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap)
    public static void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
    public static java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
    public static java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
    public static java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String)
    public static void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public static void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
    public static void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
    public static androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int)
androidx.appcompat.graphics.drawable.DrawableContainer$1
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener
    public abstract boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
    public abstract void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
    public abstract void onRequestDisallowInterceptTouchEvent(boolean)
com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams
    public void setParallaxMultiplier(float)
com.google.android.material.textfield.ClearTextEndIconDelegate
    public static boolean hasText(android.text.Editable)
    public static synthetic boolean access$000(android.text.Editable)
    public static synthetic android.animation.ValueAnimator access$100(com.google.android.material.textfield.ClearTextEndIconDelegate)
    public static synthetic android.animation.AnimatorSet access$200(com.google.android.material.textfield.ClearTextEndIconDelegate)
    public static synthetic android.text.TextWatcher access$300(com.google.android.material.textfield.ClearTextEndIconDelegate)
    public final void initAnimators()
    public final android.animation.ValueAnimator getScaleAnimator()
androidx.appcompat.widget.AppCompatSeekBar
    public void <init>(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl
    public void setShadowPadding(int,int,int,int)
com.google.android.material.circularreveal.CircularRevealRelativeLayout
    public final com.google.android.material.circularreveal.CircularRevealHelper helper
com.qy.MaxMapWindow
    public static void updateHeroView(boolean)
    public static void setLayoutXY(android.widget.LinearLayout,int,int)
    public void showFloatWindow()
    public android.view.View getMaxMapView()
    public final void initFloatWindow()
    public static android.widget.ImageView hero1View
    public static android.widget.ImageView hero2View
    public static android.widget.ImageView hero3View
    public static android.widget.ImageView hero4View
    public static android.widget.ImageView hero5View
androidx.appcompat.widget.ActivityChooserView$Callbacks
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback
com.google.android.material.datepicker.CalendarConstraints
    public void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator)
androidx.core.view.MarginLayoutParamsCompat
androidx.core.view.ActionProvider$VisibilityListener
    public abstract void onActionProviderVisibilityChanged(boolean)
androidx.core.widget.NestedScrollView$OnScrollChangeListener
    public abstract void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
androidx.cardview.widget.CardViewBaseImpl
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath
com.google.android.material.bottomnavigation.BottomNavigationMenuView
    public final boolean isShifting(int,int)
    public final boolean isValidId(int)
    public com.google.android.material.bottomnavigation.BottomNavigationPresenter presenter
    public static final int[] CHECKED_STATE_SET
    public static final int[] DISABLED_STATE_SET
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat
com.google.android.material.animation.MatrixEvaluator
    public android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)
androidx.fragment.app.Fragment$SavedState$1
    public androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel)
    public androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.fragment.app.Fragment$SavedState[] newArray(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer
androidx.fragment.app.FragmentManagerImpl$5
    public final synthetic androidx.fragment.app.FragmentManagerImpl this$0
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry
    public androidx.core.provider.FontRequest getRequest()
    public int getFetchStrategy()
    public int getTimeout()
androidx.transition.ViewUtils
    public static void setTransitionAlpha(android.view.View,float)
    public static void saveNonTransitionAlpha(android.view.View)
    public static void clearNonTransitionAlpha(android.view.View)
    public static void setTransitionVisibility(android.view.View,int)
    public static void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)
    public static void transformMatrixToLocal(android.view.View,android.graphics.Matrix)
    public static final android.util.Property CLIP_BOUNDS
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int)
com.google.android.material.bottomappbar.BottomAppBar$Behavior
    public static synthetic java.lang.ref.WeakReference access$1300(com.google.android.material.bottomappbar.BottomAppBar$Behavior)
    public static synthetic android.graphics.Rect access$1400(com.google.android.material.bottomappbar.BottomAppBar$Behavior)
    public static synthetic int access$1500(com.google.android.material.bottomappbar.BottomAppBar$Behavior)
com.google.android.material.animation.AnimatorSetCompat
com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener
    public void onTabSelected(com.google.android.material.tabs.TabLayout$Tab)
com.google.android.material.datepicker.RangeDateSelector
    public final boolean isValidRange(long,long)
    public final java.lang.String invalidRangeEndError
    public java.lang.Long proposedTextStart
    public java.lang.Long proposedTextEnd
androidx.cardview.widget.CardViewApi21Impl
    public void updatePadding(androidx.cardview.widget.CardViewDelegate)
com.google.android.material.chip.ChipDrawable
    public static com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)
    public static boolean isStateful(com.google.android.material.resources.TextAppearance)
    public static boolean hasState(int[],int)
    public boolean getUseCompatRipple()
    public void getCloseIconTouchBounds(android.graphics.RectF)
    public android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF)
    public boolean isCloseIconStateful()
    public int[] getCloseIconState()
    public android.content.res.ColorStateList getChipBackgroundColor()
    public void setChipBackgroundColorResource(int)
    public float getChipMinHeight()
    public void setChipMinHeightResource(int)
    public void setChipCornerRadiusResource(int)
    public android.content.res.ColorStateList getChipStrokeColor()
    public void setChipStrokeColorResource(int)
    public float getChipStrokeWidth()
    public void setChipStrokeWidthResource(int)
    public android.content.res.ColorStateList getRippleColor()
    public void setRippleColorResource(int)
    public java.lang.CharSequence getText()
    public com.google.android.material.resources.TextAppearance getTextAppearance()
    public android.text.TextUtils$TruncateAt getEllipsize()
    public void setEllipsize(android.text.TextUtils$TruncateAt)
    public void setChipIconVisible(int)
    public android.graphics.drawable.Drawable getChipIcon()
    public void setChipIconResource(int)
    public android.content.res.ColorStateList getChipIconTint()
    public void setChipIconTintResource(int)
    public float getChipIconSize()
    public void setChipIconSizeResource(int)
    public boolean isCloseIconVisible()
    public void setCloseIconResource(int)
    public android.content.res.ColorStateList getCloseIconTint()
    public void setCloseIconTintResource(int)
    public float getCloseIconSize()
    public void setCloseIconSizeResource(int)
    public void setCloseIconContentDescription(java.lang.CharSequence)
    public java.lang.CharSequence getCloseIconContentDescription()
    public boolean isCheckable()
    public void setCheckableResource(int)
    public void setCheckedIconVisible(int)
    public android.graphics.drawable.Drawable getCheckedIcon()
    public void setCheckedIconResource(int)
    public com.google.android.material.animation.MotionSpec getShowMotionSpec()
    public void setShowMotionSpecResource(int)
    public void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
    public com.google.android.material.animation.MotionSpec getHideMotionSpec()
    public void setHideMotionSpecResource(int)
    public void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
    public float getChipStartPadding()
    public void setChipStartPaddingResource(int)
    public float getIconStartPadding()
    public void setIconStartPaddingResource(int)
    public float getIconEndPadding()
    public void setIconEndPaddingResource(int)
    public float getTextStartPadding()
    public void setTextStartPaddingResource(int)
    public float getTextEndPadding()
    public void setTextEndPaddingResource(int)
    public float getCloseIconStartPadding()
    public void setCloseIconStartPaddingResource(int)
    public float getCloseIconEndPadding()
    public void setCloseIconEndPaddingResource(int)
    public float getChipEndPadding()
    public void setChipEndPaddingResource(int)
    public void setMaxWidth(int)
    public boolean shouldDrawText()
    public void setShouldDrawText(boolean)
    public final void loadFromAttributes(android.util.AttributeSet,int,int)
    public final boolean canShowCheckedIcon()
    public final void drawChipSurface(android.graphics.Canvas,android.graphics.Rect)
    public final void drawChipBackground(android.graphics.Canvas,android.graphics.Rect)
    public final void drawChipStroke(android.graphics.Canvas,android.graphics.Rect)
    public final void drawCompatRipple(android.graphics.Canvas,android.graphics.Rect)
    public final void drawChipIcon(android.graphics.Canvas,android.graphics.Rect)
    public final void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect)
    public final void drawText(android.graphics.Canvas,android.graphics.Rect)
    public final void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect)
    public final void drawDebug(android.graphics.Canvas,android.graphics.Rect)
    public final float calculateTextCenterFromBaseline()
    public final void calculateTextBounds(android.graphics.Rect,android.graphics.RectF)
    public final void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF)
    public final android.graphics.ColorFilter getTintColorFilter()
    public final void updateCompatRippleColor()
    public final void setChipSurfaceColor(android.content.res.ColorStateList)
    public final void updateFrameworkCloseIconRipple()
androidx.transition.ChangeBounds$4
    public void set(android.view.View,android.graphics.PointF)
    public android.graphics.PointF get(android.view.View)
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks
    public abstract android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)
    public abstract boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)
    public abstract android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)
    public abstract boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
    public abstract android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)
androidx.transition.PathProperty
androidx.collection.SimpleArrayMap
    public static int binarySearchHashes(int[],int,int)
    public void <init>(androidx.collection.SimpleArrayMap)
    public void putAll(androidx.collection.SimpleArrayMap)
com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout
    public final com.google.android.material.circularreveal.CircularRevealHelper helper
androidx.core.graphics.TypefaceCompat
    public static android.graphics.Typeface findFromCache(android.content.res.Resources,int,int)
    public static android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
    public static android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)
androidx.core.text.BidiFormatter$DirectionalityEstimator
    public int getEntryDir()
    public int getExitDir()
    public byte dirTypeForward()
    public final byte skipTagForward()
    public final byte skipTagBackward()
    public final byte skipEntityForward()
    public final byte skipEntityBackward()
androidx.constraintlayout.solver.SolverVariable
    public static void increaseErrorId()
    static void <clinit>()
    public void setType(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String)
    public static int uniqueSlackId
    public static int uniqueUnrestrictedId
    public static int uniqueConstantId
    public static int uniqueId
com.google.android.material.internal.CheckableImageButton$SavedState
    public final void readFromParcel(android.os.Parcel)
androidx.viewpager2.widget.CompositeOnPageChangeCallback
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate
    public androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View)
androidx.core.graphics.TypefaceCompatUtil
com.google.android.material.resources.MaterialAttributes
androidx.appcompat.app.AppCompatDelegateImpl$1
    public final boolean shouldWrapException(java.lang.Throwable)
androidx.appcompat.app.ResourcesFlusher
com.google.android.material.appbar.CollapsingToolbarLayout
    public final boolean isToolbarChild(android.view.View)
    public final android.view.View findDirectChild(android.view.View)
    public final void animateScrim(int)
    public final void updateContentDescriptionFromTitle()
androidx.appcompat.widget.AppCompatSpinner$SavedState$1
    public androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int)
androidx.recyclerview.widget.OrientationHelper
    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public static androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public static androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public void onLayoutComplete()
com.google.android.material.shape.ShapeAppearanceModel
    public static com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,int)
    public static com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,com.google.android.material.shape.CornerSize)
    public static com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,int)
    public void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    static void <clinit>()
    public com.google.android.material.shape.CornerTreatment getTopLeftCorner()
    public com.google.android.material.shape.CornerTreatment getTopRightCorner()
    public com.google.android.material.shape.CornerTreatment getBottomRightCorner()
    public com.google.android.material.shape.CornerTreatment getBottomLeftCorner()
    public com.google.android.material.shape.CornerSize getTopLeftCornerSize()
    public com.google.android.material.shape.CornerSize getTopRightCornerSize()
    public com.google.android.material.shape.CornerSize getBottomRightCornerSize()
    public com.google.android.material.shape.CornerSize getBottomLeftCornerSize()
    public com.google.android.material.shape.EdgeTreatment getLeftEdge()
    public com.google.android.material.shape.EdgeTreatment getRightEdge()
    public com.google.android.material.shape.EdgeTreatment getBottomEdge()
    public static final com.google.android.material.shape.CornerSize PILL
com.google.android.material.internal.ThemeEnforcement
    public static varargs androidx.appcompat.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])
    public static varargs boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[])
    public static void checkAppCompatTheme(android.content.Context)
    public static void checkMaterialTheme(android.content.Context)
    public static boolean isTheme(android.content.Context,int[])
    public static int obtainAndroidThemeOverlayId(android.content.Context,android.util.AttributeSet)
    public static int obtainMaterialThemeOverlayId(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector
    public void doBeforeTextChanged(android.widget.AutoCompleteTextView)
    public void doAfterTextChanged(android.widget.AutoCompleteTextView)
    public void ensureImeVisible(android.widget.AutoCompleteTextView,boolean)
androidx.cardview.widget.RoundRectDrawableWithShadow$RoundRectHelper
com.google.android.material.appbar.AppBarLayout$2
    public final synthetic com.google.android.material.appbar.AppBarLayout this$0
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator
androidx.appcompat.app.AlertController$2
    public void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
    public void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
    public final synthetic androidx.appcompat.app.AlertController this$0
com.qy.MenuWindow
    public final void initFloatWindow(java.lang.Process)
    public boolean isThreadRun
androidx.core.view.accessibility.AccessibilityEventCompat
com.google.android.material.button.MaterialButton$OnPressedChangeListener
    public abstract void onPressedChanged(com.google.android.material.button.MaterialButton,boolean)
com.google.android.material.floatingactionbutton.BorderDrawable
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition
androidx.core.widget.ListViewCompat
androidx.core.content.res.FontResourcesParserCompat
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup
    public int getSpanIndex(int,int)
com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener
    public abstract void onDayClick(long)
androidx.appcompat.widget.DrawableUtils
    public static void fixVectorDrawableTinting(android.graphics.drawable.Drawable)
androidx.core.math.MathUtils
androidx.core.app.ComponentActivity
    public androidx.collection.SimpleArrayMap mExtraDataMap
androidx.core.os.TraceCompat
androidx.transition.ViewOverlayApi14$OverlayViewGroup
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable
    public void cancel()
    public void post()
com.google.android.material.ripple.RippleDrawableCompat$1
androidx.fragment.app.FragmentActivity$HostCallbacks
    public void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
    public android.view.LayoutInflater onGetLayoutInflater()
    public androidx.fragment.app.FragmentActivity onGetHost()
    public void onSupportInvalidateOptionsMenu()
    public boolean onHasWindowAnimations()
    public int onGetWindowAnimations()
    public void onAttachFragment(androidx.fragment.app.Fragment)
    public java.lang.Object onGetHost()
androidx.core.app.ActivityCompat
    public static androidx.core.app.ActivityCompat$PermissionCompatDelegate sDelegate
androidx.recyclerview.widget.AdapterHelper
    public void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean)
    public void reset()
    public boolean hasAnyUpdateTypes(int)
    public int findPositionOffset(int)
    public int applyPendingUpdatesToPosition(int)
    public boolean hasUpdates()
    public final void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.core.widget.NestedScrollView$SavedState$1
    public androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel)
    public androidx.core.widget.NestedScrollView$SavedState[] newArray(int)
androidx.appcompat.app.AlertController$AlertParams
    public void apply(androidx.appcompat.app.AlertController)
    public final void createListView(androidx.appcompat.app.AlertController)
    public androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener
    public boolean mRecycleOnMeasure
com.qy.MainActivity
    public static void isExist(java.lang.String)
    public static boolean is_root()
    static void <clinit>()
    public final boolean checkPackInfo(java.lang.String)
androidx.core.widget.TextViewCompat
androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback
androidx.recyclerview.widget.StaggeredGridLayoutManager
    public final void createOrientationHelpers()
    public final boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)
    public final void repositionToWrapContentIfNecessary()
    public final void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public final boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public final void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean)
    public final androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int)
    public final androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int)
    public final void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState)
    public final void appendViewToAllSpans(android.view.View)
    public final void prependViewToAllSpans(android.view.View)
    public final int getMaxStart(int)
    public final int getMinEnd(int)
    public final androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState)
    public final int findFirstReferenceChildPosition(int)
    public final int findLastReferenceChildPosition(int)
    public final int convertFocusDirectionToLayoutDirection(int)
com.google.android.material.datepicker.Month$1
    public com.google.android.material.datepicker.Month createFromParcel(android.os.Parcel)
    public com.google.android.material.datepicker.Month[] newArray(int)
androidx.appcompat.widget.ActivityChooserModel
    public static final java.lang.String LOG_TAG
    public static final java.lang.Object sRegistryLock
    public static final java.util.Map sDataModelRegistry
androidx.customview.widget.FocusStrategy$CollectionAdapter
    public abstract java.lang.Object get(java.lang.Object,int)
    public abstract int size(java.lang.Object)
androidx.core.view.accessibility.AccessibilityViewCommand
    public abstract boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments)
androidx.activity.OnBackPressedCallback
    public final void setEnabled(boolean)
    public final boolean isEnabled()
    public final void remove()
    public abstract void handleOnBackPressed()
    public void removeCancellable(androidx.activity.Cancellable)
androidx.core.graphics.PathParser
androidx.transition.ChangeBounds$2
    public void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF)
    public android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds)
androidx.core.util.ObjectsCompat
android.support.v4.os.ResultReceiver$1
    public android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel)
    public android.support.v4.os.ResultReceiver[] newArray(int)
com.google.android.material.datepicker.MaterialCalendarGridView
    public static boolean skipMonth(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long)
    public static int horizontalMidPoint(android.view.View)
    public final void gainFocus(int,android.graphics.Rect)
androidx.savedstate.Recreator
    public final void reflectiveNew(java.lang.String)
androidx.core.graphics.TypefaceCompatBaseImpl$2
androidx.vectordrawable.graphics.drawable.ArgbEvaluator
com.google.android.material.shape.ShapeAppearanceModel$Builder
    public static synthetic com.google.android.material.shape.CornerTreatment access$100(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerTreatment access$200(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerTreatment access$300(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerTreatment access$400(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerSize access$500(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerSize access$600(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerSize access$700(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerSize access$800(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.EdgeTreatment access$900(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.EdgeTreatment access$1000(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.EdgeTreatment access$1100(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.EdgeTreatment access$1200(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(com.google.android.material.shape.CornerTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(com.google.android.material.shape.CornerTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(com.google.android.material.shape.CornerTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(com.google.android.material.shape.CornerTreatment)
androidx.transition.ViewUtilsApi23
    static void <clinit>()
androidx.constraintlayout.solver.widgets.ConstraintWidget$1
androidx.core.content.PermissionChecker
androidx.appcompat.widget.AppCompatSeekBarHelper
    public void setTickMark(android.graphics.drawable.Drawable)
    public void jumpDrawablesToCurrentState()
    public void drawableStateChanged()
androidx.fragment.app.FragmentTabHost$SavedState$1
    public androidx.fragment.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel)
    public androidx.fragment.app.FragmentTabHost$SavedState[] newArray(int)
androidx.recyclerview.widget.RecyclerView$ViewFlinger
    public void fling(int,int)
    public final void internalPostOnAnimation()
    public final float distanceInfluenceForSnapDuration(float)
    public final int computeScrollDuration(int,int,int,int)
com.google.android.material.shape.MaterialShapeUtils
com.google.android.material.datepicker.DateValidatorPointForward$1
    public com.google.android.material.datepicker.DateValidatorPointForward createFromParcel(android.os.Parcel)
    public com.google.android.material.datepicker.DateValidatorPointForward[] newArray(int)
androidx.recyclerview.widget.RecyclerView$State
    public void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter)
    public boolean isPreLayout()
    public boolean willRunPredictiveAnimations()
    public int getTargetScrollPosition()
    public boolean hasTargetScrollPosition()
    public int mRemainingScrollHorizontal
    public int mRemainingScrollVertical
androidx.core.text.PrecomputedTextCompat$Params$Builder
androidx.core.app.NotificationCompatSideChannelService
    public abstract void notify(java.lang.String,int,java.lang.String,android.app.Notification)
    public abstract void cancel(java.lang.String,int,java.lang.String)
    public abstract void cancelAll(java.lang.String)
    public void checkPermission(int,java.lang.String)
androidx.core.view.NestedScrollingChild
    public abstract boolean isNestedScrollingEnabled()
    public abstract void stopNestedScroll()
android.support.constraint.solver.widgets.Snapshot$Connection
    public void updateFrom(android.support.constraint.solver.widgets.ConstraintWidget)
    public void applyTo(android.support.constraint.solver.widgets.ConstraintWidget)
androidx.viewpager2.widget.ViewPager2$SavedState
    public void <init>(android.os.Parcel)
    public final void readValues(android.os.Parcel,java.lang.ClassLoader)
androidx.cardview.widget.CardViewDelegate
    public abstract void setMinWidthHeightInternal(int,int)
com.google.android.material.card.MaterialCardView
    public static synthetic float access$001(com.google.android.material.card.MaterialCardView)
    public final void forceRippleRedrawIfNeeded()
    public final com.google.android.material.card.MaterialCardViewHelper cardViewHelper
    public com.google.android.material.card.MaterialCardView$OnCheckedChangeListener onCheckedChangeListener
    public static final int DEF_STYLE_RES
androidx.transition.AutoTransition
    public final void init()
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager
    public final void checkPaneVisibility(android.view.View,boolean)
    public final void registerForLayoutCallback(android.view.View)
com.google.android.material.transformation.FabTransformationSheetBehavior
    public final void updateImportantForAccessibility(android.view.View,boolean)
com.google.android.material.datepicker.RangeDateSelector$3
    public com.google.android.material.datepicker.RangeDateSelector createFromParcel(android.os.Parcel)
    public com.google.android.material.datepicker.RangeDateSelector[] newArray(int)
com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator
    public abstract com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize)
androidx.transition.ViewGroupUtilsApi14$1
androidx.appcompat.app.AlertController$4
androidx.transition.TransitionManager
    public static void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition)
    public static void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition)
    public static void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition)
androidx.appcompat.widget.Toolbar$SavedState$1
    public androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.widget.Toolbar$SavedState[] newArray(int)
androidx.lifecycle.Lifecycle
    public abstract androidx.lifecycle.Lifecycle$State getCurrentState()
    public java.util.concurrent.atomic.AtomicReference mInternalScopeRef
androidx.savedstate.SavedStateRegistryController
    public static androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)
    public androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.google.android.material.textfield.TextInputLayout$SavedState$1
    public com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.textfield.TextInputLayout$SavedState[] newArray(int)
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup
    public java.util.List getWidgetsToSolve()
    public void updateUnresolvedWidgets()
androidx.appcompat.view.ActionMode
    public void setTag(java.lang.Object)
    public java.lang.Object getTag()
    public boolean getTitleOptionalHint()
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub
androidx.versionedparcelable.VersionedParcelParcel
    public void writeByteArray(byte[])
    public void writeInt(int)
    public void writeString(java.lang.String)
    public void writeParcelable(android.os.Parcelable)
    public void writeBoolean(boolean)
    public void writeCharSequence(java.lang.CharSequence)
    public java.lang.CharSequence readCharSequence()
    public int readInt()
    public byte[] readByteArray()
    public android.os.Parcelable readParcelable()
    public boolean readBoolean()
androidx.recyclerview.widget.RecyclerView$OnFlingListener
    public abstract boolean onFling(int,int)
android.support.constraint.solver.LinearSystem
    public static void getMetrics()
    public static android.support.constraint.solver.ArrayRow createRowDimensionPercent(android.support.constraint.solver.LinearSystem,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,float,boolean)
    static void <clinit>()
    public android.support.constraint.solver.SolverVariable createExtraVariable()
    public void addSingleError(android.support.constraint.solver.ArrayRow,int,int)
    public void minimize()
    public void addGreaterBarrier(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,boolean)
    public void addLowerBarrier(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,boolean)
    public void addCenterPoint(android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintWidget,float,int)
    public final void addError(android.support.constraint.solver.ArrayRow)
    public final int enforceBFS(android.support.constraint.solver.LinearSystem$Row)
    public android.support.constraint.solver.ArrayRow[] tempClientsCopy
com.google.android.material.textfield.IndicatorViewController
    public static synthetic int access$002(com.google.android.material.textfield.IndicatorViewController,int)
    public static synthetic android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController,android.animation.Animator)
    public static synthetic android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController)
    public void showHelper(java.lang.CharSequence)
    public void hideHelperText()
    public void showError(java.lang.CharSequence)
    public boolean isCaptionView(int)
    public void setErrorEnabled(boolean)
    public boolean isErrorEnabled()
    public boolean isHelperTextEnabled()
    public void setHelperTextEnabled(boolean)
    public java.lang.CharSequence getErrorText()
    public java.lang.CharSequence getHelperText()
    public void setTypefaces(android.graphics.Typeface)
    public android.content.res.ColorStateList getErrorViewTextColors()
    public int getHelperTextViewCurrentTextColor()
    public final void setCaptionViewVisibilities(int,int)
    public final android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean)
    public final android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView)
    public final boolean canAdjustIndicatorPadding()
    public final void setViewGroupGoneIfEmpty(android.view.ViewGroup,int)
    public final boolean isCaptionStateError(int)
    public final void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface)
androidx.recyclerview.widget.GapWorker
    public static boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int)
    public void add(androidx.recyclerview.widget.RecyclerView)
    public void remove(androidx.recyclerview.widget.RecyclerView)
    public final void buildTaskList()
    public final void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long)
    public final void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long)
    public final void flushTasksWithDeadline(long)
com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener
    public abstract void onTabSelected(com.google.android.material.tabs.TabLayout$Tab)
    public abstract void onTabUnselected(com.google.android.material.tabs.TabLayout$Tab)
    public abstract void onTabReselected(com.google.android.material.tabs.TabLayout$Tab)
com.google.android.material.internal.NavigationMenuItemView
    public final boolean shouldExpandActionArea()
    public final void adjustAppearance()
    public final android.graphics.drawable.StateListDrawable createDefaultBackground()
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty
    public java.lang.Integer get(com.google.android.material.circularreveal.CircularRevealWidget)
    public void set(com.google.android.material.circularreveal.CircularRevealWidget,java.lang.Integer)
androidx.appcompat.widget.AppCompatTextView
    public final void consumeTextFutureAndSetBlocking()
android.support.constraint.solver.widgets.ConstraintWidget
    static void <clinit>()
    public void setMaxWidth(int)
    public void setMaxHeight(int)
    public boolean isSpreadWidth()
    public boolean isSpreadHeight()
    public android.support.constraint.solver.widgets.ConstraintWidget getParent()
    public void setWidthWrapContent(boolean)
    public void setHeightWrapContent(boolean)
    public void connectCircularConstraint(android.support.constraint.solver.widgets.ConstraintWidget,float,int)
    public void setVisibility(int)
    public java.lang.String getDebugName()
    public int getX()
    public int getY()
    public int getDrawX()
    public int getDrawY()
    public int getRootX()
    public int getRootY()
    public float getBiasPercent(int)
    public void setX(int)
    public void setY(int)
    public void setOrigin(int,int)
    public void setHorizontalMatchStyle(int,int,int,float)
    public void setVerticalMatchStyle(int,int,int,float)
    public void setDimensionRatio(java.lang.String)
    public void setHorizontalBiasPercent(float)
    public void setVerticalBiasPercent(float)
    public void setWrapWidth(int)
    public void setWrapHeight(int)
    public void setFrame(int,int,int,int)
    public int getRelativePositioning(int)
    public void setRelativePositioning(int,int)
    public void setCompanionWidget(java.lang.Object)
    public void setHorizontalWeight(float)
    public void setVerticalWeight(float)
    public void setHorizontalChainStyle(int)
    public void setVerticalChainStyle(int)
    public void resetAnchors()
    public boolean isInHorizontalChain()
    public boolean isInVerticalChain()
    public void setupDimensionRatio(boolean,boolean,boolean,boolean)
    public final void addAnchors()
    public boolean mIsWidthWrapContent
    public boolean mIsHeightWrapContent
    public int mDrawWidth
    public int mDrawHeight
    public int mContainerItemSkip
    public boolean mHorizontalWrapVisited
    public boolean mVerticalWrapVisited
    public boolean mHorizontalChainFixedPosition
    public boolean mVerticalChainFixedPosition
    public android.support.constraint.solver.widgets.ConstraintWidget mHorizontalNextWidget
    public android.support.constraint.solver.widgets.ConstraintWidget mVerticalNextWidget
androidx.collection.ArrayMap
    public void <init>(int)
    public boolean retainAll(java.util.Collection)
com.google.android.material.appbar.AppBarLayout$BaseBehavior
    public static android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int)
    public static synthetic int access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior)
    public final boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)
    public final void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int)
    public final int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int)
    public final int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int)
    public final boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback onDragCallback
com.google.android.material.appbar.MaterialToolbar
    public final void initBackground(android.content.Context)
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
    public void onChanged()
com.google.android.material.animation.MotionTiming
    public static com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator)
    public static android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator)
    public long getDelay()
    public long getDuration()
    public int getRepeatCount()
    public int getRepeatMode()
androidx.appcompat.widget.AppCompatImageHelper
    public boolean hasOverlappingRendering()
    public android.content.res.ColorStateList getSupportImageTintList()
    public android.graphics.PorterDuff$Mode getSupportImageTintMode()
    public final boolean shouldApplyFrameworkTintUsingColorFilter()
    public final boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.ChildHelper$Callback
    public abstract int getChildCount()
    public abstract void addView(android.view.View,int)
    public abstract int indexOfChild(android.view.View)
    public abstract void removeViewAt(int)
    public abstract android.view.View getChildAt(int)
    public abstract void removeAllViews()
    public abstract androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
    public abstract void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)
    public abstract void detachViewFromParent(int)
    public abstract void onEnteredHiddenState(android.view.View)
    public abstract void onLeftHiddenState(android.view.View)
androidx.drawerlayout.widget.DrawerLayout$SavedState$1
    public androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel)
    public androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int)
androidx.cardview.widget.CardView
    public int mUserSetMinWidth
    public int mUserSetMinHeight
    public final androidx.cardview.widget.CardViewDelegate mCardViewDelegate
    public static final int[] COLOR_BACKGROUND_ATTR
androidx.appcompat.app.AppCompatDelegateImpl$5
    public void onDetachedFromWindow()
androidx.fragment.app.FragmentController
    public static androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)
    public androidx.fragment.app.FragmentManager getSupportFragmentManager()
    public androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
    public void attachHost(androidx.fragment.app.Fragment)
    public android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public android.os.Parcelable saveAllState()
    public void restoreSaveState(android.os.Parcelable)
    public void dispatchCreate()
    public void dispatchActivityCreated()
    public void dispatchStart()
    public void dispatchResume()
    public void dispatchPause()
    public void dispatchStop()
    public void dispatchDestroy()
    public void dispatchMultiWindowModeChanged(boolean)
    public void dispatchPictureInPictureModeChanged(boolean)
    public void dispatchConfigurationChanged(android.content.res.Configuration)
    public void dispatchLowMemory()
    public boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
    public boolean dispatchPrepareOptionsMenu(android.view.Menu)
    public boolean dispatchOptionsItemSelected(android.view.MenuItem)
    public boolean dispatchContextItemSelected(android.view.MenuItem)
    public void dispatchOptionsMenuClosed(android.view.Menu)
    public boolean execPendingActions()
com.google.android.material.internal.ParcelableSparseArray$1
    public com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel)
    public com.google.android.material.internal.ParcelableSparseArray[] newArray(int)
com.google.android.material.internal.DescendantOffsetUtils
    public static void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
androidx.recyclerview.widget.OpReorderer$Callback
    public abstract androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object)
    public abstract void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
com.google.android.material.bottomsheet.BottomSheetBehavior
    public final void calculateHalfExpandedOffset()
    public final void reset()
    public final void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState)
    public final void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean)
    public final void createShapeValueAnimator()
    public final float getYVelocity()
androidx.appcompat.widget.ActionMenuPresenter
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuView access$500(androidx.appcompat.widget.ActionMenuPresenter)
    public void onConfigurationChanged(android.content.res.Configuration)
    public void setReserveOverflow(boolean)
    public void setExpandedActionViewsExclusive(boolean)
    public void setOverflowIcon(android.graphics.drawable.Drawable)
    public android.graphics.drawable.Drawable getOverflowIcon()
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
    public boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
    public boolean filterLeftoverView(android.view.ViewGroup,int)
    public boolean isOverflowMenuShowPending()
    public void onSubUiVisibilityChanged(boolean)
    public void setMenuView(androidx.appcompat.widget.ActionMenuView)
    public final android.view.View findViewForItem(android.view.MenuItem)
android.support.constraint.solver.SolverVariable
    public static void increaseErrorId()
    static void <clinit>()
    public void setType(android.support.constraint.solver.SolverVariable$Type,java.lang.String)
    public static int uniqueSlackId
    public static int uniqueUnrestrictedId
    public static int uniqueConstantId
    public static int uniqueId
androidx.core.widget.TextViewCompat$OreoCallback
    public final void recomputeProcessTextMenuItems(android.view.Menu)
    public final java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager)
    public final boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)
    public final android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView)
    public final boolean isEditable(android.widget.TextView)
androidx.constraintlayout.solver.Metrics
    public long measures
    public long additionalMeasures
    public long resolutions
    public long tableSizeIncrease
    public long minimize
    public long constraints
    public long simpleconstraints
    public long optimize
    public long iterations
    public long pivots
    public long bfs
    public long errors
    public long slackvariables
    public long extravariables
    public long maxTableSize
    public long fullySolved
    public long graphOptimizer
    public long resolvedWidgets
    public long minimizeGoal
    public long maxVariables
    public long maxRows
    public long centerConnectionResolved
    public long matchConnectionResolved
    public long chainConnectionResolved
    public long barrierConnectionResolved
    public long nonresolvedWidgets
    public long lastTableSize
androidx.constraintlayout.solver.widgets.ConstraintAnchor
    public androidx.constraintlayout.solver.widgets.ResolutionAnchor getResolutionNode()
    public androidx.constraintlayout.solver.SolverVariable getSolverVariable()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner()
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType()
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor getTarget()
    public boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
    public boolean isValidConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType mConnectionType
com.google.android.material.circularreveal.CircularRevealHelper
    public void buildCircularRevealCache()
    public void destroyCircularRevealCache()
    public void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    public com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
    public void setCircularRevealScrimColor(int)
    public int getCircularRevealScrimColor()
    public android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
    public void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
    public void draw(android.graphics.Canvas)
    public boolean isOpaque()
androidx.constraintlayout.solver.widgets.ChainHead
    public static boolean isMatchConstraintEqualityCandidate(androidx.constraintlayout.solver.widgets.ConstraintWidget,int)
    public void define()
    public final void defineChainProperties()
com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener
    public void reset()
androidx.transition.TransitionManager$MultiListener
    public final void removeListeners()
com.google.android.material.appbar.HeaderScrollingViewBehavior
    public static int resolveGravity(int)
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView
    public final boolean isOutOfBounds(int,int)
android.support.constraint.solver.widgets.ConstraintWidgetContainer
    public void setOptimizationLevel(int)
    public int getOptimizationLevel()
    public void updateChildrenFromSolver(android.support.constraint.solver.LinearSystem,boolean[])
    public void setRtl(boolean)
    public boolean isRtl()
    public void preOptimize()
    public void optimizeForDimensions(int,int)
    public void optimize()
    public final void addHorizontalChain(android.support.constraint.solver.widgets.ConstraintWidget)
    public final void addVerticalChain(android.support.constraint.solver.widgets.ConstraintWidget)
    public int mDebugSolverPassCount
androidx.fragment.app.BackStackRecord
    public void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)
    public void runOnCommitRunnables()
    public int commitInternal(boolean)
    public androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment)
    public androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment)
    public boolean isPostponed()
    public void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
    public java.lang.String getName()
androidx.appcompat.app.TwilightManager$TwilightState
    public long yesterdaySunset
    public long todaySunrise
    public long todaySunset
    public long tomorrowSunrise
androidx.core.content.FileProvider
    public static int modeToMode(java.lang.String)
    public static varargs java.io.File buildPath(java.io.File,java.lang.String[])
    public static java.lang.String[] copyOf(java.lang.String[],int)
    public static java.lang.Object[] copyOf(java.lang.Object[],int)
com.google.android.material.datepicker.MaterialDatePicker
    static void <clinit>()
    public static final java.lang.Object CONFIRM_BUTTON_TAG
    public static final java.lang.Object CANCEL_BUTTON_TAG
    public static final java.lang.Object TOGGLE_BUTTON_TAG
com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener
    public abstract void onViewAttachedToWindow(android.view.View)
    public abstract void onViewDetachedFromWindow(android.view.View)
androidx.vectordrawable.graphics.drawable.AndroidResources
androidx.fragment.app.BackStackState$1
    public androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel)
    public androidx.fragment.app.BackStackState[] newArray(int)
com.google.android.material.appbar.ViewOffsetHelper
    public void onViewLayout()
    public boolean setLeftAndRightOffset(int)
    public int getTopAndBottomOffset()
    public int getLayoutTop()
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    public int right
    public int bottom
com.google.android.material.button.MaterialButtonToggleGroup$CornerData
    public static com.google.android.material.button.MaterialButtonToggleGroup$CornerData left(com.google.android.material.button.MaterialButtonToggleGroup$CornerData)
    public static com.google.android.material.button.MaterialButtonToggleGroup$CornerData right(com.google.android.material.button.MaterialButtonToggleGroup$CornerData)
    public static com.google.android.material.button.MaterialButtonToggleGroup$CornerData top(com.google.android.material.button.MaterialButtonToggleGroup$CornerData)
    public static com.google.android.material.button.MaterialButtonToggleGroup$CornerData bottom(com.google.android.material.button.MaterialButtonToggleGroup$CornerData)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState
androidx.core.content.ContextCompat
    public static android.content.res.ColorStateList getColorStateList(android.content.Context,int)
    public static android.util.TypedValue sTempValue
com.google.android.material.animation.MotionSpec
    public static void addInfoFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator)
    public boolean hasTiming(java.lang.String)
    public void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming)
    public void setPropertyValues(java.lang.String,android.animation.PropertyValuesHolder[])
    public long getTotalDuration()
com.google.android.material.bottomappbar.BottomAppBar
    public final void dispatchAnimationEnd()
    public final void maybeAnimateModeChange(int)
    public final void createFabTranslationXAnimation(int,java.util.List)
    public final void maybeAnimateMenuView(int,boolean)
    public final void createMenuViewTranslationAnimation(int,boolean,java.util.List)
    public final void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean)
    public final void cancelAnimations()
    public final void setActionMenuViewPosition()
    public final void addFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton)
    public com.google.android.material.animation.TransformationCallback fabTransformationCallback
    public static final int DEF_STYLE_RES
androidx.core.widget.EdgeEffectCompat
androidx.appcompat.widget.ActionBarOverlayLayout
    public final androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
    public final void postRemoveActionBarHideOffset()
    public final void postAddActionBarHideOffset()
    public final void removeActionBarHideOffset()
    public final void addActionBarHideOffset()
    public final boolean shouldHideActionBarOnFling(float,float)
android.support.constraint.solver.ArrayRow
    public boolean hasKeyVariable()
    public java.lang.String toReadableString()
    public void reset()
    public boolean hasVariable(android.support.constraint.solver.SolverVariable)
    public android.support.constraint.solver.ArrayRow createRowDefinition(android.support.constraint.solver.SolverVariable,int)
    public android.support.constraint.solver.ArrayRow createRowEquals(android.support.constraint.solver.SolverVariable,int)
    public android.support.constraint.solver.ArrayRow createRowEquals(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int)
    public android.support.constraint.solver.ArrayRow addSingleError(android.support.constraint.solver.SolverVariable,int)
    public android.support.constraint.solver.ArrayRow createRowEqualMatchDimensions(float,float,float,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable)
    public android.support.constraint.solver.ArrayRow createRowCentering(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,float,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int)
    public android.support.constraint.solver.ArrayRow createRowDimensionPercent(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,float)
    public void ensurePositiveConstant()
    public boolean chooseSubject(android.support.constraint.solver.LinearSystem)
    public android.support.constraint.solver.SolverVariable pickPivot(android.support.constraint.solver.SolverVariable)
    public boolean isEmpty()
    public android.support.constraint.solver.SolverVariable getPivotCandidate(android.support.constraint.solver.LinearSystem,boolean[])
    public void clear()
    public android.support.constraint.solver.SolverVariable getKey()
    public boolean used
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
    public static synthetic android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator)
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate
androidx.transition.ViewGroupUtilsApi14
androidx.recyclerview.widget.RecyclerView$5
    public void addView(android.view.View,int)
    public int indexOfChild(android.view.View)
    public void removeAllViews()
    public void detachViewFromParent(int)
com.google.android.material.textfield.DropdownMenuEndIconDelegate
    public final void addRippleEffectOnOutlinedLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable)
    public final void addRippleEffectOnFilledLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable)
    public final void setEndIconChecked(boolean)
    public final void initAnimators()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath
androidx.lifecycle.ReportFragment$ActivityInitializationListener
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache
    public static int generateCacheKey(int,android.graphics.PorterDuff$Mode)
com.google.android.material.floatingactionbutton.MotionStrategy
    public abstract void setMotionSpec(com.google.android.material.animation.MotionSpec)
    public abstract com.google.android.material.animation.MotionSpec getMotionSpec()
    public abstract android.animation.AnimatorSet createAnimator()
    public abstract java.util.List getListeners()
    public abstract void onAnimationStart(android.animation.Animator)
    public abstract void onAnimationEnd()
    public abstract void onAnimationCancel()
    public abstract void onChange(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
androidx.collection.MapCollections
    public static boolean containsAllHelper(java.util.Map,java.util.Collection)
    public static boolean removeAllHelper(java.util.Map,java.util.Collection)
    public java.util.Set getEntrySet()
    public java.util.Collection getValues()
com.google.android.material.ripple.RippleDrawableCompat
    public void <init>(com.google.android.material.shape.ShapeAppearanceModel)
    public synthetic void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState,com.google.android.material.ripple.RippleDrawableCompat$1)
    public com.google.android.material.ripple.RippleDrawableCompat mutate()
com.google.android.material.button.MaterialButtonHelper
    public void setBackgroundOverwritten()
    public boolean isBackgroundOverwritten()
    public void setSupportBackgroundTintList(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getSupportBackgroundTintList()
    public void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
    public android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
    public void setShouldDrawSurfaceColorStroke(boolean)
    public void updateMaskBounds(int,int)
    public void setBackgroundColor(int)
    public void setRippleColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getRippleColor()
    public void setStrokeColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getStrokeColor()
    public void setStrokeWidth(int)
    public int getStrokeWidth()
    public void setCornerRadius(int)
    public int getCornerRadius()
    public void setCheckable(boolean)
    public boolean isCheckable()
    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    public final android.graphics.drawable.Drawable createBackground()
    public final void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel)
androidx.core.widget.TintableCompoundDrawablesView
    public abstract void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
    public abstract void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.core.text.BidiFormatter$Builder
com.google.android.material.internal.TextDrawableHelper
    public static synthetic boolean access$002(com.google.android.material.internal.TextDrawableHelper,boolean)
    public static synthetic java.lang.ref.WeakReference access$100(com.google.android.material.internal.TextDrawableHelper)
    public void setDelegate(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate)
    public android.text.TextPaint getTextPaint()
    public void setTextWidthDirty(boolean)
    public com.google.android.material.resources.TextAppearance getTextAppearance()
    public void updateTextPaintDrawState(android.content.Context)
    public final float calculateTextWidth(java.lang.CharSequence)
androidx.viewpager.widget.ViewPager$SavedState$1
    public androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel)
    public androidx.viewpager.widget.ViewPager$SavedState[] newArray(int)
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback
    public abstract void onWindowVisibilityChanged(int)
    public abstract void showForSystem()
    public abstract void hideForSystem()
    public abstract void enableContentAnimations(boolean)
    public abstract void onContentScrollStarted()
    public abstract void onContentScrollStopped()
androidx.lifecycle.LiveData
    public void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
    public java.lang.Object getValue()
    public boolean hasActiveObservers()
    public final java.lang.Runnable mPostValueRunnable
androidx.appcompat.view.menu.MenuPopupHelper
    public void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int)
    public void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
    public void setAnchorView(android.view.View)
    public void setGravity(int)
    public void show()
    public boolean tryShow(int,int)
    public void dismiss()
    public final androidx.appcompat.view.menu.MenuPopup createPopup()
androidx.appcompat.widget.SearchView$OnQueryTextListener
    public abstract boolean onQueryTextSubmit(java.lang.String)
    public abstract boolean onQueryTextChange(java.lang.String)
androidx.recyclerview.widget.LinearSnapHelper
    public final float computeDistancePerChild(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper)
androidx.appcompat.view.ContextThemeWrapper
    public void <init>(android.content.Context,android.content.res.Resources$Theme)
    public int getThemeResId()
    public void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)
    public final android.content.res.Resources getResourcesInternal()
androidx.core.view.ViewPropertyAnimatorCompat$1
    public final synthetic androidx.core.view.ViewPropertyAnimatorCompat this$0
com.google.android.material.datepicker.SingleDateSelector$2
    public com.google.android.material.datepicker.SingleDateSelector createFromParcel(android.os.Parcel)
    public com.google.android.material.datepicker.SingleDateSelector[] newArray(int)
com.google.android.material.internal.NavigationMenu
com.google.android.material.textfield.PasswordToggleEndIconDelegate
    public static synthetic android.text.TextWatcher access$100(com.google.android.material.textfield.PasswordToggleEndIconDelegate)
    public final boolean hasPasswordTransformation()
com.google.android.material.shape.ShapeAppearancePathProvider
    public void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,android.graphics.Path)
    public final void setCornerPathAndTransform(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
    public final void setEdgePathAndTransform(int)
    public final void appendCornerPath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
    public final void appendEdgePath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
    public final float getEdgeCenterForIndex(android.graphics.RectF,int)
    public final com.google.android.material.shape.CornerTreatment getCornerTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)
    public final com.google.android.material.shape.CornerSize getCornerSizeForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)
    public final com.google.android.material.shape.EdgeTreatment getEdgeTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)
    public final void getCoordinatesOfCorner(int,android.graphics.RectF,android.graphics.PointF)
androidx.viewpager2.widget.FakeDrag
androidx.lifecycle.LiveData$ObserverWrapper
    public void <init>(androidx.lifecycle.LiveData)
    public boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
com.google.android.material.internal.ViewUtils
androidx.appcompat.widget.TooltipCompat
androidx.appcompat.widget.AppCompatDrawableManager$1
    public final android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)
    public final android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)
    public final android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)
    public final android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)
com.google.android.material.appbar.HeaderBehavior
    public final void ensureVelocityTracker()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton
    public final void performMotion(com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    public final boolean shouldAnimateVisibilityChange()
    public final com.google.android.material.floatingactionbutton.MotionStrategy shrinkStrategy
    public final com.google.android.material.floatingactionbutton.MotionStrategy extendStrategy
    public final com.google.android.material.floatingactionbutton.MotionStrategy showStrategy
    public final com.google.android.material.floatingactionbutton.MotionStrategy hideStrategy
    public static final int DEF_STYLE_RES
    public static final android.util.Property WIDTH
    public static final android.util.Property HEIGHT
com.google.android.material.animation.DrawableAlphaProperty
    public java.lang.Integer get(android.graphics.drawable.Drawable)
    public void set(android.graphics.drawable.Drawable,java.lang.Integer)
androidx.viewpager.widget.ViewPager$PageTransformer
com.google.android.material.transformation.FabTransformationBehavior
    public final void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)
    public final void createDependencyTranslationAnimation(android.view.View,android.view.View,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List)
    public final void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF)
    public final void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)
    public final void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List)
    public final void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)
    public final void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)
    public final void calculateDependencyWindowBounds(android.view.View,android.graphics.RectF)
    public final float calculateRevealCenterX(android.view.View,android.view.View,com.google.android.material.animation.Positioning)
    public final float calculateRevealCenterY(android.view.View,android.view.View,com.google.android.material.animation.Positioning)
    public final void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF)
    public final android.view.ViewGroup calculateChildContentContainer(android.view.View)
    public final int getBackgroundTint(android.view.View)
    public final void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List)
    public final void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List)
com.google.android.material.color.MaterialColors
androidx.core.view.MenuItemCompat
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState$1
    public com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState[] newArray(int)
androidx.appcompat.app.ActionBar
    public boolean openOptionsMenu()
    public boolean closeOptionsMenu()
    public boolean invalidateOptionsMenu()
    public boolean onMenuKeyEvent(android.view.KeyEvent)
    public void onDestroy()
androidx.arch.core.executor.DefaultTaskExecutor$1
    public final synthetic androidx.arch.core.executor.DefaultTaskExecutor this$0
androidx.core.util.Pools$SimplePool
    public final boolean isInPool(java.lang.Object)
com.google.android.material.textfield.CutoutDrawable
    public boolean hasCutout()
    public void removeCutout()
    public final void setPaintStyles()
    public final void preDraw(android.graphics.Canvas)
    public final void saveCanvasLayer(android.graphics.Canvas)
    public final void postDraw(android.graphics.Canvas)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl
    public final boolean doCheck(java.lang.CharSequence,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject
androidx.appcompat.widget.ResourceManagerInternal
    public static void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)
    public static long createCacheKey(android.util.TypedValue)
    public static android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])
    public static boolean isVectorDrawable(android.graphics.drawable.Drawable)
    public synchronized android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)
    public boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
    public android.graphics.PorterDuff$Mode getTintMode(int)
    public final void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)
    public final android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)
    public final void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)
    public final void checkVectorDrawableSetup(android.content.Context)
androidx.collection.SparseArrayCompat
    public int indexOfValue(java.lang.Object)
    public void clear()
androidx.viewpager2.widget.PageTransformerAdapter
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
    public boolean perform(android.view.View,android.os.Bundle)
    public final java.lang.CharSequence mLabel
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_MOVE_WINDOW
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_TOOLTIP
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_HIDE_TOOLTIP
androidx.fragment.app.FragmentTransitionCompat21$2
    public final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
com.google.android.material.shape.MaterialShapeDrawable$2
    public final synthetic com.google.android.material.shape.MaterialShapeDrawable this$0
androidx.core.app.TaskStackBuilder
    public static androidx.core.app.TaskStackBuilder create(android.content.Context)
    public androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent)
    public androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName)
    public void startActivities()
    public void startActivities(android.os.Bundle)
androidx.cardview.widget.RoundRectDrawable
    public void setPadding(float,boolean,boolean)
    public float getPadding()
    public void setRadius(float)
    public float getRadius()
    public android.content.res.ColorStateList getColor()
    public final void setBackground(android.content.res.ColorStateList)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
    public abstract void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
    public abstract void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
    public abstract void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
    public abstract void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
    public abstract void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
    public abstract void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle)
    public abstract void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
    public abstract void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
    public abstract void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
    public abstract void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
    public abstract void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
    public abstract void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
    public abstract void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
    public abstract void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.appcompat.app.AppCompatDelegate
    public static int getDefaultNightMode()
    public abstract androidx.appcompat.app.ActionBar getSupportActionBar()
    public abstract android.view.MenuInflater getMenuInflater()
    public abstract void onPostCreate(android.os.Bundle)
    public abstract void onConfigurationChanged(android.content.res.Configuration)
    public abstract void onStart()
    public abstract void onPostResume()
    public void setTheme(int)
    public abstract android.view.View findViewById(int)
    public void attachBaseContext(android.content.Context)
    public abstract void onSaveInstanceState(android.os.Bundle)
    public int getLocalNightMode()
androidx.core.util.DebugUtils
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator
    public int compare(android.view.View,android.view.View)
androidx.lifecycle.LiveData$LifecycleBoundObserver
    public void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner)
    public boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
com.qy.ThisData
    public int getWeBlueBuffcd()
    public void setWeBlueBuffcd(int)
    public int getWeRedBuffcd()
    public void setWeRedBuffcd(int)
    public int getEnemyBlueBuffcd()
    public void setEnemyBlueBuffcd(int)
    public int getEnemyRedBuffcd()
    public void setEnemyRedBuffcd(int)
    public java.util.List getHl()
    public void setHl(java.util.List)
androidx.core.util.Pools$Pool
androidx.recyclerview.widget.RecyclerView$Adapter
    public void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List)
    public void setHasStableIds(boolean)
    public final boolean hasStableIds()
    public final boolean hasObservers()
    public void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
    public void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
    public void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView)
com.google.android.material.checkbox.MaterialCheckBox
    public void <init>(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo
    public void set(float,float,float)
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener
    public abstract void onFitSystemWindows(android.graphics.Rect)
androidx.fragment.app.Fragment
    public final void restoreViewState(android.os.Bundle)
    public final android.os.Bundle getArguments()
    public final boolean isStateSaved()
    public final androidx.fragment.app.Fragment getTargetFragment()
    public final android.content.Context requireContext()
    public final androidx.fragment.app.FragmentActivity getActivity()
    public final androidx.fragment.app.FragmentActivity requireActivity()
    public final java.lang.Object getHost()
    public final java.lang.String getString(int)
    public final androidx.fragment.app.FragmentManager getFragmentManager()
    public final androidx.fragment.app.Fragment getParentFragment()
    public final boolean isDetached()
    public void onHiddenChanged(boolean)
    public final boolean getRetainInstance()
    public void onActivityResult(int,int,android.content.Intent)
    public void onRequestPermissionsResult(int,java.lang.String[],int[])
    public android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
    public android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
    public void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
    public void onAttachFragment(androidx.fragment.app.Fragment)
    public void onAttach(android.content.Context)
    public void onAttach(android.app.Activity)
    public android.view.animation.Animation onCreateAnimation(int,boolean,int)
    public android.animation.Animator onCreateAnimator(int,boolean,int)
    public void onViewCreated(android.view.View,android.os.Bundle)
    public android.view.View getView()
    public void onActivityCreated(android.os.Bundle)
    public void onViewStateRestored(android.os.Bundle)
    public void onStart()
    public void onResume()
    public void onMultiWindowModeChanged(boolean)
    public void onPictureInPictureModeChanged(boolean)
    public void onPrimaryNavigationFragmentChanged(boolean)
    public void onPause()
    public void onStop()
    public void onDestroyView()
    public void onDestroy()
    public void initState()
    public void onDetach()
    public void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
    public void onPrepareOptionsMenu(android.view.Menu)
    public boolean onOptionsItemSelected(android.view.MenuItem)
    public void onOptionsMenuClosed(android.view.Menu)
    public boolean onContextItemSelected(android.view.MenuItem)
    public java.lang.Object getReturnTransition()
    public java.lang.Object getReenterTransition()
    public java.lang.Object getSharedElementReturnTransition()
    public boolean getAllowEnterTransitionOverlap()
    public boolean getAllowReturnTransitionOverlap()
    public void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public void performAttach()
    public void performCreate(android.os.Bundle)
    public void performActivityCreated(android.os.Bundle)
    public void performStart()
    public void performResume()
    public void noteStateNotSaved()
    public void performPrimaryNavigationFragmentChanged()
    public void performConfigurationChanged(android.content.res.Configuration)
    public boolean performOptionsItemSelected(android.view.MenuItem)
    public boolean performContextItemSelected(android.view.MenuItem)
    public void performOptionsMenuClosed(android.view.Menu)
    public void performSaveInstanceState(android.os.Bundle)
    public void performPause()
    public void performStop()
    public void performDestroyView()
    public void performDestroy()
    public void performDetach()
    public void setNextTransition(int,int)
    public void getExitTransitionCallback()
    public void setStateAfterAnimating(int)
    public boolean isPostponed()
    public java.lang.Runnable mPostponedDurationRunnable
androidx.constraintlayout.solver.widgets.Guideline$1
androidx.transition.ViewUtils$2
    public android.graphics.Rect get(android.view.View)
    public void set(android.view.View,android.graphics.Rect)
androidx.core.widget.NestedScrollView
    public final void initScrollView()
    public final boolean canScroll()
    public final boolean inChild(int,int)
    public final void initOrResetVelocityTracker()
    public final void initVelocityTrackerIfNotExists()
    public final android.view.View findFocusableViewInBounds(boolean,int,int)
    public final boolean isOffScreen(android.view.View)
    public final boolean scrollToChildRect(android.graphics.Rect,boolean)
    public final void endDrag()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5
    public void set(android.view.View,java.lang.Float)
    public java.lang.Float get(android.view.View)
androidx.core.provider.SelfDestructiveThread$3
    public final synthetic androidx.core.provider.SelfDestructiveThread this$0
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate
androidx.viewpager.widget.PagerTitleStrip$PageListener
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition
com.google.android.material.tabs.TabLayout
    public boolean releaseFromTabPool(com.google.android.material.tabs.TabLayout$Tab)
    public final void addTabFromItemView(com.google.android.material.tabs.TabItem)
    public final com.google.android.material.tabs.TabLayout$TabView createTabView(com.google.android.material.tabs.TabLayout$Tab)
    public final void configureTab(com.google.android.material.tabs.TabLayout$Tab,int)
    public final void addTabView(com.google.android.material.tabs.TabLayout$Tab)
    public final android.widget.LinearLayout$LayoutParams createLayoutParamsForTabs()
    public final void removeTabViewAt(int)
    public final void dispatchTabSelected(com.google.android.material.tabs.TabLayout$Tab)
    public final void dispatchTabUnselected(com.google.android.material.tabs.TabLayout$Tab)
    public final void dispatchTabReselected(com.google.android.material.tabs.TabLayout$Tab)
    public final int calculateScrollXForTab(int,float)
    public final com.google.android.material.tabs.TabLayout$SlidingTabIndicator slidingTabIndicator
    public boolean tabIndicatorFullWidth
androidx.collection.LongSparseArray
    public void <init>(int)
    public void delete(long)
    public void remove(long)
    public void removeAt(int)
    public int indexOfKey(long)
    public void append(long,java.lang.Object)
androidx.core.graphics.drawable.WrappedDrawableState
    public boolean canConstantState()
androidx.appcompat.app.AlertDialog
    public android.widget.ListView getListView()
com.qy.Hero
    public void setHeroId(int)
    public double getHpPercentage()
    public void setHpPercentage(double)
    public java.lang.String getMapXY()
    public void setMapXY(java.lang.String)
    public void setSummonercdSkill(int)
    public void setBigMoveCd(int)
    public java.lang.String getEntityXY()
    public void setEntityXY(java.lang.String)
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1
    public androidx.appcompat.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.widget.ActionMenuPresenter$SavedState[] newArray(int)
android.support.constraint.solver.widgets.Barrier
    public void setBarrierType(int)
    public void setAllowsGoneWidget(boolean)
com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener
    public abstract void onEndIconChanged(com.google.android.material.textfield.TextInputLayout,int)
com.google.android.material.animation.ChildrenAlphaProperty
    public java.lang.Float get(android.view.ViewGroup)
    public void set(android.view.ViewGroup,java.lang.Float)
com.google.android.material.bottomnavigation.BottomNavigationView
    public final com.google.android.material.bottomnavigation.BottomNavigationPresenter presenter
    public com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener selectedListener
    public com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener reselectedListener
    public static final int DEF_STYLE_RES
com.google.android.material.transformation.FabTransformationBehavior$4
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
com.google.android.material.datepicker.CalendarItemStyle
    public int getTopInset()
    public int getBottomInset()
androidx.core.view.ActionProvider$SubUiVisibilityListener
    public abstract void onSubUiVisibilityChanged(boolean)
androidx.collection.LruCache
    public void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
    public java.lang.Object create(java.lang.Object)
    public int sizeOf(java.lang.Object,java.lang.Object)
    public final int safeSizeOf(java.lang.Object,java.lang.Object)
    public int createCount
androidx.appcompat.view.menu.MenuAdapter
    public void setForceShowIcon(boolean)
    public androidx.appcompat.view.menu.MenuBuilder getAdapterMenu()
androidx.fragment.app.FragmentTransitionImpl$3
    public final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
androidx.core.provider.FontsContractCompat$FontInfo
    public android.net.Uri getUri()
    public int getTtcIndex()
    public int getWeight()
    public boolean isItalic()
    public int getResultCode()
androidx.appcompat.widget.AppCompatImageView
    public void <init>(android.content.Context,android.util.AttributeSet)
android.support.constraint.ConstraintSet$1
androidx.constraintlayout.solver.ArrayRow
    public boolean hasKeyVariable()
    public java.lang.String toReadableString()
    public void reset()
    public boolean hasVariable(androidx.constraintlayout.solver.SolverVariable)
    public androidx.constraintlayout.solver.ArrayRow createRowDefinition(androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow addSingleError(androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow createRowEqualMatchDimensions(float,float,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable)
    public androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float)
    public void ensurePositiveConstant()
    public boolean chooseSubject(androidx.constraintlayout.solver.LinearSystem)
    public androidx.constraintlayout.solver.SolverVariable pickPivot(androidx.constraintlayout.solver.SolverVariable)
    public boolean isEmpty()
    public androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[])
    public void clear()
    public androidx.constraintlayout.solver.SolverVariable getKey()
    public boolean used
androidx.appcompat.view.menu.MenuItemImpl$1
    public void onActionProviderVisibilityChanged(boolean)
androidx.transition.ChangeBounds$9
    public final synthetic androidx.transition.ChangeBounds this$0
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate
    public androidx.core.view.AccessibilityDelegateCompat getItemDelegate()
androidx.core.view.ViewPropertyAnimatorUpdateListener
    public abstract void onAnimationUpdate(android.view.View)
androidx.constraintlayout.solver.ArrayLinkedVariables
    public final boolean containsKey(androidx.constraintlayout.solver.SolverVariable)
    public void invert()
    public void divideByAmount(float)
    public androidx.constraintlayout.solver.SolverVariable chooseSubject(androidx.constraintlayout.solver.LinearSystem)
    public final void updateFromRow(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow,boolean)
    public void updateFromSystem(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow[])
    public final boolean isNew(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.LinearSystem)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState
androidx.lifecycle.ReportFragment
    public final void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
    public final void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
    public final void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
    public androidx.lifecycle.ReportFragment$ActivityInitializationListener mProcessListener
com.google.android.material.snackbar.SnackbarContentLayout
    public static void updateTopBottomPadding(android.view.View,int,int)
androidx.appcompat.widget.ActionBarContextView$1
    public final synthetic androidx.appcompat.widget.ActionBarContextView this$0
android.support.constraint.solver.widgets.ResolutionAnchor
    public void setType(int)
    public void update()
    public void setOpposite(android.support.constraint.solver.widgets.ResolutionAnchor,float)
    public void setOpposite(android.support.constraint.solver.widgets.ResolutionAnchor,int,android.support.constraint.solver.widgets.ResolutionDimension)
    public float getResolvedValue()
    public float computedValue
    public float oppositeOffset
androidx.versionedparcelable.ParcelImpl$1
    public androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel)
    public androidx.versionedparcelable.ParcelImpl[] newArray(int)
androidx.transition.AnimatorUtils$AnimatorPauseListenerCompat
    public abstract void onAnimationPause(android.animation.Animator)
    public abstract void onAnimationResume(android.animation.Animator)
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener
    public abstract boolean onMenuItemClick(android.view.MenuItem)
androidx.transition.Fade$1
    public final synthetic androidx.transition.Fade this$0
com.google.android.material.internal.FlowLayout
    public static int getMeasuredDimension(int,int,int)
com.qy.MenuWindow$9
    public final synthetic com.qy.MenuWindow this$0
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1
androidx.appcompat.app.WindowDecorActionBar$3
    public void onAnimationUpdate(android.view.View)
androidx.appcompat.view.SupportMenuInflater
    public java.lang.Object getRealOwner()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1
    public final synthetic androidx.appcompat.widget.ActionMenuPresenter val$this$0
androidx.recyclerview.widget.RecyclerView$LayoutParams
    public boolean isViewInvalid()
androidx.appcompat.widget.TintTypedArray
    public static androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[])
    public float getFloat(int,float)
    public int getInteger(int,int)
    public java.lang.CharSequence[] getTextArray(int)
    public void recycle()
android.support.constraint.solver.widgets.ResolutionNode
    public void addDependent(android.support.constraint.solver.widgets.ResolutionNode)
    public void reset()
com.google.android.material.chip.ChipGroup$OnCheckedChangeListener
    public abstract void onCheckedChanged(com.google.android.material.chip.ChipGroup,int)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1
    public androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState[] newArray(int)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry
    public java.lang.String getFileName()
    public int getWeight()
    public boolean isItalic()
    public java.lang.String getVariationSettings()
    public int getTtcIndex()
    public int getResourceId()
androidx.core.graphics.PathParser$PathDataNode
androidx.core.app.JobIntentService$WorkEnqueuer
    public void ensureJobId(int)
    public boolean mHasJobId
    public int mJobId
com.google.android.material.floatingactionbutton.FloatingActionButton$1
    public void onShown()
    public void onHidden()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup
androidx.appcompat.app.ToolbarActionBar
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener
    public void <init>(com.google.android.material.chip.ChipGroup)
androidx.appcompat.view.menu.MenuDialogHelper
    public void show(android.os.IBinder)
    public void dismiss()
androidx.core.view.ViewParentCompat
com.google.android.material.shape.ShapePath$1
    public final synthetic com.google.android.material.shape.ShapePath this$0
androidx.transition.Scene
    public static void setCurrentScene(android.view.ViewGroup,androidx.transition.Scene)
    public void exit()
com.google.android.material.badge.BadgeDrawable
    public static com.google.android.material.badge.BadgeDrawable create(android.content.Context)
    public static com.google.android.material.badge.BadgeDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)
    public void setBackgroundColor(int)
    public void setBadgeTextColor(int)
    public void setNumber(int)
    public int getMaxCharacterCount()
    public void setMaxCharacterCount(int)
    public void setBadgeGravity(int)
    public final void loadDefaultStateFromAttributes(android.content.Context,android.util.AttributeSet,int,int)
    public final void setTextAppearanceResource(int)
    public final void setTextAppearance(com.google.android.material.resources.TextAppearance)
    public final void calculateCenterAndBounds(android.content.Context,android.graphics.Rect,android.view.View)
    public final void drawText(android.graphics.Canvas)
    public final void updateMaxBadgeNumber()
com.google.android.material.transformation.FabTransformationBehavior$2
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
androidx.core.widget.PopupWindowCompat
androidx.fragment.app.FragmentTransitionImpl$1
    public final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
com.google.android.material.datepicker.MaterialCalendar$3
    public void onDayClick(long)
androidx.appcompat.widget.SearchView
    public final void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect)
    public final boolean hasVoiceSearch()
    public final void postUpdateFocusedState()
    public final java.lang.CharSequence getDecoratedHint(java.lang.CharSequence)
    public final void updateSearchAutoComplete()
    public final void dismissSuggestions()
    public final void rewriteQueryFromSuggestion(int)
    public final boolean launchSuggestion(int,int,java.lang.String)
    public final void launchIntent(android.content.Intent)
    public final android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo)
    public final android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)
    public androidx.appcompat.widget.SearchView$OnQueryTextListener mOnQueryChangeListener
    public androidx.appcompat.widget.SearchView$OnCloseListener mOnCloseListener
    public androidx.appcompat.widget.SearchView$OnSuggestionListener mOnSuggestionListener
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec
androidx.core.view.NestedScrollingParentHelper
    public void onNestedScrollAccepted(android.view.View,android.view.View,int)
    public void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
    public void onStopNestedScroll(android.view.View,int)
androidx.transition.ChangeBounds$7
    public final synthetic androidx.transition.ChangeBounds this$0
androidx.lifecycle.Lifecycling
    public static java.lang.reflect.Constructor generatedConstructor(java.lang.Class)
    public static int resolveObserverCallbackType(java.lang.Class)
android.support.constraint.solver.widgets.ConstraintWidgetGroup
    public java.util.List getWidgetsToSolve()
    public void updateUnresolvedWidgets()
androidx.core.widget.TintableImageSourceView
    public abstract void setSupportImageTintList(android.content.res.ColorStateList)
    public abstract android.content.res.ColorStateList getSupportImageTintList()
    public abstract void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
    public abstract android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo
    public void assignCoordinateFromPadding(int)
androidx.lifecycle.FullLifecycleObserverAdapter$1
androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback
    public abstract int onGetChildDrawingOrder(int,int)
androidx.appcompat.app.TwilightCalculator
    public static androidx.appcompat.app.TwilightCalculator getInstance()
androidx.transition.ViewUtilsApi22
    static void <clinit>()
androidx.appcompat.view.menu.CascadingMenuPopup
    public final androidx.appcompat.widget.MenuPopupWindow createPopupWindow()
    public final int getInitialMenuPosition()
    public final int getNextMenuPosition(int)
    public final android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder)
    public final android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder)
    public final int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.customview.widget.FocusStrategy
androidx.appcompat.graphics.drawable.StateListDrawable
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable
    public void setEnabled(boolean)
androidx.core.util.Preconditions
androidx.core.provider.FontsContractCompat$FontFamilyResult
    public int getStatusCode()
    public androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()
androidx.core.widget.CompoundButtonCompat
androidx.constraintlayout.widget.ConstraintSet
    public static int lookupID(android.content.res.TypedArray,int,int)
    public final void populateConstraint(androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray)
androidx.core.text.TextUtilsCompat
    public static int getLayoutDirectionFromFirstChar(java.util.Locale)
androidx.appcompat.content.res.AppCompatResources
    public static android.content.res.ColorStateList inflateColorStateList(android.content.Context,int)
    public static android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int)
    public static void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList)
    public static boolean isColorInt(android.content.Context,int)
    public static android.util.TypedValue getTypedValue()
com.google.android.material.bottomsheet.BottomSheetBehavior$4
    public boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation
    public final synthetic com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback
    public final synthetic androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback this$0
androidx.recyclerview.widget.LayoutState
    public boolean hasMore(androidx.recyclerview.widget.RecyclerView$State)
    public android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.lifecycle.ViewModel
    public static void closeWithRuntimeException(java.lang.Object)
    public volatile boolean mCleared
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator
    public com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
android.support.constraint.solver.widgets.ConstraintWidget$1
androidx.core.app.ActivityCompat$PermissionCompatDelegate
androidx.core.app.JobIntentService$CompatWorkEnqueuer
    public final android.content.Context mContext
androidx.core.content.FileProvider$PathStrategy
    public abstract java.io.File getFileForUri(android.net.Uri)
androidx.appcompat.widget.AppCompatTextHelper
    public void setTypefaceByCallback(android.graphics.Typeface)
    public void runOnUiThread(java.lang.Runnable)
    public void setAllCaps(boolean)
    public void onSetCompoundDrawables()
    public void autoSizeText()
    public android.content.res.ColorStateList getCompoundDrawableTintList()
    public void setCompoundDrawableTintList(android.content.res.ColorStateList)
    public android.graphics.PorterDuff$Mode getCompoundDrawableTintMode()
    public void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode)
    public final void setTextSizeInternal(int,float)
    public final void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.widget.ImageViewCompat
com.google.android.material.drawable.DrawableUtils
androidx.appcompat.widget.AlertDialogLayout
    private void setChildFrame(android.view.View,int,int,int,int)
    public final boolean tryOnMeasure(int,int)
com.google.android.material.math.MathUtils
androidx.appcompat.widget.SearchView$OnCloseListener
    public abstract boolean onClose()
androidx.core.widget.ContentLoadingProgressBar
    public final void removeCallbacks()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath
androidx.appcompat.widget.TooltipCompatHandler
    public static void setTooltipText(android.view.View,java.lang.CharSequence)
    public final void scheduleShow()
    public final void cancelPendingShow()
    public final boolean updateAnchorPos(android.view.MotionEvent)
androidx.appcompat.app.AppCompatDialog
    public static int getThemeResId(android.content.Context,int)
    public boolean supportRequestWindowFeature(int)
androidx.appcompat.widget.ViewStubCompat
    public androidx.appcompat.widget.ViewStubCompat$OnInflateListener mInflateListener
androidx.constraintlayout.solver.widgets.Analyzer
com.google.android.material.transformation.FabTransformationScrimBehavior$1
    public final synthetic com.google.android.material.transformation.FabTransformationScrimBehavior this$0
androidx.constraintlayout.solver.LinearSystem
    public static void getMetrics()
    public static androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,boolean)
    static void <clinit>()
    public androidx.constraintlayout.solver.SolverVariable createExtraVariable()
    public void addSingleError(androidx.constraintlayout.solver.ArrayRow,int,int)
    public void minimize()
    public void addGreaterBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean)
    public void addLowerBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean)
    public void addCenterPoint(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int)
    public final void addError(androidx.constraintlayout.solver.ArrayRow)
    public final int enforceBFS(androidx.constraintlayout.solver.LinearSystem$Row)
    public androidx.constraintlayout.solver.ArrayRow[] tempClientsCopy
androidx.appcompat.graphics.drawable.DrawableContainer
androidx.core.view.accessibility.AccessibilityRecordCompat
androidx.transition.ChangeBounds$5
    public void set(android.view.View,android.graphics.PointF)
    public android.graphics.PointF get(android.view.View)
com.google.android.material.datepicker.MaterialCalendar$1
    public final synthetic com.google.android.material.datepicker.MaterialCalendar this$0
com.google.android.material.chip.Chip$ChipTouchHelper
    public int getVirtualViewAt(float,float)
    public void onVirtualViewKeyboardFocusChanged(int,boolean)
    public void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat
androidx.fragment.app.FragmentViewLifecycleOwner
    public void initialize()
    public boolean isInitialized()
    public void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
androidx.constraintlayout.solver.widgets.Snapshot
    public void applyTo(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo
    public void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.cardview.widget.CardViewBaseImpl$1
androidx.core.app.JobIntentService
    public static androidx.core.app.JobIntentService$WorkEnqueuer getWorkEnqueuer(android.content.Context,android.content.ComponentName,boolean,int)
    public boolean mStopped
    public static final java.lang.Object sLock
com.qy.FloatWindow
    public final void initFloatWindow()
    public int windowX
    public int windowY
androidx.fragment.app.FragmentActivity
    public final void markFragmentsCreated()
android.support.constraint.ConstraintLayout
    public final void updateHierarchy()
    public final void setChildrenConstraints()
    public final void internalMeasureChildren(int,int)
    public final void internalMeasureDimensions(int,int)
    public final void setSelfDimensionBehaviour(int,int)
    public int mLastMeasureWidthSize
    public int mLastMeasureHeightSize
    public int mLastMeasureWidthMode
    public int mLastMeasureHeightMode
    public android.support.constraint.solver.Metrics mMetrics
androidx.appcompat.view.ViewPropertyAnimatorCompatSet
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat)
    public void onAnimationsEnded()
androidx.transition.Transition
    public long getStartDelay()
    public android.animation.TimeInterpolator getInterpolator()
    public java.util.List getTargetIds()
    public java.util.List getTargets()
    public java.util.List getTargetNames()
    public java.util.List getTargetTypes()
    public void animate(android.animation.Animator)
    public void cancel()
    public androidx.transition.PathMotion getPathMotion()
    public androidx.transition.Transition$EpicenterCallback getEpicenterCallback()
    public void getPropagation()
    public java.lang.String getName()
    public final void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public final void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray)
    public final void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray)
    public final void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public final void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public final void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps)
    public final void runAnimator(android.animation.Animator,androidx.collection.ArrayMap)
    public android.view.ViewGroup mSceneRoot
    public androidx.transition.TransitionPropagation mPropagation
androidx.constraintlayout.solver.widgets.ResolutionNode
    public void addDependent(androidx.constraintlayout.solver.widgets.ResolutionNode)
    public void reset()
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1
    public com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState
    public boolean hasPanelItems()
    public androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.constraintlayout.solver.widgets.ConstraintWidget
    static void <clinit>()
    public void setMaxWidth(int)
    public void setMaxHeight(int)
    public boolean isSpreadWidth()
    public boolean isSpreadHeight()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getParent()
    public void setWidthWrapContent(boolean)
    public void setHeightWrapContent(boolean)
    public void connectCircularConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int)
    public void setVisibility(int)
    public java.lang.String getDebugName()
    public int getX()
    public int getY()
    public int getDrawX()
    public int getDrawY()
    public int getRootX()
    public int getRootY()
    public float getBiasPercent(int)
    public void setX(int)
    public void setY(int)
    public void setOrigin(int,int)
    public void setHorizontalMatchStyle(int,int,int,float)
    public void setVerticalMatchStyle(int,int,int,float)
    public void setDimensionRatio(java.lang.String)
    public void setHorizontalBiasPercent(float)
    public void setVerticalBiasPercent(float)
    public void setWrapWidth(int)
    public void setWrapHeight(int)
    public void setFrame(int,int,int,int)
    public int getRelativePositioning(int)
    public void setRelativePositioning(int,int)
    public void setHorizontalWeight(float)
    public void setVerticalWeight(float)
    public void setHorizontalChainStyle(int)
    public void setVerticalChainStyle(int)
    public void resetAnchors()
    public boolean isInHorizontalChain()
    public boolean isInVerticalChain()
    public void setupDimensionRatio(boolean,boolean,boolean,boolean)
    public final void addAnchors()
    public boolean mIsWidthWrapContent
    public boolean mIsHeightWrapContent
    public int mDrawWidth
    public int mDrawHeight
    public int mContainerItemSkip
    public boolean mHorizontalWrapVisited
    public boolean mVerticalWrapVisited
    public boolean mHorizontalChainFixedPosition
    public boolean mVerticalChainFixedPosition
    public androidx.constraintlayout.solver.widgets.ConstraintWidget mHorizontalNextWidget
    public androidx.constraintlayout.solver.widgets.ConstraintWidget mVerticalNextWidget
androidx.transition.TransitionUtils
    public static android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup)
androidx.recyclerview.widget.SnapHelper
    public boolean onFling(int,int)
    public void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public int[] calculateScrollDistance(int,int)
    public androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public final void setupCallbacks()
    public final void destroyCallbacks()
    public final boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
androidx.core.view.ViewPropertyAnimatorCompat
    public long getDuration()
    public androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)
    public androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long)
    public void start()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$1
com.google.android.material.animation.TransformationCallback
    public abstract void onTranslationChanged(android.view.View)
    public abstract void onScaleChanged(android.view.View)
androidx.core.content.res.ComplexColorCompat
com.google.android.material.shadow.ShadowViewDelegate
    public abstract void setShadowPadding(int,int,int,int)
    public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public abstract boolean isCompatPaddingEnabled()
androidx.fragment.app.FragmentTabHost
    public final androidx.fragment.app.FragmentTabHost$TabInfo getTabInfoForTag(java.lang.String)
androidx.recyclerview.widget.GapWorker$Task
    public void clear()
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback
    public abstract void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.google.android.material.expandable.ExpandableWidgetHelper
com.google.android.material.card.MaterialCardView$OnCheckedChangeListener
    public abstract void onCheckedChanged(com.google.android.material.card.MaterialCardView,boolean)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer
    public void setOptimizationLevel(int)
    public int getOptimizationLevel()
    public void updateChildrenFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean[])
    public void setRtl(boolean)
    public boolean isRtl()
    public void preOptimize()
    public void optimizeForDimensions(int,int)
    public void optimize()
    public final void addHorizontalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public final void addVerticalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public int mDebugSolverPassCount
androidx.customview.widget.ViewDragHelper
    public static androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback)
    public int getViewDragState()
    public int getEdgeSize()
    public int getTouchSlop()
    public boolean checkTouchSlop(int)
    public boolean checkTouchSlop(int,int)
    public boolean isCapturedViewUnder(int,int)
    public boolean isViewUnder(android.view.View,int,int)
    public final int computeSettleDuration(android.view.View,int,int,int,int)
    public final float distanceInfluenceForSnapDuration(float)
    public final void clearMotionHistory()
    public final void ensureMotionHistorySizeForId(int)
    public final void dragTo(int,int,int,int)
    public final int getEdgesTouched(int,int)
androidx.cardview.widget.RoundRectDrawableWithShadow
    public void setAddPaddingForCorners(boolean)
    public void setAlpha(int)
    public void onBoundsChange(android.graphics.Rect)
    public boolean getPadding(android.graphics.Rect)
    public boolean onStateChange(int[])
    public boolean isStateful()
    public void setColorFilter(android.graphics.ColorFilter)
    public int getOpacity()
    public void setCornerRadius(float)
    public void draw(android.graphics.Canvas)
    public float getCornerRadius()
    public void getMaxShadowAndCornerPadding(android.graphics.Rect)
    public void setShadowSize(float)
    public void setMaxShadowSize(float)
    public float getShadowSize()
    public float getMaxShadowSize()
    public float getMinWidth()
    public float getMinHeight()
    public void setColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getColor()
    public final void setBackground(android.content.res.ColorStateList)
    public final int toEven(float)
    public final void setShadowSize(float,float)
    public final void drawShadow(android.graphics.Canvas)
    public final void buildShadowCorners()
    public final void buildComponents(android.graphics.Rect)
    public final int mInsetShadow
    public android.graphics.Paint mPaint
    public android.graphics.Paint mCornerShadowPaint
    public android.graphics.Paint mEdgeShadowPaint
    public final android.graphics.RectF mCardBounds
    public float mCornerRadius
    public android.graphics.Path mCornerShadowPath
    public float mRawMaxShadowSize
    public float mShadowSize
    public float mRawShadowSize
    public android.content.res.ColorStateList mBackground
    public boolean mDirty
    public final int mShadowStartColor
    public final int mShadowEndColor
    public boolean mAddPaddingForCorners
    public boolean mPrintedShadowClipWarning
    public static androidx.cardview.widget.RoundRectDrawableWithShadow$RoundRectHelper sRoundRectHelper
com.google.android.material.datepicker.MaterialCalendar
    public com.google.android.material.datepicker.Month getCurrentMonth()
    public com.google.android.material.datepicker.CalendarConstraints getCalendarConstraints()
    public com.google.android.material.datepicker.DateSelector getDateSelector()
    public com.google.android.material.datepicker.CalendarStyle getCalendarStyle()
    public void toggleVisibleSelector()
    public final androidx.recyclerview.widget.RecyclerView$ItemDecoration createItemDecoration()
    public final void addActionsToMonthNavigation(android.view.View,com.google.android.material.datepicker.MonthsPagerAdapter)
androidx.core.view.ViewCompat$4
    public java.lang.CharSequence frameworkGet(android.view.View)
    public void frameworkSet(android.view.View,java.lang.CharSequence)
    public boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence)
androidx.arch.core.internal.FastSafeIterableMap
    public java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
    public java.util.Map$Entry ceil(java.lang.Object)
com.google.android.material.chip.ChipGroup$CheckedStateTracker
    public void <init>(com.google.android.material.chip.ChipGroup)
androidx.appcompat.widget.Toolbar
    public final void postShowOverflowMenu()
    public final boolean shouldCollapse()
    public final int getViewListMeasuredWidth(java.util.List,int[])
    public final int getChildVerticalGravity(int)
    public androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener
com.google.android.material.shadow.ShadowRenderer
    public void <init>(int)
    public void drawCornerShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int,float,float)
    public android.graphics.Paint getShadowPaint()
androidx.core.provider.FontsContractCompat$2
    public void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3
    public android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton
    public final float[] mTempPts
androidx.appcompat.widget.SearchView$OnSuggestionListener
    public abstract boolean onSuggestionSelect(int)
    public abstract boolean onSuggestionClick(int)
androidx.appcompat.widget.AppCompatCheckedTextView
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.viewpager.widget.ViewPager$ViewPositionComparator
    public int compare(android.view.View,android.view.View)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl
    public void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)
androidx.viewpager2.adapter.FragmentStateAdapter
androidx.transition.ViewOverlayApi14
androidx.appcompat.widget.LinearLayoutCompat
    public final void setChildFrame(android.view.View,int,int,int,int)
androidx.customview.widget.ExploreByTouchHelper
    public static int keyToDirection(int)
    public static android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect)
    public final boolean dispatchHoverEvent(android.view.MotionEvent)
    public final void onFocusChanged(boolean,int,android.graphics.Rect)
    public final int getAccessibilityFocusedVirtualViewId()
    public final int getKeyboardFocusedVirtualViewId()
    public void onVirtualViewKeyboardFocusChanged(int,boolean)
    public boolean performAction(int,int,android.os.Bundle)
    public abstract int getVirtualViewAt(float,float)
    public void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)
    public void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent)
    public void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public final void getBoundsInParent(int,android.graphics.Rect)
    public final androidx.collection.SparseArrayCompat getAllNodes()
    public final boolean clickKeyboardFocusedVirtualView()
    public final android.view.accessibility.AccessibilityEvent createEvent(int,int)
    public final android.view.accessibility.AccessibilityEvent createEventForHost(int)
    public final android.view.accessibility.AccessibilityEvent createEventForChild(int,int)
    public final androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost()
    public final boolean performActionForHost(int,android.os.Bundle)
    public final boolean performActionForChild(int,int,android.os.Bundle)
    public final boolean isVisibleToUser(android.graphics.Rect)
    public final boolean requestAccessibilityFocus(int)
androidx.transition.ChangeBounds$3
    public void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF)
    public android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds)
com.google.android.material.circularreveal.CircularRevealCompat
androidx.recyclerview.widget.RecyclerView$4
    public void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.widget.AppCompatCompoundButtonHelper
    public void setSupportButtonTintList(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getSupportButtonTintList()
    public void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
    public android.graphics.PorterDuff$Mode getSupportButtonTintMode()
    public void onSetButtonDrawable()
androidx.core.graphics.drawable.WrappedDrawableApi21
    public void <init>(android.graphics.drawable.Drawable)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat
com.google.android.material.resources.TextAppearanceConfig
androidx.core.graphics.TypefaceCompatBaseImpl$1
    public int getWeight(androidx.core.provider.FontsContractCompat$FontInfo)
    public boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo)
    public final synthetic androidx.core.graphics.TypefaceCompatBaseImpl this$0
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams
    public int getAnchorId()
    public androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
    public void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior)
    public void setLastChildRect(android.graphics.Rect)
    public android.graphics.Rect getLastChildRect()
    public boolean checkAnchorChanged()
    public boolean didBlockInteraction()
    public boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public void resetTouchBehaviorTracking()
    public void resetNestedScroll(int)
    public boolean getChangedAfterNestedScroll()
    public void setChangedAfterNestedScroll(boolean)
    public void resetChangedAfterNestedScroll()
    public boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
    public android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public final void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout)
    public final boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout)
    public final boolean shouldDodge(android.view.View,int)
    public java.lang.Object mBehaviorTag
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener
    public abstract void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.google.android.material.internal.ParcelableSparseIntArray$1
    public com.google.android.material.internal.ParcelableSparseIntArray createFromParcel(android.os.Parcel)
    public com.google.android.material.internal.ParcelableSparseIntArray[] newArray(int)
androidx.appcompat.widget.AppCompatHintHelper
androidx.fragment.app.FragmentManagerState$1
    public androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel)
    public androidx.fragment.app.FragmentManagerState[] newArray(int)
androidx.arch.core.internal.SafeIterableMap
    public java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
    public int size()
    public java.util.Map$Entry eldest()
    public java.util.Map$Entry newest()
androidx.cursoradapter.widget.CursorAdapter
    public void init(android.content.Context,android.database.Cursor,int)
    public android.database.Cursor getCursor()
    public abstract android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
    public android.database.Cursor swapCursor(android.database.Cursor)
    public void onContentChanged()
com.google.android.material.datepicker.DateStrings
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1
    public androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int)
androidx.transition.AnimatorUtils
androidx.recyclerview.widget.RecyclerView$LayoutManager
    public final void detachViewInternal(int,android.view.View)
    public final void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View)
    public final int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect)
    public final boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
    public void <init>()
    public void setColorFilter(int,android.graphics.PorterDuff$Mode)
    public boolean onLevelChange(int)
    public void setHotspot(float,float)
    public void setHotspotBounds(int,int,int,int)
    public void setFilterBitmap(boolean)
    public void jumpToCurrentState()
    public void applyTheme(android.content.res.Resources$Theme)
    public void clearColorFilter()
    public android.graphics.drawable.Drawable getCurrent()
    public int getMinimumWidth()
    public int getMinimumHeight()
    public boolean getPadding(android.graphics.Rect)
    public int[] getState()
    public android.graphics.Region getTransparentRegion()
    public void setChangingConfigurations(int)
    public boolean setState(int[])
    public android.graphics.drawable.Drawable mDelegateDrawable
androidx.viewpager.widget.ViewPager
    public static boolean isDecorView(android.view.View)
    public final void removeNonDecorViews()
    public final void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo)
    public final void dispatchOnPageScrolled(int,float,int)
    public final void dispatchOnScrollStateChanged(int)
    public final boolean isGutterDrag(float,float)
    public final void enableLayers(boolean)
    public final int determineTargetPage(int,float,int,int)
    public final void endDrag()
    public int mChildWidthMeasureSpec
    public boolean mNeedCalculatePageOffsets
    public androidx.viewpager.widget.ViewPager$PageTransformer mPageTransformer
    public int mPageTransformerLayerType
    public static final android.view.animation.Interpolator sInterpolator
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper
    public static java.lang.Object accessAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object)
    public static java.lang.reflect.Field getTextViewField(java.lang.String)
    public void loadFromAttributes(android.util.AttributeSet,int)
    public void setAutoSizeTextTypeWithDefaults(int)
    public void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
    public void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
    public int getAutoSizeTextType()
    public int getAutoSizeStepGranularity()
    public int getAutoSizeMinTextSize()
    public int getAutoSizeMaxTextSize()
    public int[] getAutoSizeTextAvailableSizes()
    public void initTempTextPaint(int)
    public android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
    public boolean isAutoSizeEnabled()
    public final void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray)
    public final void clearAutoSizeConfiguration()
    public final void setRawTextSize(float)
    public final boolean suggestedSizeFitsInSpace(int,android.graphics.RectF)
    public final android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
    public final android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int)
    public final android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int)
androidx.transition.ViewGroupOverlayApi14
androidx.appcompat.widget.SwitchCompat$1
    public java.lang.Float get(androidx.appcompat.widget.SwitchCompat)
    public void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float)
androidx.vectordrawable.graphics.drawable.Animatable2Compat
com.qy.TextAppearanceUtil
android.support.constraint.solver.widgets.Helper
    public void add(android.support.constraint.solver.widgets.ConstraintWidget)
    public void removeAllIds()
com.google.android.material.animation.ImageMatrixProperty
    public void set(android.widget.ImageView,android.graphics.Matrix)
    public android.graphics.Matrix get(android.widget.ImageView)
androidx.recyclerview.widget.DefaultItemAnimator
    public void runPendingAnimations()
    public boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
    public final void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo)
androidx.core.view.ViewGroupCompat
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient
    public abstract java.lang.CharSequence convertToString(android.database.Cursor)
    public abstract android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
    public abstract android.database.Cursor getCursor()
    public abstract void changeCursor(android.database.Cursor)
androidx.constraintlayout.solver.widgets.Rectangle
com.google.android.material.chip.Chip
    public static synthetic android.graphics.Rect access$500()
    public final void updateAccessibilityDelegate()
    public final void initMinTouchTarget(android.content.Context,android.util.AttributeSet,int)
    public final void validateAttributes(android.util.AttributeSet)
    public final void initOutlineProvider()
    public final void ensureChipDrawableHasCallback()
    public final void unapplyChipDrawable(com.google.android.material.chip.ChipDrawable)
    public final void applyChipDrawable(com.google.android.material.chip.ChipDrawable)
    public final boolean handleAccessibilityExit(android.view.MotionEvent)
    public final int[] createCloseIconDrawableState()
    public final void insetChipBackgroundDrawable(int,int,int,int)
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener
    public abstract void onDetachedFromWindow()
    public abstract void onAttachedFromWindow()
androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat
android.support.v4.app.INotificationSideChannel
androidx.core.graphics.PathParser$ExtractFloatResult
androidx.cardview.widget.CardViewApi17Impl$1
android.support.constraint.solver.widgets.WidgetContainer
    public void add(android.support.constraint.solver.widgets.ConstraintWidget)
    public android.support.constraint.solver.widgets.ConstraintWidgetContainer getRootConstraintContainer()
    public void removeAllChildren()
com.google.android.material.canvas.CanvasCompat
androidx.transition.WindowIdApi14
com.google.android.material.appbar.AppBarLayout
    public final void updateWillNotDraw()
    public final boolean hasCollapsibleChild()
    public final void invalidateScrollRanges()
    public final void setExpanded(boolean,boolean,boolean)
    public final boolean setLiftableState(boolean)
    public final void startLiftOnScrollElevationOverlayAnimation(com.google.android.material.shape.MaterialShapeDrawable,boolean)
    public final android.view.View findLiftOnScrollTargetView(android.view.View)
    public final void clearLiftOnScrollTargetView()
androidx.customview.widget.ExploreByTouchHelper$2
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int)
    public int size(androidx.collection.SparseArrayCompat)
androidx.transition.ChangeBounds$1
    public void set(android.graphics.drawable.Drawable,android.graphics.PointF)
    public android.graphics.PointF get(android.graphics.drawable.Drawable)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition
androidx.core.app.ActivityRecreator
    public static java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class)
    public static java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class)
    public static java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)
    public static java.lang.reflect.Field getMainThreadField()
    public static java.lang.reflect.Field getTokenField()
    public static java.lang.Class getActivityThreadClass()
com.google.android.material.tabs.TabLayout$AdapterChangeListener
    public void setAutoRefresh(boolean)
androidx.transition.ChangeBounds$ViewBounds
    public final void setLeftTopRightBottom()
android.support.constraint.solver.widgets.Guideline$1
androidx.appcompat.widget.AppCompatTextClassifierHelper
    public void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int)
androidx.transition.TransitionSet$1
    public final synthetic androidx.transition.TransitionSet this$0
com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener
    public abstract void onDragStateChanged(int)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener
    public abstract void onShown()
    public abstract void onHidden()
androidx.customview.view.AbsSavedState$2
    public androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel)
    public androidx.customview.view.AbsSavedState[] newArray(int)
androidx.appcompat.app.TwilightManager
    public static androidx.appcompat.app.TwilightManager getInstance(android.content.Context)
    public boolean isNight()
    public final android.location.Location getLastKnownLocation()
    public final boolean isStateValid()
    public final void updateState(android.location.Location)
androidx.core.view.GravityCompat
com.google.android.material.shape.ShapeAppearancePathProvider$PathListener
    public abstract void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
    public abstract void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
androidx.transition.ChangeBounds
    public final boolean parentMatches(android.view.View,android.view.View)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState
androidx.recyclerview.widget.ScrollbarHelper
android.support.constraint.solver.widgets.Snapshot
    public void applyTo(android.support.constraint.solver.widgets.ConstraintWidget)
com.google.android.material.internal.StateListAnimator
    public void setState(int[])
    public void jumpToCurrentState()
    public final void start(com.google.android.material.internal.StateListAnimator$Tuple)
    public final void cancel()
androidx.fragment.app.FragmentState$1
    public androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel)
    public androidx.fragment.app.FragmentState[] newArray(int)
androidx.recyclerview.widget.AdapterHelper$Callback
    public abstract androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int)
    public abstract void offsetPositionsForRemovingInvisible(int,int)
    public abstract void offsetPositionsForRemovingLaidOutOrNewView(int,int)
    public abstract void markViewHoldersUpdated(int,int,java.lang.Object)
    public abstract void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public abstract void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public abstract void offsetPositionsForAdd(int,int)
    public abstract void offsetPositionsForMove(int,int)
androidx.appcompat.widget.VectorEnabledTintResources
    public void <init>(android.content.Context,android.content.res.Resources)
    public static boolean isCompatVectorFromResourcesEnabled()
    static void <clinit>()
    public android.graphics.drawable.Drawable getDrawable(int)
    public final android.graphics.drawable.Drawable superGetDrawable(int)
    public final java.lang.ref.WeakReference mContextRef
androidx.constraintlayout.solver.widgets.Snapshot$Connection
    public void updateFrom(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void applyTo(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions
    public java.util.Map$Entry next()
com.google.android.material.resources.CancelableFontCallback
    public void cancel()
    public final void updateIfNotCancelled(android.graphics.Typeface)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool
    public void clear()
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int)
    public void factorInCreateTime(int,long)
    public void factorInBindTime(int,long)
    public boolean willCreateInTime(int,long,long)
    public boolean willBindInTime(int,long,long)
androidx.collection.MapCollections$MapIterator
    public java.util.Map$Entry next()
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener
    public androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int)
androidx.cursoradapter.widget.ResourceCursorAdapter
    public android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.constraintlayout.solver.widgets.Barrier
    public void setBarrierType(int)
    public void setAllowsGoneWidget(boolean)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action
    public void <init>(int,int,int,android.view.animation.Interpolator)
    public void jumpTo(int)
    public boolean hasJumpTarget()
    public final void validate()
com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate
    public abstract int[] getState()
androidx.appcompat.view.menu.BaseMenuWrapper
    public final void internalClear()
    public final void internalRemoveGroup(int)
    public final void internalRemoveItem(int)
androidx.core.widget.ListViewAutoScrollHelper
    public void scrollTargetBy(int,int)
    public boolean canTargetScrollHorizontally(int)
    public boolean canTargetScrollVertically(int)
androidx.transition.PropertyValuesHolderUtils
androidx.appcompat.view.ActionBarPolicy
androidx.arch.core.executor.ArchTaskExecutor
    public static final java.util.concurrent.Executor sMainThreadExecutor
    public static final java.util.concurrent.Executor sIOThreadExecutor
androidx.activity.ComponentActivity$NonConfigurationInstances
    public java.lang.Object custom
com.google.android.material.circularreveal.CircularRevealGridLayout
    public final com.google.android.material.circularreveal.CircularRevealHelper helper
androidx.recyclerview.widget.AdapterHelper$UpdateOp
    public java.lang.String cmdToString()
androidx.fragment.app.FragmentManagerImpl
    public static androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(float,float)
    public static void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)
    public static int transitToStyleIndex(int,boolean)
    public boolean executePendingTransactions()
    public void handleOnBackPressed()
    public int getBackStackEntryCount()
    public void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)
    public androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)
    public androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
    public void addRetainedFragment(androidx.fragment.app.Fragment)
    public boolean isDestroyed()
    public void performPendingDeferredStart(androidx.fragment.app.Fragment)
    public boolean isStateAtLeast(int)
    public void moveToState(androidx.fragment.app.Fragment)
    public void ensureInflatedFragmentView(androidx.fragment.app.Fragment)
    public void completeShowHideFragment(androidx.fragment.app.Fragment)
    public void makeInactive(androidx.fragment.app.Fragment)
    public void reportBackStackChanged()
    public void addBackStackState(androidx.fragment.app.BackStackRecord)
    public boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)
    public android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment)
    public void dispatchActivityCreated()
    public void dispatchStart()
    public void dispatchStop()
    public void dispatchDestroyView()
    public void dispatchPrimaryNavigationFragmentChanged()
    public androidx.fragment.app.Fragment getPrimaryNavigationFragment()
    public boolean checkForMenus()
    public final boolean popBackStackImmediate(java.lang.String,int,int)
    public final void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int)
    public final void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)
    public final int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet)
    public final androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment)
    public final void endAnimatingAwayFragments()
androidx.appcompat.view.WindowCallbackWrapper
    public boolean dispatchKeyEvent(android.view.KeyEvent)
    public boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
    public boolean onCreatePanelMenu(int,android.view.Menu)
    public boolean onPreparePanel(int,android.view.View,android.view.Menu)
    public boolean onMenuOpened(int,android.view.Menu)
    public void onPanelClosed(int,android.view.Menu)
    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
    public void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)
    public final android.view.Window$Callback getWrapped()
androidx.core.view.NestedScrollingParent
    public abstract boolean onStartNestedScroll(android.view.View,android.view.View,int)
    public abstract void onNestedScrollAccepted(android.view.View,android.view.View,int)
    public abstract void onStopNestedScroll(android.view.View)
    public abstract void onNestedScroll(android.view.View,int,int,int,int)
    public abstract void onNestedPreScroll(android.view.View,int,int,int[])
    public abstract boolean onNestedFling(android.view.View,float,float,boolean)
    public abstract boolean onNestedPreFling(android.view.View,float,float)
androidx.lifecycle.MethodCallsLogger
    public java.util.Map mCalledMethods
androidx.core.graphics.TypefaceCompatApi24Impl
    public static boolean isUsable()
    public static java.lang.Object newFamily()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState
com.google.android.material.datepicker.MonthAdapter
    public android.widget.TextView getView(int,android.view.View,android.view.ViewGroup)
    public int positionToDay(int)
    public int dayToPosition(int)
    public boolean withinMonth(int)
    public boolean isFirstInRow(int)
    public boolean isLastInRow(int)
    public final void initializeStyles(android.content.Context)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup
    public int getSpan(int)
    public void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)
    public int sizeForPosition(int)
    public final void offsetFullSpansForRemoval(int,int)
    public final void offsetFullSpansForAddition(int,int)
    public final int invalidateFullSpansAfter(int)
androidx.appcompat.widget.DecorToolbar
    public abstract android.view.ViewGroup getViewGroup()
    public abstract android.content.Context getContext()
    public abstract boolean hasExpandedActionView()
    public abstract void collapseActionView()
    public abstract void setWindowCallback(android.view.Window$Callback)
    public abstract void setWindowTitle(java.lang.CharSequence)
    public abstract java.lang.CharSequence getTitle()
    public abstract void initProgress()
    public abstract void initIndeterminateProgress()
    public abstract void setIcon(int)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract void setLogo(int)
    public abstract boolean canShowOverflowMenu()
    public abstract boolean isOverflowMenuShowing()
    public abstract boolean isOverflowMenuShowPending()
    public abstract boolean showOverflowMenu()
    public abstract boolean hideOverflowMenu()
    public abstract void setMenuPrepared()
    public abstract void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
    public abstract void dismissPopupMenus()
    public abstract int getDisplayOptions()
    public abstract void setDisplayOptions(int)
    public abstract void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)
    public abstract void setCollapsible(boolean)
    public abstract void setHomeButtonEnabled(boolean)
    public abstract int getNavigationMode()
    public abstract androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
    public abstract void setVisibility(int)
com.qy.MaxMapInfoWindow
    public static void setMap(android.widget.ImageView,android.widget.ProgressBar,android.widget.TextView,android.widget.TextView,android.widget.LinearLayout,android.widget.LinearLayout,com.qy.Hero)
    public static void setLayoutSrc(android.widget.ImageView,int)
    public void showFloatWindow()
    public android.view.View getMiniMapView()
    public int getWindowX()
    public int getWindowY()
    public final void initFloatWindow()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback
    public abstract void onTranslationChanged()
    public abstract void onScaleChanged()
com.google.android.material.datepicker.Month
    public static com.google.android.material.datepicker.Month today()
    public final long timeInMillis
androidx.appcompat.widget.DropDownListView
    public final void clickPressedItem(android.view.View,int)
    public final void drawSelectorCompat(android.graphics.Canvas)
    public final void positionSelectorLikeTouchCompat(int,android.view.View,float,float)
    public final void positionSelectorLikeFocusCompat(int,android.view.View)
    public final void positionSelectorCompat(int,android.view.View)
    public final void clearPressedItem()
    public final void setPressedItem(android.view.View,int,float,float)
    public final boolean touchModeDrawsInPressedStateCompat()
androidx.appcompat.widget.ListPopupWindow
    public void <init>(android.content.Context)
    public void setPromptPosition(int)
    public boolean isModal()
    public void setAnimationStyle(int)
    public android.view.View getAnchorView()
    public void setAnchorView(android.view.View)
    public void setDropDownGravity(int)
    public int getWidth()
    public void setWidth(int)
    public void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
    public void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
    public void setInputMethodMode(int)
    public void setSelection(int)
    public void clearListSelection()
    public boolean isInputMethodNotNeeded()
    public void setOverlapAnchor(boolean)
    public final void removePromptView()
    public final int buildDropDown()
    public final void setPopupClipToScreenEnabled(boolean)
    public final int getMaxAvailableHeight(android.view.View,int,boolean)
    public boolean mIsAnimatedFromAnchor
    public java.lang.Runnable mShowDropDownRunnable
    public static java.lang.reflect.Method sGetMaxAvailableHeightMethod
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter
androidx.appcompat.widget.MenuPopupWindow
    public void setEnterTransition(java.lang.Object)
    public void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
    public void setTouchModal(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
    public static boolean isBottomSheet(android.view.View)
    public final void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton)
androidx.transition.ViewUtilsBase
    public final void fetchSetFrame()
    public static java.lang.reflect.Method sSetFrameMethod
    public static boolean sSetFrameFetched
androidx.coordinatorlayout.widget.CoordinatorLayout
    public static void releaseTempRect(android.graphics.Rect)
    public static int resolveAnchoredChildGravity(int)
    public static int clamp(int,int,int)
    public final androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat)
    public final void layoutChildWithAnchor(android.view.View,android.view.View,int)
    public final void layoutChildWithKeyline(android.view.View,int,int)
    public final void layoutChild(android.view.View,int)
    public final void offsetChildByInset(android.view.View,android.graphics.Rect,int)
    public final boolean hasDependencies(android.view.View)
androidx.appcompat.view.menu.ActionMenuItem
    public androidx.core.internal.view.SupportMenuItem setActionView(android.view.View)
    public androidx.core.internal.view.SupportMenuItem setActionView(int)
    public androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
    public final int mCategoryOrder
    public int mIconResId
    public android.view.MenuItem$OnMenuItemClickListener mClickListener
androidx.appcompat.widget.AppCompatPopupWindow
    public final void init(android.content.Context,android.util.AttributeSet,int,int)
    public final void setSupportOverlapAnchor(boolean)
androidx.transition.TransitionPropagation
    public abstract long getStartDelay(android.view.ViewGroup,androidx.transition.Transition,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
    public abstract void captureValues(androidx.transition.TransitionValues)
    public abstract java.lang.String[] getPropagationProperties()
androidx.transition.ViewUtilsApi19
    static void <clinit>()
androidx.appcompat.app.AppCompatDelegateImpl$4
    public void <init>(androidx.appcompat.app.AppCompatDelegateImpl)
    public void onFitSystemWindows(android.graphics.Rect)
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl
    public void setPrefetchVector(int,int)
    public void clearPrefetchPositions()
androidx.core.content.res.GradientColorInflaterCompat$ColorStops
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams
    public boolean isFullSpan()
    public final int getSpanIndex()
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult
    public void resetInternal()
androidx.core.view.ViewPropertyAnimatorCompat$2
    public final synthetic androidx.core.view.ViewPropertyAnimatorCompat this$0
com.google.android.material.internal.CheckableImageButton$SavedState$1
    public com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.internal.CheckableImageButton$SavedState[] newArray(int)
androidx.appcompat.view.menu.ListMenuItemView
    public final void insertIconView()
    public int mMenuType
androidx.appcompat.view.menu.MenuPopup
    public void setEpicenterBounds(android.graphics.Rect)
androidx.core.text.TextDirectionHeuristicsCompat
    public static final androidx.core.text.TextDirectionHeuristicCompat ANYRTL_LTR
    public static final androidx.core.text.TextDirectionHeuristicCompat LOCALE
android.support.constraint.solver.widgets.ChainHead
    public static boolean isMatchConstraintEqualityCandidate(android.support.constraint.solver.widgets.ConstraintWidget,int)
    public void define()
    public final void defineChainProperties()
com.google.android.material.datepicker.MonthsPagerAdapter
    public static synthetic com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener access$000(com.google.android.material.datepicker.MonthsPagerAdapter)
    public com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
    public void onBindViewHolder(com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder,int)
    public java.lang.CharSequence getPageTitle(int)
androidx.transition.ObjectAnimatorUtils
androidx.transition.ViewGroupUtils
    public static void hiddenSuppressLayout(android.view.ViewGroup,boolean)
    static void <clinit>()
com.google.android.material.elevation.ElevationOverlayProvider
    public int compositeOverlay(int,float)
    public float calculateOverlayAlphaFraction(float)
    public final boolean isThemeSurfaceColor(int)
androidx.core.graphics.drawable.DrawableCompat
com.google.android.material.floatingactionbutton.FloatingActionButton
    public final com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public final com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl()
    public final com.google.android.material.expandable.ExpandableWidgetHelper expandableWidgetHelper
    public static final int DEF_STYLE_RES
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver
    public void onChanged()
androidx.appcompat.app.AlertController$3
androidx.arch.core.internal.SafeIterableMap$ListIterator
    public java.util.Map$Entry next()
androidx.constraintlayout.solver.widgets.Guideline
    public int getOrientation()
    public void setGuidePercent(float)
    public void setGuideBegin(int)
    public void setGuideEnd(int)
    public int mMinimumPosition
    public androidx.constraintlayout.solver.widgets.Rectangle mHead
    public int mHeadSize
androidx.coordinatorlayout.widget.ViewGroupUtils
    public static void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState
    public final void readFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState
com.google.android.material.transformation.ExpandableTransformationBehavior
    public static synthetic android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet)
com.google.android.material.datepicker.DaysOfWeekAdapter
    public java.lang.Integer getItem(int)
android.support.constraint.solver.Metrics
    public long measures
    public long additionalMeasures
    public long resolutions
    public long tableSizeIncrease
    public long minimize
    public long constraints
    public long simpleconstraints
    public long optimize
    public long iterations
    public long pivots
    public long bfs
    public long errors
    public long slackvariables
    public long extravariables
    public long maxTableSize
    public long fullySolved
    public long graphOptimizer
    public long resolvedWidgets
    public long minimizeGoal
    public long maxVariables
    public long maxRows
    public long centerConnectionResolved
    public long matchConnectionResolved
    public long chainConnectionResolved
    public long barrierConnectionResolved
    public long nonresolvedWidgets
    public long lastTableSize
com.google.android.material.tabs.TabLayout$Tab
    public static synthetic java.lang.CharSequence access$100(com.google.android.material.tabs.TabLayout$Tab)
    public static synthetic java.lang.CharSequence access$200(com.google.android.material.tabs.TabLayout$Tab)
    public static synthetic int access$1000(com.google.android.material.tabs.TabLayout$Tab)
    public android.view.View getCustomView()
    public com.google.android.material.tabs.TabLayout$Tab setCustomView(android.view.View)
    public com.google.android.material.tabs.TabLayout$Tab setCustomView(int)
    public android.graphics.drawable.Drawable getIcon()
    public int getPosition()
    public java.lang.CharSequence getText()
    public com.google.android.material.tabs.TabLayout$Tab setIcon(android.graphics.drawable.Drawable)
    public int getTabLabelVisibility()
    public boolean isSelected()
    public com.google.android.material.tabs.TabLayout$Tab setContentDescription(java.lang.CharSequence)
    public void reset()
    public java.lang.Object tag
com.google.android.material.navigation.NavigationView$SavedState$1
    public com.google.android.material.navigation.NavigationView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.navigation.NavigationView$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.navigation.NavigationView$SavedState[] newArray(int)
androidx.appcompat.app.AlertController
    public static boolean shouldCenterSingleButton(android.content.Context)
    public void installContent()
    public void setCustomTitle(android.view.View)
    public void setMessage(java.lang.CharSequence)
    public void setView(int)
    public void setView(android.view.View)
    public void setView(android.view.View,int,int,int,int)
    public void setIcon(android.graphics.drawable.Drawable)
    public android.widget.ListView getListView()
    public boolean onKeyDown(int,android.view.KeyEvent)
    public boolean onKeyUp(int,android.view.KeyEvent)
    public final int selectContentView()
    public final void setupView()
    public final void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int)
    public final void setupCustomContent(android.view.ViewGroup)
    public final void setupTitle(android.view.ViewGroup)
    public final void setupContent(android.view.ViewGroup)
    public final void setupButtons(android.view.ViewGroup)
androidx.core.provider.FontsContractCompat
    public static android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)
    public static java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)
    public static boolean equalsByteArrayList(java.util.List,java.util.List)
    public static java.util.List convertToByteArrayList(android.content.pm.Signature[])
    public static androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1
    public com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.bottomappbar.BottomAppBar$SavedState[] newArray(int)
androidx.appcompat.graphics.drawable.DrawableWrapper
    public android.graphics.drawable.Drawable getWrappedDrawable()
    public void setWrappedDrawable(android.graphics.drawable.Drawable)
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
    public android.os.Bundle mBundle
    public static final android.os.Bundle sEmptyBundle
com.qy.MenuWindow$18
    public final synthetic com.qy.MenuWindow this$0
com.google.android.material.bottomnavigation.BottomNavigationPresenter
    public void updateMenuView(boolean)
androidx.core.content.FileProvider$SimplePathStrategy
    public void addRoot(java.lang.String,java.io.File)
    public final java.lang.String mAuthority
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
    public static boolean isBottomSheet(android.view.View)
    public final void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback internalAutoHideCallback
    public com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback internalAutoShrinkCallback
androidx.appcompat.widget.SearchView$SavedState$1
    public androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.widget.SearchView$SavedState[] newArray(int)
androidx.constraintlayout.widget.ConstraintSet$1
androidx.constraintlayout.solver.Pools$Pool
androidx.core.app.AppOpsManagerCompat
androidx.collection.MapCollections$EntrySet
    public boolean add(java.util.Map$Entry)
androidx.recyclerview.widget.RecyclerView$6
    public void offsetPositionsForRemovingInvisible(int,int)
    public void offsetPositionsForRemovingLaidOutOrNewView(int,int)
    public void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public void offsetPositionsForAdd(int,int)
    public void offsetPositionsForMove(int,int)
androidx.recyclerview.widget.LinearLayoutManager
    public final void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)
    public final void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
    public final void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
    public final android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public final android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public final android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd()
    public final android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart()
androidx.transition.TransitionSet
    public int getTransitionCount()
    public androidx.transition.TransitionSet setDuration(long)
    public androidx.transition.TransitionSet setStartDelay(long)
    public androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator)
    public androidx.transition.TransitionSet addTarget(android.view.View)
    public androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener)
    public androidx.transition.TransitionSet removeTarget(android.view.View)
    public androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener)
    public final void setupStartEndListeners()
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat
androidx.appcompat.widget.FitWindowsViewGroup
    public abstract void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.core.widget.AutoScrollHelper
    public androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float)
    public androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float)
    public androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float)
    public androidx.core.widget.AutoScrollHelper setEdgeType(int)
    public androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float)
    public androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float)
    public androidx.core.widget.AutoScrollHelper setActivationDelay(int)
    public androidx.core.widget.AutoScrollHelper setRampUpDuration(int)
    public androidx.core.widget.AutoScrollHelper setRampDownDuration(int)
    public abstract void scrollTargetBy(int,int)
    public abstract boolean canTargetScrollHorizontally(int)
    public abstract boolean canTargetScrollVertically(int)
    public final void startAnimating()
    public final void requestStop()
    public final float getEdgeValue(float,float,float,float)
androidx.appcompat.widget.ActivityChooserView
    public boolean showPopup()
    public void showPopupUnchecked(int)
    public final androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter
    public final androidx.appcompat.widget.ActivityChooserView$Callbacks mCallbacks
    public final int mListPopupMaxWidth
    public final android.database.DataSetObserver mModelDataSetObserver
    public android.widget.PopupWindow$OnDismissListener mOnDismissListener
    public boolean mIsSelectingDefaultActivity
    public boolean mIsAttachedToWindow
    public int mDefaultActionButtonContentDescription
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
    public void <init>()
    public void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)
    public static androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static int applyAlpha(int,float)
    public static android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)
    public android.graphics.drawable.Drawable mutate()
    public java.lang.Object getTargetByName(java.lang.String)
    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    public void draw(android.graphics.Canvas)
    public int getAlpha()
    public void setAlpha(int)
    public void setColorFilter(android.graphics.ColorFilter)
    public android.graphics.ColorFilter getColorFilter()
    public android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)
    public void setTint(int)
    public void setTintList(android.content.res.ColorStateList)
    public void setTintMode(android.graphics.PorterDuff$Mode)
    public boolean isStateful()
    public boolean onStateChange(int[])
    public int getOpacity()
    public int getIntrinsicWidth()
    public int getIntrinsicHeight()
    public boolean canApplyTheme()
    public boolean isAutoMirrored()
    public void setAutoMirrored(boolean)
    public void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
    public void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public void setAllowCaching(boolean)
    public void onBoundsChange(android.graphics.Rect)
    public int getChangingConfigurations()
    public void invalidateSelf()
    public void scheduleSelf(java.lang.Runnable,long)
    public boolean setVisible(boolean,boolean)
    public void unscheduleSelf(java.lang.Runnable)
    public final void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
    public final void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public final boolean needMirroring()
    public androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState mVectorState
    public android.graphics.PorterDuffColorFilter mTintFilter
    public android.graphics.ColorFilter mColorFilter
    public boolean mMutated
    public boolean mAllowCaching
    public android.graphics.drawable.Drawable$ConstantState mCachedConstantStateDelegate
    public final float[] mTmpFloats
    public final android.graphics.Matrix mTmpMatrix
    public final android.graphics.Rect mTmpBounds
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int)
androidx.transition.FragmentTransitionSupport$1
    public final synthetic android.graphics.Rect val$epicenter
    public final synthetic androidx.transition.FragmentTransitionSupport this$0
com.google.android.material.animation.ArgbEvaluatorCompat
    public static com.google.android.material.animation.ArgbEvaluatorCompat getInstance()
    public java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer)
androidx.viewpager2.widget.ViewPager2$SmoothScrollToPosition
androidx.recyclerview.widget.RecyclerView$RecyclerListener
    public abstract void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment
    public float getFabDiameter()
    public void setFabDiameter(float)
    public void setHorizontalOffset(float)
    public float getCradleVerticalOffset()
    public void setCradleVerticalOffset(float)
    public float getFabCradleMargin()
    public void setFabCradleMargin(float)
    public float getFabCradleRoundedCornerRadius()
    public void setFabCradleRoundedCornerRadius(float)
com.google.android.material.button.MaterialButton
    public final boolean isLayoutRTL()
    public final void resetIconDrawable(boolean)
    public com.google.android.material.button.MaterialButton$OnPressedChangeListener onPressedChangeListenerInternal
androidx.lifecycle.LifecycleRegistry$1
androidx.core.widget.TintableCompoundButton
    public abstract void setSupportButtonTintList(android.content.res.ColorStateList)
    public abstract android.content.res.ColorStateList getSupportButtonTintList()
    public abstract void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.transition.Visibility
    public void setMode(int)
    public void captureStartValues(androidx.transition.TransitionValues)
    public android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int)
    public abstract android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
    public android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int)
androidx.transition.ChangeBounds$10
    public final synthetic androidx.transition.ChangeBounds this$0
com.google.android.material.datepicker.CalendarConstraints$1
    public com.google.android.material.datepicker.CalendarConstraints createFromParcel(android.os.Parcel)
    public com.google.android.material.datepicker.CalendarConstraints[] newArray(int)
com.google.android.material.snackbar.SnackbarManager
    public static com.google.android.material.snackbar.SnackbarManager getInstance()
    public final boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int)
    public final boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)
    public final void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)
androidx.fragment.app.FragmentTransitionCompat21$4
    public final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.constraintlayout.solver.LinearSystem$Row
    public abstract androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[])
    public abstract void clear()
    public abstract void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row)
    public abstract androidx.constraintlayout.solver.SolverVariable getKey()
com.qy.MiniMapWindow
    public static void updateBuffView(boolean)
    public static void updateHeroView(boolean)
    public static void setLayoutXY(android.widget.ImageView,int,int)
    public static void setLayoutSrc(android.widget.ImageView,int)
    public void showFloatWindow()
    public android.view.View getMiniMapView()
    public final void initFloatWindow()
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
    public final synthetic androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer this$1
android.support.constraint.solver.LinearSystem$Row
    public abstract android.support.constraint.solver.SolverVariable getPivotCandidate(android.support.constraint.solver.LinearSystem,boolean[])
    public abstract void clear()
    public abstract void initFromRow(android.support.constraint.solver.LinearSystem$Row)
    public abstract android.support.constraint.solver.SolverVariable getKey()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
    public static int getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout)
    public final void offsetChildAsNeeded(android.view.View,android.view.View)
    public final void updateLiftedStateIfNeeded(android.view.View,android.view.View)
android.support.constraint.ConstraintSet$Constraint
    public synthetic void <init>(android.support.constraint.ConstraintSet$1)
    public static synthetic void access$200(android.support.constraint.ConstraintSet$Constraint,android.support.constraint.ConstraintHelper,int,android.support.constraint.Constraints$LayoutParams)
    public static synthetic void access$300(android.support.constraint.ConstraintSet$Constraint,int,android.support.constraint.Constraints$LayoutParams)
    public android.support.constraint.ConstraintSet$Constraint clone()
    public final void fillFromConstraints(android.support.constraint.ConstraintHelper,int,android.support.constraint.Constraints$LayoutParams)
    public final void fillFrom(int,android.support.constraint.ConstraintLayout$LayoutParams)
    public int mViewId
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.TintResources
    public void <init>(android.content.Context,android.content.res.Resources)
    public android.graphics.drawable.Drawable getDrawable(int)
    public final java.lang.ref.WeakReference mContextRef
com.google.android.material.badge.BadgeDrawable$SavedState$1
    public com.google.android.material.badge.BadgeDrawable$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.badge.BadgeDrawable$SavedState[] newArray(int)
androidx.appcompat.app.AlertController$5
androidx.core.view.accessibility.AccessibilityNodeInfoCompat
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain()
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public static java.lang.String getActionSymbolicName(int)
    static void <clinit>()
    public android.view.accessibility.AccessibilityNodeInfo unwrap()
    public void setSource(android.view.View,int)
    public int getChildCount()
    public void addChild(android.view.View,int)
    public int getActions()
    public void addAction(int)
    public void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
    public void setParent(android.view.View)
    public void setParent(android.view.View,int)
    public void getBoundsInParent(android.graphics.Rect)
    public void setBoundsInParent(android.graphics.Rect)
    public void getBoundsInScreen(android.graphics.Rect)
    public void setBoundsInScreen(android.graphics.Rect)
    public boolean isCheckable()
    public void setCheckable(boolean)
    public void setChecked(boolean)
    public boolean isFocusable()
    public void setFocusable(boolean)
    public boolean isFocused()
    public void setFocused(boolean)
    public void setVisibleToUser(boolean)
    public void setAccessibilityFocused(boolean)
    public boolean isSelected()
    public boolean isClickable()
    public void setClickable(boolean)
    public boolean isLongClickable()
    public void setEnabled(boolean)
    public void setScrollable(boolean)
    public java.lang.CharSequence getPackageName()
    public void setPackageName(java.lang.CharSequence)
    public void setClassName(java.lang.CharSequence)
    public void setText(java.lang.CharSequence)
    public void addSpansToExtras(java.lang.CharSequence,android.view.View)
    public void setContentDescription(java.lang.CharSequence)
    public void recycle()
    public java.lang.String getViewIdResourceName()
    public void setContentInvalid(boolean)
    public void setError(java.lang.CharSequence)
    public void setPaneTitle(java.lang.CharSequence)
    public void setScreenReaderFocusable(boolean)
    public boolean isShowingHintText()
    public void setShowingHintText(boolean)
    public void setHeading(boolean)
    public final android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View)
    public final android.util.SparseArray getSpansFromViewTags(android.view.View)
    public final int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray)
    public final boolean hasSpans()
    public final void clearExtrasSpans()
    public final void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int)
    public final void removeCollectedSpans(android.view.View)
    public final boolean getBooleanProperty(int)
com.google.android.material.shape.MaterialShapeDrawable
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
    public static int modulateAlpha(int,int)
    public synthetic void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState,com.google.android.material.shape.MaterialShapeDrawable$1)
    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    public android.content.res.ColorStateList getTintList()
    public void setStrokeWidth(float)
    public void setCornerSize(float)
    public void setPadding(int,int,int,int)
    public boolean isElevationOverlayEnabled()
    public float getParentAbsoluteElevation()
    public void setParentAbsoluteElevation(float)
    public float getElevation()
    public float getTranslationZ()
    public void setShadowCompatRotation(int)
    public int getShadowRadius()
    public void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.RectF)
    public float getTopRightCornerResolvedSize()
    public float getBottomLeftCornerResolvedSize()
    public float getBottomRightCornerResolvedSize()
    public final boolean requiresCompatShadow()
    public final void invalidateSelfIgnoreShape()
    public final boolean hasCompatShadow()
    public final boolean hasFill()
    public final void drawFillShape(android.graphics.Canvas)
    public final void drawStrokeShape(android.graphics.Canvas)
    public final void prepareCanvasForShadow(android.graphics.Canvas)
    public final void drawCompatShadow(android.graphics.Canvas)
    public final void calculateStrokePath()
    public final android.graphics.PorterDuffColorFilter calculatePaintColorTintFilter(android.graphics.Paint,boolean)
    public final android.graphics.PorterDuffColorFilter calculateTintColorTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean)
androidx.appcompat.widget.SuggestionsAdapter
    public final java.lang.CharSequence formatUrl(java.lang.CharSequence)
    public final void setViewText(android.widget.TextView,java.lang.CharSequence)
    public final android.graphics.drawable.Drawable getIcon1(android.database.Cursor)
    public final android.graphics.drawable.Drawable getIcon2(android.database.Cursor)
    public final void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int)
    public final android.graphics.drawable.Drawable getDrawable(android.net.Uri)
    public final android.graphics.drawable.Drawable checkIconCache(java.lang.String)
    public final void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable)
    public final android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor)
    public final android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName)
    public final android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)
    public final android.app.SearchManager mSearchManager
androidx.recyclerview.widget.RecyclerView$ItemAnimator
    public long getAddDuration()
    public long getRemoveDuration()
    public long getChangeDuration()
    public void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract void runPendingAnimations()
    public final void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1
android.support.constraint.ConstraintLayout$LayoutParams
    public float dimensionRatioValue
androidx.recyclerview.widget.RecyclerView$Recycler
    public void setViewCacheSize(int)
    public java.util.List getScrapList()
    public boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public android.view.View getViewForPosition(int)
    public android.view.View getViewForPosition(int,boolean)
    public void quickRecycleScrapView(android.view.View)
    public int getScrapCount()
    public android.view.View getScrapViewAt(int)
    public void clearScrap()
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean)
    public void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
    public void offsetPositionRecordsForMove(int,int)
    public void offsetPositionRecordsForInsert(int,int)
    public void offsetPositionRecordsForRemove(int,int,boolean)
    public void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
    public void viewRangeUpdate(int,int)
    public void markKnownViewsInvalid()
    public void clearOldPositions()
    public void markItemDecorInsetsDirty()
    public final boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long)
    public final void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ViewCacheExtension mViewCacheExtension
androidx.constraintlayout.solver.widgets.Chain
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3
com.google.android.material.button.MaterialButtonToggleGroup
    public static void updateBuilderWithCornerData(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.button.MaterialButtonToggleGroup$CornerData)
    static void <clinit>()
    public final void resetChildMargins(int)
    public final boolean isChildVisible(int)
    public final com.google.android.material.button.MaterialButtonToggleGroup$CornerData getNewCornerData(int,int,int)
    public final void checkForced(int)
    public final android.widget.LinearLayout$LayoutParams buildLayoutParams(android.view.View)
    public final void updateChildOrder()
    public final com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker checkedStateTracker
    public final com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker pressedStateTracker
    public boolean skipCheckedStateTracker
androidx.viewpager.widget.PagerTitleStrip
    public final androidx.viewpager.widget.PagerTitleStrip$PageListener mPageListener
    public static final int[] ATTRS
    public static final int[] TEXT_ATTRS
com.google.android.material.textfield.TextInputLayout
    public static void updateCounterContentDescription(android.content.Context,android.widget.TextView,int,int,boolean)
    public static void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener)
    public static void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener)
    public final void assignBoxBackgroundByMode()
    public final void setEditTextBoxBackground()
    public final boolean shouldUseEditTextBackgroundForBoxBackground()
    public final android.graphics.Rect calculateCollapsedTextBounds(android.graphics.Rect)
    public final android.graphics.Rect calculateExpandedTextBounds(android.graphics.Rect)
    public final int calculateExpandedLabelTop(android.graphics.Rect,float)
    public final int calculateExpandedLabelBottom(android.graphics.Rect,android.graphics.Rect,float)
    public final boolean isSingleLineFilledTextField()
    public final int calculateBoxBackgroundColor()
    public final void applyBoxUnderlineAttributes()
    public final boolean canDrawOutlineStroke()
    public final boolean updateEditTextHeightBasedOnIcon()
    public final void dispatchOnEditTextAttached()
    public final boolean hasStartIcon()
    public final void dispatchOnEndIconChanged(int)
    public final void tintEndIconOnError(boolean)
    public final void updateBoxUnderlineBounds(android.graphics.Rect)
    public final void drawHint(android.graphics.Canvas)
    public final void drawBoxUnderline(android.graphics.Canvas)
    public final void collapseHint(boolean)
    public final void closeCutout()
    public final void applyCutoutPadding(android.graphics.RectF)
    public final void expandHint(boolean)
com.google.android.material.behavior.SwipeDismissBehavior
    public static int clamp(int,int,int)
    public static float fraction(float,float,float)
    public final void ensureViewDragHelper(android.view.ViewGroup)
com.google.android.material.datepicker.MaterialCalendarGridView$1
    public final synthetic com.google.android.material.datepicker.MaterialCalendarGridView this$0
com.google.android.material.internal.NavigationMenuPresenter
androidx.core.view.WindowInsetsCompat
    public static java.lang.Object unwrap(androidx.core.view.WindowInsetsCompat)
    public androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int)
androidx.appcompat.widget.TooltipPopup
    public static android.view.View getAppRootView(android.view.View)
    public void show(android.view.View,int,int,boolean,java.lang.CharSequence)
    public final void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)
com.google.android.material.datepicker.DateValidatorPointForward
    public void <init>(long)
androidx.appcompat.app.AppCompatActivity
    public final boolean performMenuItemShortcut(int,android.view.KeyEvent)
androidx.appcompat.widget.ForwardingListener
    public static boolean pointInView(android.view.View,float,float,float)
    public void onLongPress()
    public final boolean onTouchObserved(android.view.MotionEvent)
    public final boolean onTouchForwarded(android.view.MotionEvent)
    public final boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent)
    public final boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent)
com.google.android.material.circularreveal.CircularRevealFrameLayout
    public final com.google.android.material.circularreveal.CircularRevealHelper helper
androidx.appcompat.view.menu.MenuBuilder
    public static int getOrdering(int)
    public static int findInsertIndex(java.util.ArrayList,int)
    public androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int)
    public void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
    public int findItemIndex(int)
    public int findGroupIndex(int)
    public int findGroupIndex(int,int)
    public android.content.res.Resources getResources()
    public android.content.Context getContext()
    public void changeMenuMode()
    public void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl)
    public java.util.ArrayList getActionItems()
    public java.util.ArrayList getNonActionItems()
    public androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View)
    public java.lang.CharSequence getHeaderTitle()
    public android.graphics.drawable.Drawable getHeaderIcon()
    public android.view.View getHeaderView()
    public boolean getOptionalIconsVisible()
    public androidx.appcompat.view.menu.MenuItemImpl getExpandedItem()
    public void setOverrideVisibleItems(boolean)
    public final void dispatchPresenterUpdate(boolean)
    public final boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter)
    public final void dispatchSaveInstanceState(android.os.Bundle)
    public final void dispatchRestoreInstanceState(android.os.Bundle)
    public final androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int)
    public final void setShortcutsVisibleInner(boolean)
com.google.android.material.datepicker.YearGridAdapter
    public static synthetic com.google.android.material.datepicker.MaterialCalendar access$000(com.google.android.material.datepicker.YearGridAdapter)
    public com.google.android.material.datepicker.YearGridAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
    public void onBindViewHolder(com.google.android.material.datepicker.YearGridAdapter$ViewHolder,int)
    public int getYearForPosition(int)
    public final android.view.View$OnClickListener createYearClickListener(int)
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo
    public android.widget.ListView getListView()
androidx.recyclerview.widget.ViewInfoStore$InfoRecord
    public static void drainCache()
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
    public static int findFirstKeyLessThan(android.util.SparseIntArray,int)
    public void invalidateSpanIndexCache()
    public void invalidateSpanGroupIndexCache()
    public abstract int getSpanIndex(int,int)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
    public boolean mCreatingLoader
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
    public abstract android.view.View getViewForPositionAndType(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
android.support.constraint.solver.widgets.Guideline
    public int getOrientation()
    public void setGuidePercent(float)
    public void setGuideBegin(int)
    public void setGuideEnd(int)
    public int mMinimumPosition
    public android.support.constraint.solver.widgets.Rectangle mHead
    public int mHeadSize
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)
androidx.appcompat.widget.ThemeUtils
    public static android.util.TypedValue getTypedValue()
    public static int getThemeAttrColor(android.content.Context,int,float)
    public static final int[] ACTIVATED_STATE_SET
    public static final int[] SELECTED_STATE_SET
    public static final int[] NOT_PRESSED_OR_FOCUSED_STATE_SET
com.google.android.material.radiobutton.MaterialRadioButton
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.AppCompatRatingBar
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.recyclerview.widget.FastScroller
    public void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public void requestRedraw()
    public void hide(int)
    public void updateScrollPosition(int,int)
    public boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
    public void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
    public final void setupCallbacks()
    public final void destroyCallbacks()
    public final void resetHideDelay(int)
    public final void drawVerticalScrollbar(android.graphics.Canvas)
    public final void drawHorizontalScrollbar(android.graphics.Canvas)
    public final void verticalScrollTo(float)
    public final void horizontalScrollTo(float)
    public final int[] getVerticalRange()
    public final int[] getHorizontalRange()
androidx.transition.ViewUtils$1
    public java.lang.Float get(android.view.View)
    public void set(android.view.View,java.lang.Float)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4
    public void set(android.view.View,java.lang.Float)
    public java.lang.Float get(android.view.View)
androidx.constraintlayout.solver.widgets.WidgetContainer
    public void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer getRootConstraintContainer()
    public void removeAllChildren()
androidx.core.text.BidiFormatter
    public boolean getStereoReset()
    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)
    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence)
    public final java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
    public final java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
androidx.appcompat.widget.ActionMenuView
    public final void onMeasureExactFormat(int,int)
androidx.core.widget.AutoScrollHelper$ClampedScroller
    public void setRampUpDuration(int)
    public void setRampDownDuration(int)
    public boolean isFinished()
    public void computeScrollDelta()
    public void setTargetVelocity(float,float)
    public int getHorizontalDirection()
    public int getVerticalDirection()
    public int getDeltaX()
    public int getDeltaY()
    public final float interpolateValue(float)
androidx.appcompat.widget.RtlSpacingHelper
    public int getLeft()
    public int getRight()
    public int getStart()
    public int getEnd()
    public void setAbsolute(int,int)
    public void setDirection(boolean)
com.google.android.material.behavior.SwipeDismissBehavior$1
    public final boolean shouldDismiss(android.view.View,float)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState
    public android.view.View nextViewInLimitedList(android.view.View)
    public final android.view.View nextViewFromScrapList()
    public boolean mIsPreLayout
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1
    public void onEnd()
androidx.constraintlayout.widget.ConstraintSet$Constraint
    public synthetic void <init>(androidx.constraintlayout.widget.ConstraintSet$1)
    public static synthetic void access$200(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams)
    public static synthetic void access$300(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.Constraints$LayoutParams)
    public androidx.constraintlayout.widget.ConstraintSet$Constraint clone()
    public final void fillFromConstraints(androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams)
    public final void fillFrom(int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams)
com.google.android.material.bottomnavigation.BottomNavigationItemView
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public final void tryUpdateBadgeBounds(android.view.View)
    public final void tryAttachBadgeToAnchor(android.view.View)
androidx.core.provider.FontRequest
    public java.lang.String getProviderAuthority()
    public java.lang.String getProviderPackage()
    public java.lang.String getQuery()
    public java.util.List getCertificates()
    public int getCertificatesArrayResId()
    public java.lang.String getIdentifier()
androidx.recyclerview.widget.ViewInfoStore
    public void clear()
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long)
    public void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback)
    public void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.view.ActionProvider
    public abstract android.view.View onCreateActionView()
    public boolean onPerformDefaultAction()
    public boolean hasSubMenu()
    public void onPrepareSubMenu(android.view.SubMenu)
    public void subUiVisibilityChanged(boolean)
    public void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener)
    public void reset()
    public final android.content.Context mContext
android.support.constraint.solver.widgets.ConstraintAnchor$1
com.google.android.material.card.MaterialCardViewHelper
com.google.android.material.textfield.PasswordToggleEndIconDelegate$3
    public final synthetic com.google.android.material.textfield.PasswordToggleEndIconDelegate this$0
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span
    public void cacheReferenceLineAndClear(boolean,int)
    public void invalidateCache()
    public void setLine(int)
    public int getDeletedSize()
    public void onOffset(int)
    public int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl
    public void setBackgroundTintList(android.content.res.ColorStateList)
    public void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
    public final void setElevation(float)
    public float getHoveredFocusedTranslationZ()
    public float getPressedTranslationZ()
    public final void setHoveredFocusedTranslationZ(float)
    public final void setPressedTranslationZ(float)
    public final void updateImageMatrixScale()
    public final void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel)
    public final com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance()
    public final com.google.android.material.animation.MotionSpec getShowMotionSpec()
    public final void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
    public final com.google.android.material.animation.MotionSpec getHideMotionSpec()
    public final void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
    public boolean getEnsureMinTouchTargetSize()
    public void setEnsureMinTouchTargetSize(boolean)
    public void setShadowPaddingEnabled(boolean)
    public void addOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void addOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)
    public void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)
    public void addTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback)
    public final android.graphics.drawable.Drawable getContentBackground()
    public void onPaddingUpdated(android.graphics.Rect)
    public void onAttachedToWindow()
    public void onDetachedFromWindow()
    public void onPreDraw()
    public final com.google.android.material.animation.MotionSpec getDefaultShowMotionSpec()
    public final com.google.android.material.animation.MotionSpec getDefaultHideMotionSpec()
    public final void workAroundOreoBug(android.animation.ObjectAnimator)
    public final android.view.ViewTreeObserver$OnPreDrawListener getOrCreatePreDrawListener()
    public com.google.android.material.floatingactionbutton.BorderDrawable borderDrawable
androidx.lifecycle.ClassesInfoCache$CallbackInfo
    public void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
com.google.android.material.chip.ChipGroup
    public com.google.android.material.chip.ChipGroup$OnCheckedChangeListener onCheckedChangeListener
androidx.viewpager2.widget.ViewPager2$AccessibilityProvider
androidx.loader.app.LoaderManagerImpl$LoaderInfo
    public void getLoader()
    public void markForRedelivery()
    public void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public final androidx.loader.content.Loader mLoader
    public androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver
    public androidx.loader.content.Loader mPriorLoader
androidx.recyclerview.widget.LinearSmoothScroller
    public void onStart()
    public void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
    public void onStop()
    public int calculateTimeForDeceleration(int)
    public int getHorizontalSnapPreference()
    public int getVerticalSnapPreference()
    public void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
    public int calculateDyToMakeVisible(android.view.View,int)
    public int calculateDxToMakeVisible(android.view.View,int)
    public final float getSpeedPerPixel()
    public final int clampApplyScroll(int,int)
androidx.transition.FragmentTransitionSupport$2
    public final synthetic androidx.transition.FragmentTransitionSupport this$0
androidx.collection.ArraySet
    public void <init>(int)
    public void ensureCapacity(int)
    public java.lang.Object valueAt(int)
    public final androidx.collection.MapCollections getCollection()
android.support.constraint.ConstraintSet
    public static final int[] VISIBILITY_FLAGS
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener
    public void onStartEnterTransition()
    public void startListening()
    public boolean isReady()
    public void cancelTransaction()
com.google.android.material.transformation.FabTransformationScrimBehavior
    public final void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List)
com.google.android.material.shape.MaterialShapeDrawable$1
    public void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
    public void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
com.google.android.material.datepicker.UtcDates
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB
    public final synthetic androidx.appcompat.view.menu.MenuItemWrapperICS this$0
androidx.core.graphics.TypefaceCompatApi21Impl
    public static java.lang.Object newFamily()
    public static android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
    static void <clinit>()
androidx.savedstate.SavedStateRegistry
    public android.os.Bundle consumeRestoredStateForKey(java.lang.String)
    public void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle)
    public boolean mAllowingSavingState
androidx.appcompat.widget.AppCompatDrawableManager
    public static synthetic android.graphics.PorterDuff$Mode access$000()
com.google.android.material.appbar.AppBarLayout$LayoutParams
    public int getScrollFlags()
    public boolean isCollapsible()
androidx.recyclerview.widget.ChildHelper
    public void addView(android.view.View,boolean)
    public void removeView(android.view.View)
    public void removeViewAt(int)
    public void removeAllViewsUnfiltered()
    public android.view.View findHiddenNonRemovedView(int)
    public void hide(android.view.View)
    public void unhide(android.view.View)
    public boolean removeViewIfHidden(android.view.View)
    public final void hideViewInternal(android.view.View)
androidx.appcompat.widget.Toolbar$1
    public boolean onMenuItemClick(android.view.MenuItem)
androidx.constraintlayout.solver.widgets.ResolutionAnchor
    public void setType(int)
    public void update()
    public void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,float)
    public void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int,androidx.constraintlayout.solver.widgets.ResolutionDimension)
    public float getResolvedValue()
    public float computedValue
    public float oppositeOffset
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition
com.google.android.material.resources.MaterialResources
android.support.constraint.solver.widgets.ConstraintAnchor
    public android.support.constraint.solver.widgets.ResolutionAnchor getResolutionNode()
    public android.support.constraint.solver.SolverVariable getSolverVariable()
    public android.support.constraint.solver.widgets.ConstraintWidget getOwner()
    public android.support.constraint.solver.widgets.ConstraintAnchor$Type getType()
    public android.support.constraint.solver.widgets.ConstraintAnchor getTarget()
    public boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor,int,android.support.constraint.solver.widgets.ConstraintAnchor$Strength,int)
    public boolean isValidConnection(android.support.constraint.solver.widgets.ConstraintAnchor)
    public android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType mConnectionType
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator
androidx.core.view.ViewCompat
    public static android.graphics.Rect getEmptyTempRect()
    public static void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
    public static void compatOffsetTopAndBottom(android.view.View,int)
    public static void compatOffsetLeftAndRight(android.view.View,int)
    public static void tickleInvalidationFlag(android.view.View)
    public static androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty()
    public static androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()
    public static boolean isAccessibilityHeading(android.view.View)
    public static void setAccessibilityHeading(android.view.View,boolean)
    public static java.lang.reflect.Field sMinWidthField
    public static boolean sMinWidthFieldFetched
    public static java.lang.reflect.Field sMinHeightField
    public static boolean sMinHeightFieldFetched
    public static java.util.WeakHashMap sTransitionNameMap
    public static java.lang.ThreadLocal sThreadLocalRect
    public static final int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS
    public static androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager
androidx.core.text.PrecomputedTextCompat$Params
    public android.text.TextPaint getTextPaint()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams
    public float dimensionRatioValue
androidx.appcompat.widget.ResourcesWrapper
    public void <init>(android.content.res.Resources)
    public java.lang.CharSequence getText(int)
    public java.lang.CharSequence getQuantityText(int,int)
    public java.lang.String getString(int)
    public varargs java.lang.String getString(int,java.lang.Object[])
    public varargs java.lang.String getQuantityString(int,int,java.lang.Object[])
    public java.lang.String getQuantityString(int,int)
    public java.lang.CharSequence getText(int,java.lang.CharSequence)
    public java.lang.CharSequence[] getTextArray(int)
    public java.lang.String[] getStringArray(int)
    public int[] getIntArray(int)
    public android.content.res.TypedArray obtainTypedArray(int)
    public float getDimension(int)
    public int getDimensionPixelOffset(int)
    public int getDimensionPixelSize(int)
    public float getFraction(int,int,int)
    public android.graphics.drawable.Drawable getDrawable(int)
    public android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)
    public android.graphics.drawable.Drawable getDrawableForDensity(int,int)
    public android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme)
    public android.graphics.Movie getMovie(int)
    public int getColor(int)
    public android.content.res.ColorStateList getColorStateList(int)
    public boolean getBoolean(int)
    public int getInteger(int)
    public android.content.res.XmlResourceParser getLayout(int)
    public android.content.res.XmlResourceParser getAnimation(int)
    public android.content.res.XmlResourceParser getXml(int)
    public java.io.InputStream openRawResource(int)
    public java.io.InputStream openRawResource(int,android.util.TypedValue)
    public android.content.res.AssetFileDescriptor openRawResourceFd(int)
    public void getValue(int,android.util.TypedValue,boolean)
    public void getValueForDensity(int,int,android.util.TypedValue,boolean)
    public void getValue(java.lang.String,android.util.TypedValue,boolean)
    public android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])
    public void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)
    public android.util.DisplayMetrics getDisplayMetrics()
    public android.content.res.Configuration getConfiguration()
    public int getIdentifier(java.lang.String,java.lang.String,java.lang.String)
    public java.lang.String getResourceName(int)
    public java.lang.String getResourcePackageName(int)
    public java.lang.String getResourceTypeName(int)
    public java.lang.String getResourceEntryName(int)
    public void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)
    public void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)
    public final android.content.res.Resources mResources
androidx.lifecycle.ViewModelProvider
android.support.constraint.solver.ArrayLinkedVariables
    public final boolean containsKey(android.support.constraint.solver.SolverVariable)
    public void invert()
    public void divideByAmount(float)
    public android.support.constraint.solver.SolverVariable chooseSubject(android.support.constraint.solver.LinearSystem)
    public final void updateFromRow(android.support.constraint.solver.ArrayRow,android.support.constraint.solver.ArrayRow,boolean)
    public void updateFromSystem(android.support.constraint.solver.ArrayRow,android.support.constraint.solver.ArrayRow[])
    public final boolean isNew(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.LinearSystem)
androidx.viewpager2.adapter.FragmentStateAdapter$2
    public final synthetic androidx.viewpager2.adapter.FragmentViewHolder val$holder
    public final synthetic androidx.viewpager2.adapter.FragmentStateAdapter this$0
androidx.recyclerview.widget.RecyclerView$SmoothScroller
    public void setTargetPosition(int)
    public androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
    public boolean isPendingInitialRun()
    public boolean isRunning()
    public int getTargetPosition()
    public int getChildCount()
    public android.view.View findViewByPosition(int)
    public void onChildAttachedToWindow(android.view.View)
    public void normalize(android.graphics.PointF)
    public abstract void onStart()
    public abstract void onStop()
    public abstract void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
androidx.loader.app.LoaderManagerImpl
    static void <clinit>()
    public void markForRedelivery()
    public void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.loader.app.LoaderManager
    public abstract void markForRedelivery()
    public abstract void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.widget.AppCompatSpinner
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.Toolbar$LayoutParams
    public void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback
    public abstract androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.recyclerview.widget.SimpleItemAnimator
    public boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
    public void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
    public void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
androidx.core.provider.SelfDestructiveThread$2
    public final synthetic androidx.core.provider.SelfDestructiveThread this$0
androidx.transition.Fade
    public android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl
    public boolean dispatchOnCreate()
androidx.core.app.JobIntentService$CommandProcessor
    public varargs java.lang.Void doInBackground(java.lang.Void[])
    public void onCancelled(java.lang.Void)
    public void onPostExecute(java.lang.Void)
androidx.core.graphics.TypefaceCompatApi26Impl
    public java.lang.Class obtainFontFamily()
    public java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class)
    public java.lang.reflect.Method obtainFreezeMethod(java.lang.Class)
    public java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class)
    public final boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int)
androidx.core.provider.FontsContractCompat$5
    public int compare(byte[],byte[])
androidx.core.view.accessibility.AccessibilityNodeProviderCompat
    public java.lang.Object getProvider()
androidx.core.graphics.drawable.IconCompat
    public static java.lang.String typeToString(int)
    public static java.lang.String getResPackage(android.graphics.drawable.Icon)
    public static int getResId(android.graphics.drawable.Icon)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper
    public android.view.View onCreateActionView()
    public boolean onPerformDefaultAction()
    public boolean hasSubMenu()
    public void onPrepareSubMenu(android.view.SubMenu)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup
    public int getHorizontalOriginalOffset()
com.google.android.material.transformation.FabTransformationBehavior$3
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
androidx.fragment.app.Fragment$OnStartEnterTransitionListener
    public abstract void onStartEnterTransition()
    public abstract void startListening()
androidx.core.content.res.ColorStateListInflaterCompat
androidx.core.content.res.GradientColorInflaterCompat
com.google.android.material.textview.MaterialTextView
    public static boolean canApplyTextAppearanceLineHeight(android.content.Context)
    public static boolean viewAttrsHasLineHeight(android.content.Context,android.content.res.Resources$Theme,android.util.AttributeSet,int,int)
    public static int findViewAppearanceResourceId(android.content.res.Resources$Theme,android.util.AttributeSet,int,int)
androidx.viewpager2.widget.ScrollEventAdapter
androidx.recyclerview.widget.GapWorker$1
    public int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task)
androidx.appcompat.widget.TintContextWrapper
    public static boolean shouldWrap(android.content.Context)
    public void <init>(android.content.Context)
    public android.content.res.Resources$Theme getTheme()
    public void setTheme(int)
    public android.content.res.Resources getResources()
    public android.content.res.AssetManager getAssets()
    public final android.content.res.Resources mResources
    public final android.content.res.Resources$Theme mTheme
    public static java.util.ArrayList sCache
com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener
    public abstract void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper
    public android.view.View getWrappedView()
androidx.appcompat.app.AlertDialog$Builder
    public void <init>(android.content.Context,int)
    public android.content.Context getContext()
    public androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View)
    public androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener)
    public androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)
androidx.appcompat.app.WindowDecorActionBar
    public void setElevation(float)
    public void completeDeferredDestroyActionMode()
    public void onWindowVisibilityChanged(int)
    public void setDisplayHomeAsUpEnabled(boolean)
    public void setHomeButtonEnabled(boolean)
    public void setDisplayOptions(int,int)
    public int getNavigationMode()
    public void enableContentAnimations(boolean)
    public void showForSystem()
    public void hideForSystem()
    public void setHideOnContentScrollEnabled(boolean)
    public void doShow(boolean)
    public void doHide(boolean)
    public void onContentScrollStarted()
    public final androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
    public final void showForActionMode()
    public final void hideForActionMode()
    public final boolean shouldAnimateContextView()
    public android.app.Activity mActivity
    public android.app.Dialog mDialog
    public java.util.ArrayList mTabs
    public int mSavedTabPosition
    public static final synthetic boolean $assertionsDisabled
androidx.transition.FragmentTransitionSupport$4
    public final synthetic android.graphics.Rect val$epicenter
    public final synthetic androidx.transition.FragmentTransitionSupport this$0
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1
    public androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int)
androidx.appcompat.widget.ScrollingTabContainerView
    public final void performCollapse()
    public final android.widget.Spinner createSpinner()
    public static final android.view.animation.Interpolator sAlphaInterpolator
com.google.android.material.ripple.RippleUtils
    public static int doubleAlpha(int)
androidx.core.view.ViewCompat$UnhandledKeyEventManager
    public boolean preDispatch(android.view.KeyEvent)
androidx.fragment.app.FragmentTransitionCompat21$1
    public final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
com.google.android.material.appbar.ViewUtilsLollipop
    public static final int[] STATE_LIST_ANIM_ATTRS
androidx.appcompat.widget.AppCompatProgressBarHelper
    public android.graphics.Bitmap getSampleTile()
    public final android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable)
    public final android.graphics.drawable.shapes.Shape getDrawableShape()
androidx.appcompat.widget.AppCompatToggleButton
    public void <init>(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState$1
    public com.google.android.material.bottomnavigation.BottomNavigationView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.bottomnavigation.BottomNavigationView$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.bottomnavigation.BottomNavigationView$SavedState[] newArray(int)
android.support.v4.app.INotificationSideChannel$Stub
androidx.core.app.JobIntentService$JobServiceEngineImpl
    public android.os.IBinder compatGetBinder()
com.qy.MenuWindow$2
    public final synthetic com.qy.MenuWindow this$0
com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener
    public abstract void onLayoutChange(android.view.View,int,int,int,int)
androidx.viewpager2.adapter.FragmentViewHolder
androidx.loader.app.LoaderManagerImpl$LoaderObserver
androidx.core.graphics.drawable.TintAwareDrawable
    public abstract void setTint(int)
    public abstract void setTintList(android.content.res.ColorStateList)
    public abstract void setTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.view.menu.ListMenuPresenter
    public void <init>(int,int)
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public void saveHierarchyState(android.os.Bundle)
    public void restoreHierarchyState(android.os.Bundle)
com.google.android.material.shape.ShapePath$PathLineOperation
    public static synthetic float access$002(com.google.android.material.shape.ShapePath$PathLineOperation,float)
    public static synthetic float access$102(com.google.android.material.shape.ShapePath$PathLineOperation,float)
    public static synthetic float access$100(com.google.android.material.shape.ShapePath$PathLineOperation)
    public static synthetic float access$000(com.google.android.material.shape.ShapePath$PathLineOperation)
androidx.recyclerview.widget.GridLayoutManager
    public static int[] calculateItemBorders(int[],int,int)
    public final void clearPreLayoutSpanMappingCache()
    public final void cachePreLayoutSpanMapping()
    public final void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
    public final void guessMeasurement(float,int)
    public final void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean)
androidx.appcompat.view.menu.MenuItemImpl
    public boolean invoke()
    public int getOrdering()
    public java.lang.String getShortcutLabel()
    public void setExclusiveCheckable(boolean)
    public void setMenuInfo(android.view.ContextMenu$ContextMenuInfo)
    public void actionFormatChanged()
    public boolean shouldShowIcon()
    public boolean requestsActionButton()
    public boolean requiresActionButton()
    public boolean showsTextAsAction()
    public androidx.core.internal.view.SupportMenuItem setActionView(int)
    public androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
androidx.recyclerview.widget.RecyclerView$SavedState$1
    public androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int)
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState
    public com.google.android.material.ripple.RippleDrawableCompat newDrawable()
androidx.core.app.NavUtils
androidx.lifecycle.ViewModelStore
    public final void put(java.lang.String,androidx.lifecycle.ViewModel)
    public final androidx.lifecycle.ViewModel get(java.lang.String)
androidx.core.graphics.ColorUtils
    public static int compositeAlpha(int,int)
    public static final java.lang.ThreadLocal TEMP_ARRAY
androidx.core.graphics.TypefaceCompatBaseImpl
    public static long getUniqueKey(android.graphics.Typeface)
    public androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface)
    public final androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int)
    public final void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph
    public boolean contains(java.lang.Object)
    public void addEdge(java.lang.Object,java.lang.Object)
    public java.util.List getIncomingEdges(java.lang.Object)
    public java.util.List getOutgoingEdges(java.lang.Object)
    public boolean hasOutgoingEdges(java.lang.Object)
    public void clear()
    public java.util.ArrayList getSortedList()
    public final java.util.ArrayList getEmptyList()
    public final void poolList(java.util.ArrayList)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback
androidx.core.content.res.ResourcesCompat
androidx.activity.OnBackPressedDispatcher
    public androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)
androidx.fragment.app.FragmentManagerImpl$1
    public void handleOnBackPressed()
androidx.fragment.app.FragmentTransitionImpl
    public static java.lang.String findKeyForValue(java.util.Map,java.lang.String)
    public java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList)
    public void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map)
    public void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map)
    public void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map)
androidx.versionedparcelable.VersionedParcel
    public boolean isStream()
    public abstract void writeByteArray(byte[])
    public abstract void writeCharSequence(java.lang.CharSequence)
    public abstract void writeInt(int)
    public abstract void writeString(java.lang.String)
    public abstract void writeParcelable(android.os.Parcelable)
    public abstract void writeBoolean(boolean)
    public abstract int readInt()
    public abstract byte[] readByteArray()
    public abstract java.lang.CharSequence readCharSequence()
    public abstract android.os.Parcelable readParcelable()
    public abstract boolean readBoolean()
    public void writeBoolean(boolean,int)
    public void writeByteArray(byte[],int)
    public void writeCharSequence(java.lang.CharSequence,int)
    public void writeString(java.lang.String,int)
    public java.lang.String readString(java.lang.String,int)
    public byte[] readByteArray(byte[],int)
    public void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
    public androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
    public androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel)
    public void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel)
    public final void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable)
androidx.core.view.ViewCompat$3
    public java.lang.Boolean frameworkGet(android.view.View)
    public void frameworkSet(android.view.View,java.lang.Boolean)
    public boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)
androidx.recyclerview.widget.RecyclerView$ViewHolder
    public void flagRemovedAndOffsetPosition(int,int,boolean)
    public void saveOldPosition()
    public final int getOldPosition()
    public final long getItemId()
    public final int getItemViewType()
    public void unScrap()
    public void clearTmpDetachFlag()
    public void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean)
    public boolean needsUpdate()
    public boolean isAdapterPositionUnknown()
    public void clearPayload()
    public void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView)
    public void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView)
    public boolean shouldBeKeptAsChild()
    public boolean doesTransientStatePreventRecycling()
    public final void createPayloadsIfNeeded()
androidx.core.view.KeyEventDispatcher
    public static boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)
    public static boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent)
    public static boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent)
    public static android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog)
    public static boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent)
    static void <clinit>()
androidx.core.text.TextDirectionHeuristicCompat
    public abstract boolean isRtl(java.lang.CharSequence,int,int)
androidx.customview.widget.ExploreByTouchHelper$1
    public void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect)
androidx.core.app.SharedElementCallback
    public abstract void onSharedElementStart(java.util.List,java.util.List,java.util.List)
    public abstract void onSharedElementEnd(java.util.List,java.util.List,java.util.List)
    public abstract void onMapSharedElements(java.util.List,java.util.Map)
androidx.core.content.res.TypedArrayUtils
androidx.constraintlayout.solver.widgets.Helper
    public void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void removeAllIds()
com.google.android.material.stateful.ExtendableSavedState$1
    public com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.stateful.ExtendableSavedState[] newArray(int)
com.google.android.material.transformation.FabTransformationBehavior$1
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
android.support.v4.os.IResultReceiver
    public abstract void send(int,android.os.Bundle)
androidx.fragment.app.FragmentTransitionImpl$2
    public final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
androidx.recyclerview.widget.RecyclerView$ItemDecoration
    public void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)
    public void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)
    public void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.widget.OpReorderer
    public void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void swapMoveOp(java.util.List,int,int)
    public final void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final int getLastMoveOutOfOrder(java.util.List)
androidx.transition.ChangeBounds$8
    public final synthetic androidx.transition.ChangeBounds this$0
android.support.v4.os.ResultReceiver
    public final boolean mLocal
androidx.core.app.JobIntentService$JobWorkEnqueuer
android.support.constraint.solver.widgets.Chain
androidx.cardview.widget.CardViewApi17Impl
androidx.recyclerview.widget.PagerSnapHelper
androidx.transition.ViewUtilsApi21
    static void <clinit>()
    public static boolean sTryHiddenSetAnimationMatrix
androidx.lifecycle.LifecycleRegistry
    public static androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State)
    public void markState(androidx.lifecycle.Lifecycle$State)
    public void setCurrentState(androidx.lifecycle.Lifecycle$State)
    public androidx.lifecycle.Lifecycle$State getCurrentState()
    public final boolean isSynced()
    public final void pushParentState(androidx.lifecycle.Lifecycle$State)
    public final void forwardPass(androidx.lifecycle.LifecycleOwner)
    public final void backwardPass(androidx.lifecycle.LifecycleOwner)
androidx.fragment.app.FragmentManagerImpl$OpGenerator
    public abstract boolean generateOps(java.util.ArrayList,java.util.ArrayList)
com.qy.MenuWindow$10
    public final synthetic com.qy.MenuWindow this$0
androidx.core.view.PointerIconCompat
    public java.lang.Object getPointerIcon()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty
    public com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo get(com.google.android.material.circularreveal.CircularRevealWidget)
    public void set(com.google.android.material.circularreveal.CircularRevealWidget,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
androidx.appcompat.view.SupportMenuInflater$MenuState
    public void resetGroup()
    public void readGroup(android.util.AttributeSet)
    public void readItem(android.util.AttributeSet)
    public void addItem()
    public boolean hasAddedItem()
    public final char getShortcut(java.lang.String)
android.support.constraint.solver.Pools$Pool
androidx.fragment.app.FragmentHostCallback
    public void <init>(android.app.Activity,android.content.Context,android.os.Handler,int)
    public void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
    public android.view.LayoutInflater onGetLayoutInflater()
    public abstract java.lang.Object onGetHost()
    public void onSupportInvalidateOptionsMenu()
    public boolean onHasWindowAnimations()
    public int onGetWindowAnimations()
    public android.view.View onFindViewById(int)
    public boolean onHasView()
    public android.app.Activity getActivity()
    public android.content.Context getContext()
    public android.os.Handler getHandler()
    public void onAttachFragment(androidx.fragment.app.Fragment)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams
    public int getSpanIndex()
    public int getSpanSize()
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback
    public androidx.appcompat.view.menu.ShowableListMenu getPopup()
android.support.constraint.solver.widgets.Analyzer
    public static boolean determineGroups(android.support.constraint.solver.widgets.ConstraintWidget,java.util.List,boolean)
    public static void invalidate(android.support.constraint.solver.widgets.ConstraintWidgetContainer,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintWidgetGroup)
    public static void setConnection(android.support.constraint.solver.widgets.ConstraintAnchor)
    public static void singleGroup(android.support.constraint.solver.widgets.ConstraintWidgetContainer)
    public static void updateSizeDependentWidgets(android.support.constraint.solver.widgets.ConstraintWidget,int,int)
    public static void flush(android.content.res.Resources)
    public static void flushLollipops(android.content.res.Resources)
    public static void flushMarshmallows(android.content.res.Resources)
    public static void flushNougats(android.content.res.Resources)
    public static boolean determineGroups(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.List,boolean)
    public static void invalidate(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup)
    public static void setConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public static void singleGroup(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer)
    public static void updateSizeDependentWidgets(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,int)
    public static java.lang.String permissionToOp(java.lang.String)
    public static int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)
    public static boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
    public static void navigateUpTo(android.app.Activity,android.content.Intent)
    public static java.lang.String getParentActivityName(android.app.Activity)
    public static int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)
    public static android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
    public static android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
    public static int modulateColorAlpha(int,float)
    public static androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
    public static androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
    public static int getType(android.content.res.TypedArray,int)
    public static androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
    public static android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)
    public static android.graphics.Shader$TileMode parseTileMode(int)
    public static android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static android.graphics.Typeface getFont(android.content.Context,int)
    public static android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)
    public static android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
    public static boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)
    public static float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)
    public static boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)
    public static int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
    public static int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
    public static androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)
    public static android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)
    public static android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)
    public static int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
    public static java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
    public static android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
    public static android.content.res.TypedArray obtainAttributes1(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
    public static float[] copyOfRange(float[],int,int)
    public static android.graphics.Path createPathFromPathData(java.lang.String)
    public static androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)
    public static androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[])
    public static boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
    public static void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
    public static int nextStart(java.lang.String,int)
    public static void addNode(java.util.ArrayList,char,float[])
    public static float[] getFloats(java.lang.String)
    public static void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult)
    public static java.nio.ByteBuffer mmap(java.io.File)
    public static java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)
    public static void closeQuietly(java.io.Closeable)
    public static void jumpToCurrentState(android.graphics.drawable.Drawable)
    public static void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
    public static void setHotspot(android.graphics.drawable.Drawable,float,float)
    public static void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
    public static void setTint(android.graphics.drawable.Drawable,int)
    public static void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
    public static void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
    public static int getAlpha(android.graphics.drawable.Drawable)
    public static void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
    public static boolean canApplyTheme(android.graphics.drawable.Drawable)
    public static android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
    public static void clearColorFilter(android.graphics.drawable.Drawable)
    public static void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)
    public static float clamp(float,float,float)
    public static void beginSection(java.lang.String)
    public static void endSection()
    public static void checkArgument(boolean,java.lang.Object)
    public static void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
    public static void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
    public static void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
    public static android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider)
    public static void setContentDescription(android.view.MenuItem,java.lang.CharSequence)
    public static void setTooltipText(android.view.MenuItem,java.lang.CharSequence)
    public static void setNumericShortcut(android.view.MenuItem,char,int)
    public static void setAlphabeticShortcut(android.view.MenuItem,char,int)
    public static void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
    public static void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
    public static boolean isFromSource(android.view.MotionEvent,int)
    public static boolean isTransitionGroup(android.view.ViewGroup)
    public static boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)
    public static boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)
    public static void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)
    public static void onStopNestedScroll(android.view.ViewParent,android.view.View,int)
    public static void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[])
    public static void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int)
    public static boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
    public static boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
    public static void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
    public static int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
    public static void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
    public static void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
    public static void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
    public static void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
    public static android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
    public static void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
    public static android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
    public static void onPull(android.widget.EdgeEffect,float,float)
    public static android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
    public static void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
    public static android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
    public static void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
    public static void scrollListBy(android.widget.ListView,int)
    public static void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
    public static void setWindowLayoutType(android.widget.PopupWindow,int)
    public static java.lang.reflect.Field retrieveField(java.lang.String)
    public static int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView)
    public static void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
    public static void setTextAppearance(android.widget.TextView,int)
    public static int getFirstBaselineToTopHeight(android.widget.TextView)
    public static int getLastBaselineToBottomHeight(android.widget.TextView)
    public static void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)
    public static android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView)
    public static int getTextDirection(android.text.TextDirectionHeuristic)
    public static void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
    public static void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
    public static java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean)
    public static java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean)
    public static java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean)
    public static java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int)
    public static boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)
    public static boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect)
    public static int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)
    public static int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)
    public static int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)
    public static void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter)
    public static void pause(android.animation.Animator)
    public static void resume(android.animation.Animator)
    public static android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path)
    public static void suppressLayout(android.view.ViewGroup,boolean)
    public static void cancelLayoutTransition(android.animation.LayoutTransition)
    public static android.view.animation.Interpolator loadInterpolator(android.content.Context,int)
    public static android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser)
    public static android.animation.Animator loadAnimator(android.content.Context,int)
    public static android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int)
    public static android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)
    public static android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)
    public static void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)
    public static void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)
    public static void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)
    public static android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)
    public static android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)
    public static android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
    public static int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
    public static int inferValueTypeFromValues(android.content.res.TypedArray,int,int)
    public static android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
    public static android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)
    public static void distributeKeyframes(android.animation.Keyframe[],float,int,int)
    public static android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)
    public static android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser)
    public static android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)
    public static boolean isColorType(int)
    public static int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int)
    public static android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget)
    public static int getColor(android.content.Context,int,java.lang.String)
    public static int getColor(android.view.View,int,int)
    public static int layer(int,int)
    public static java.lang.String getMonthDayOfWeekDay(long)
    public static java.lang.String getMonthDayOfWeekDay(long,java.util.Locale)
    public static java.lang.String getYearMonthDayOfWeekDay(long)
    public static java.lang.String getYearMonthDayOfWeekDay(long,java.util.Locale)
    public static android.icu.util.TimeZone getUtcAndroidTimeZone()
    public static java.text.DateFormat getFormat(int,java.util.Locale)
    public static java.text.SimpleDateFormat getSimpleFormat(java.lang.String,java.util.Locale)
    public static android.icu.text.DateFormat getAbbrMonthWeekdayDayFormat(java.util.Locale)
    public static android.icu.text.DateFormat getYearAbbrMonthWeekdayDayFormat(java.util.Locale)
    public static java.text.DateFormat getFullFormat(java.util.Locale)
    public static java.text.SimpleDateFormat getYearMonthFormat()
    public static java.text.SimpleDateFormat getYearMonthFormat(java.util.Locale)
    public static boolean isLayoutRtl(android.view.View)
    public static float distanceToFurthestCorner(float,float,float,float,float,float)
    public static float max(float,float,float,float)
    public static int resolveOrThrow(android.view.View,int)
    public static com.google.android.material.resources.TextAppearance getTextAppearance(android.content.Context,android.content.res.TypedArray,int)
    public static int getDimensionPixelSize(android.content.Context,android.content.res.TypedArray,int,int)
    public static int getIndexWithValue(android.content.res.TypedArray,int,int)
    public static boolean shouldLoadFontSynchronously()
    public static com.google.android.material.shape.CornerTreatment createDefaultCornerTreatment()
    public static com.google.android.material.shape.EdgeTreatment createDefaultEdgeTreatment()
    public static void setParentAbsoluteElevation(android.view.View)
    public static void setTabWidgetTitle(android.widget.TabWidget,int,java.lang.String)
    public static java.lang.reflect.Method sSetLayoutDirectionMethod
    public static boolean sSetLayoutDirectionMethodFetched
    public static java.lang.reflect.Method sGetLayoutDirectionMethod
    public static boolean sGetLayoutDirectionMethodFetched
    public static java.lang.reflect.Field sLayoutInflaterFactory2Field
    public static boolean sCheckedField
    public static java.lang.reflect.Field sButtonDrawableField
    public static boolean sButtonDrawableFieldFetched
    public static java.lang.reflect.Method sSetWindowLayoutTypeMethod
    public static boolean sSetWindowLayoutTypeMethodAttempted
    public static java.lang.reflect.Field sOverlapAnchorField
    public static boolean sOverlapAnchorFieldAttempted
    public static java.lang.reflect.Field sMaximumField
    public static boolean sMaximumFieldFetched
    public static java.lang.reflect.Field sMaxModeField
    public static boolean sMaxModeFieldFetched
    public static android.animation.LayoutTransition sEmptyLayoutTransition
    public static java.lang.reflect.Field sLayoutSuppressedField
    public static boolean sLayoutSuppressedFieldFetched
    public static java.lang.reflect.Method sCancelMethod
    public static boolean sCancelMethodFetched
    public static boolean shouldLoadFontSynchronously
androidx.fragment.app.FragmentTransaction
    public androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String)
    public void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)
    public androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment)
    public boolean mAllowAddToBackStack
androidx.core.view.TintableBackgroundView
    public abstract void setSupportBackgroundTintList(android.content.res.ColorStateList)
    public abstract android.content.res.ColorStateList getSupportBackgroundTintList()
    public abstract void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
    public abstract android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.stateful.ExtendableSavedState
    public void <init>(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener
    public final void resolveMethod(android.content.Context,java.lang.String)
com.google.android.material.datepicker.SmoothCalendarLayoutManager$1
    public final synthetic com.google.android.material.datepicker.SmoothCalendarLayoutManager this$0
com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper
    public void onTranslationChanged()
    public void onScaleChanged()
    public final com.google.android.material.animation.TransformationCallback listener
androidx.appcompat.view.menu.StandardMenuPopup
    public final boolean tryShow()
com.google.android.material.switchmaterial.SwitchMaterial
    public static final int DEF_STYLE_RES
androidx.core.R$attr
com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker
androidx.core.content.res.GrowingArrayUtils
androidx.appcompat.widget.ViewStubCompat$OnInflateListener
    public abstract void onInflate(androidx.appcompat.widget.ViewStubCompat,android.view.View)
androidx.viewpager.widget.ViewPager$1
    public int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1
    public final synthetic androidx.appcompat.widget.AppCompatSpinner val$this$0
androidx.core.view.ViewCompat$AccessibilityViewProperty
    public void set(android.view.View,java.lang.Object)
    public final int mContentChangeType
androidx.appcompat.view.menu.MenuItemWrapperICS
    public void setExclusiveCheckable(boolean)
androidx.drawerlayout.widget.DrawerLayout
    public static java.lang.String gravityToString(int)
    public static boolean hasOpaqueBackground(android.view.View)
    public final boolean isInBoundsOfChild(float,float,android.view.View)
    public final boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View)
    public final android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View)
    public final void resolveShadowDrawables()
    public final android.graphics.drawable.Drawable resolveLeftShadow()
    public final android.graphics.drawable.Drawable resolveRightShadow()
    public final boolean hasPeekingDrawer()
    public final boolean hasVisibleDrawer()
    public final androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate
    public final androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback
    public final androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback
    public boolean mDisallowInterceptRequested
    public static final int[] THEME_ATTRS
androidx.customview.widget.FocusStrategy$BoundsAdapter
    public abstract void obtainBounds(java.lang.Object,android.graphics.Rect)
androidx.transition.RectEvaluator
    public android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect)
com.google.android.material.tabs.TabLayout$TabView
    public static synthetic void access$000(com.google.android.material.tabs.TabLayout$TabView,android.content.Context)
    public static synthetic void access$300(com.google.android.material.tabs.TabLayout$TabView,android.graphics.Canvas)
    public void reset()
    public final void updateOrientation()
    public final void drawBackground(android.graphics.Canvas)
    public final void inflateAndAddDefaultIconView()
    public final void inflateAndAddDefaultTextView()
    public final android.widget.FrameLayout createPreApi18BadgeAnchorRoot()
    public final void addOnLayoutChangeListener(android.view.View)
    public final float approximateLineWidth(android.text.Layout,int,float)
androidx.activity.ImmLeaksCleaner
    public void <init>(android.app.Activity)
    public static void initializeReflectiveFields()
    static void <clinit>()
androidx.appcompat.widget.ScrollingTabContainerView$TabView
    public void bindTab(androidx.appcompat.app.ActionBar$Tab)
    public androidx.appcompat.app.ActionBar$Tab getTab()
com.google.android.material.circularreveal.CircularRevealLinearLayout
    public final com.google.android.material.circularreveal.CircularRevealHelper helper
androidx.viewpager.widget.PagerAdapter
    public android.database.DataSetObserver mViewPagerObserver
com.google.android.material.shape.ShapePath
    public float getEndX()
    public float getEndY()
    public final void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation,float,float)
    public final float getCurrentShadowAngle()
    public final float getEndShadowAngle()
    public final void setStartX(float)
    public final void setStartY(float)
    public final void setEndX(float)
    public final void setEndY(float)
    public final void setCurrentShadowAngle(float)
    public final void setEndShadowAngle(float)
androidx.core.view.ViewCompat$5
    public java.lang.Boolean frameworkGet(android.view.View)
    public void frameworkSet(android.view.View,java.lang.Boolean)
    public boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)
androidx.core.text.ICUCompat
androidx.appcompat.widget.ToolbarWidgetWrapper
    public void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int)
    public void setDefaultNavigationContentDescription(int)
    public android.view.ViewGroup getViewGroup()
    public boolean hasExpandedActionView()
    public void collapseActionView()
    public void setWindowCallback(android.view.Window$Callback)
    public java.lang.CharSequence getTitle()
    public void setTitle(java.lang.CharSequence)
    public void setSubtitle(java.lang.CharSequence)
    public void setIcon(int)
    public void setIcon(android.graphics.drawable.Drawable)
    public void setLogo(int)
    public boolean canShowOverflowMenu()
    public boolean isOverflowMenuShowing()
    public boolean isOverflowMenuShowPending()
    public boolean showOverflowMenu()
    public boolean hideOverflowMenu()
    public void setMenuPrepared()
    public void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
    public void dismissPopupMenus()
    public int getDisplayOptions()
    public void setCollapsible(boolean)
    public int getNavigationMode()
    public void setCustomView(android.view.View)
    public void setNavigationIcon(android.graphics.drawable.Drawable)
    public void setNavigationContentDescription(java.lang.CharSequence)
    public void setNavigationContentDescription(int)
    public void setVisibility(int)
    public final int detectDisplayOptions()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4
    public java.lang.Float evaluate(float,java.lang.Float,java.lang.Float)
    public final synthetic com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout
    public com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener onLayoutChangeListener
    public com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener onAttachStateChangeListener
androidx.core.provider.FontsContractCompat$1
    public androidx.core.provider.FontsContractCompat$TypefaceResult call()
android.support.constraint.solver.widgets.Rectangle
com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener
    public void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)
androidx.core.text.PrecomputedTextCompat
    public androidx.core.text.PrecomputedTextCompat$Params getParams()
    public static final java.lang.Object sLock
    public static java.util.concurrent.Executor sExecutor
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
    public abstract void addPosition(int,int)
com.google.android.material.internal.ParcelableSparseBooleanArray$1
    public com.google.android.material.internal.ParcelableSparseBooleanArray createFromParcel(android.os.Parcel)
    public com.google.android.material.internal.ParcelableSparseBooleanArray[] newArray(int)
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate
com.google.android.material.shape.ShapePath$PathArcOperation
    public final float getLeft()
    public final float getTop()
    public final float getRight()
    public final float getBottom()
    public final void setLeft(float)
    public final void setTop(float)
    public final void setRight(float)
    public final void setBottom(float)
    public final float getStartAngle()
    public final float getSweepAngle()
    public final void setStartAngle(float)
    public final void setSweepAngle(float)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags
    public void setBounds(int,int,int,int)
    public void addFlags(int)
    public void resetFlags()
androidx.transition.ChangeBounds$6
    public void set(android.view.View,android.graphics.PointF)
    public android.graphics.PointF get(android.view.View)
com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker
com.google.android.material.resources.TextAppearance
    public static synthetic android.graphics.Typeface access$002(com.google.android.material.resources.TextAppearance,android.graphics.Typeface)
    public static synthetic boolean access$102(com.google.android.material.resources.TextAppearance,boolean)
    public static synthetic android.graphics.Typeface access$000(com.google.android.material.resources.TextAppearance)
    public android.graphics.Typeface getFont(android.content.Context)
    public void getFontAsync(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback)
    public android.graphics.Typeface getFallbackFont()
    public final android.content.res.ColorStateList textColorHint
    public final android.content.res.ColorStateList textColorLink
    public final boolean textAllCaps
com.android.tools.r8.GeneratedOutlineSupport
    public static java.lang.String outline4(org.xmlpull.v1.XmlPullParser,java.lang.StringBuilder,java.lang.String)
com.google.android.material.tabs.TabLayout$SlidingTabIndicator
androidx.appcompat.view.menu.BaseMenuPresenter
    public void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public void addItemView(android.view.View,int)
    public boolean filterLeftoverView(android.view.ViewGroup,int)
    public androidx.appcompat.view.menu.MenuPresenter$Callback getCallback()
    public androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup)
    public abstract void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
    public abstract boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
    public void setId(int)
    public android.view.LayoutInflater mInflater
androidx.viewpager2.widget.ViewPager2$SavedState$1
    public androidx.viewpager2.widget.ViewPager2$SavedState createFromParcel(android.os.Parcel)
    public androidx.viewpager2.widget.ViewPager2$SavedState[] newArray(int)
androidx.viewpager2.widget.ViewPager2
    static void <clinit>()
    public void requestTransform()
    public final void registerCurrentItemDataSetTracker(androidx.recyclerview.widget.RecyclerView$Adapter)
    public final void unregisterCurrentItemDataSetTracker(androidx.recyclerview.widget.RecyclerView$Adapter)
    public androidx.recyclerview.widget.RecyclerView$AdapterDataObserver mCurrentItemDataSetChangeObserver
    public androidx.recyclerview.widget.PagerSnapHelper mPagerSnapHelper
    public androidx.viewpager2.widget.ScrollEventAdapter mScrollEventAdapter
    public androidx.viewpager2.widget.CompositeOnPageChangeCallback mPageChangeEventDispatcher
    public androidx.viewpager2.widget.FakeDrag mFakeDragger
    public androidx.viewpager2.widget.PageTransformerAdapter mPageTransformerAdapter
    public boolean mUserInputEnabled
    public androidx.viewpager2.widget.ViewPager2$AccessibilityProvider mAccessibilityProvider
    public static boolean sFeatureEnhancedA11yEnabled
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry
    public androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries()
androidx.core.view.LayoutInflaterCompat
androidx.appcompat.widget.SwitchCompat
    public static float constrain(float,float,float)
    public final boolean hitThumb(float,float)
    public final void cancelSuperTouch(android.view.MotionEvent)
    public final void stopDrag(android.view.MotionEvent)
    public final void animateThumbToCheckedState(boolean)
    public final void cancelPositionAnimator()
androidx.core.view.MotionEventCompat
androidx.core.app.JobIntentService$CompatJobEngine
    public abstract android.os.IBinder compatGetBinder()
    public abstract androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()
androidx.core.view.NestedScrollingChildHelper
    public void setNestedScrollingEnabled(boolean)
    public boolean isNestedScrollingEnabled()
    public boolean hasNestedScrollingParent()
    public boolean startNestedScroll(int)
    public void stopNestedScroll()
    public boolean dispatchNestedScroll(int,int,int,int,int[],int)
    public void dispatchNestedScroll(int,int,int,int,int[],int,int[])
    public boolean dispatchNestedPreScroll(int,int,int[],int[])
    public final void setNestedScrollingParentForType(int,android.view.ViewParent)
    public final int[] getTempNestedScrollConsumed()
androidx.appcompat.resources.R$styleable
androidx.appcompat.view.StandaloneActionMode
    public boolean mFocusable
androidx.fragment.app.FragmentManager
    public abstract boolean executePendingTransactions()
    public void setFragmentFactory(androidx.fragment.app.FragmentFactory)
androidx.core.view.AccessibilityDelegateCompat
    public android.view.View$AccessibilityDelegate getBridge()
    public final boolean performClickableSpanAction(int,android.view.View)
    public final boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)
com.google.android.material.circularreveal.cardview.CircularRevealCardView
    public final com.google.android.material.circularreveal.CircularRevealHelper helper
com.google.android.material.internal.CollapsingTextHelper
    public static boolean isClose(float,float)
    public void setTextSizeInterpolator(android.animation.TimeInterpolator)
    public void setPositionInterpolator(android.animation.TimeInterpolator)
    public void setExpandedTextSize(float)
    public void setExpandedBounds(int,int,int,int)
    public void setCollapsedBounds(int,int,int,int)
    public void getCollapsedTextActualBounds(android.graphics.RectF)
    public float getExpandedTextHeight()
    public void setExpandedTextGravity(int)
    public int getExpandedTextGravity()
    public int getCollapsedTextGravity()
    public android.graphics.Typeface getCollapsedTypeface()
    public android.graphics.Typeface getExpandedTypeface()
    public final boolean isStateful()
    public float getExpansionFraction()
    public java.lang.CharSequence getText()
    public android.content.res.ColorStateList getCollapsedTextColor()
    public final void getTextPaintExpanded(android.text.TextPaint)
    public final void getTextPaintCollapsed(android.text.TextPaint)
    public final boolean setCollapsedTypefaceInternal(android.graphics.Typeface)
    public final boolean setExpandedTypefaceInternal(android.graphics.Typeface)
    public final void calculateCurrentOffsets()
    public final int getCurrentExpandedTextColor()
    public final void calculateBaseOffsets()
    public final void interpolateBounds(float)
    public final void ensureExpandedTexture()
    public final void clearTexture()
androidx.loader.content.Loader
androidx.appcompat.widget.Toolbar$OnMenuItemClickListener
    public abstract boolean onMenuItemClick(android.view.MenuItem)
androidx.core.graphics.drawable.WrappedDrawableApi14
    public void <init>(android.graphics.drawable.Drawable)
    public final android.graphics.drawable.Drawable getWrappedDrawable()
    public final void updateLocalState(android.content.res.Resources)
    public final androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()
com.google.android.material.transformation.ExpandableBehavior
    public static synthetic int access$000(com.google.android.material.transformation.ExpandableBehavior)
androidx.appcompat.widget.AppCompatRadioButton
    public void <init>(android.content.Context,android.util.AttributeSet)
